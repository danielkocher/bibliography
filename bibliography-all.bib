% Encoding: UTF-8

@InProceedings{roediger-icde-2014,
  author    = {Wolf R{\"{o}}diger and Tobias M{\"{u}}hlbauer and Philipp Unterbrunner and Angelika Reiser and Alfons Kemper and Thomas Neumann},
  title     = {{Locality-Sensitive Operators for Parallel Main-Memory Database Clusters}},
  booktitle = {{IEEE} 30th International Conference on Data Engineering, Chicago, {ICDE} 2014, IL, USA, March 31 - April 4, 2014},
  year      = {2014},
  pages     = {592--603},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.org/rec/bib/conf/icde/RodigerMURK014},
  crossref  = {DBLP:conf/icde/2014},
  doi       = {10.1109/ICDE.2014.6816684},
  file      = {Locality-Sensitive Operators for Parallel Main-Memory Database Clusters:roediger-icde-2014.pdf:PDF},
  timestamp = {Wed, 17 May 2017 10:55:11 +0200},
  url       = {https://doi.org/10.1109/ICDE.2014.6816684},
}

@InProceedings{augsten-icde-2010,
  author    = {N. Augsten and D. Barbosa and M. B{\"o}hlen and T. Palpanas},
  title     = {{TASM: Top-k Approximate Subtree Matching}},
  booktitle = {2010 IEEE 26th International Conference on Data Engineering (ICDE 2010)},
  year      = {2010},
  pages     = {353-364},
  month     = {March},
  doi       = {10.1109/ICDE.2010.5447905},
  file      = {TASM\: Top-k Approximate Subtree Matching:augsten-icde-2010.pdf:PDF},
  issn      = {1063-6382},
  keywords  = {XML;computational complexity;tree searching;XML trees;cubic runtime;prefix ring buffer;quadratic space complexity;query tree;top-k approximate subtree matching;tree edit distance;Cleaning;Computer science;Extraterrestrial measurements;Performance evaluation;Runtime;Upper bound;XML},
}

@Article{augsten-tkde-2011,
  author   = {N. Augsten and D. Barbosa and M. Bohlen and T. Palpanas},
  title    = {{Efficient Top-k Approximate Subtree Matching in Small Memory}},
  journal  = {IEEE Transactions on Knowledge and Data Engineering},
  year     = {2011},
  volume   = {23},
  number   = {8},
  pages    = {1123-1137},
  month    = {Aug},
  issn     = {1041-4347},
  doi      = {10.1109/TKDE.2010.245},
  file     = {Efficient Top-k Approximate Subtree Matching in Small Memory:augsten-tkde-2011.pdf:PDF},
  keywords = {XML;query processing;trees (mathematics);TASM-postorder;XML documents;XML trees;canonical tree edit distance;document tree;prefix ring buffer;query tree;small memory;space complexity;top-k approximate subtree matching problem;Complexity theory;Electronic mail;Heuristic algorithms;Matrix decomposition;Runtime;Upper bound;XML;Approximate subtree matching;XML;similarity search.;subtree pruning;top-k queries;tree edit distance},
}

@InProceedings{cohen-sigmod-2013,
  author    = {Cohen, Sara},
  title     = {{Indexing for Subtree Similarity-Search Using Edit Distance}},
  booktitle = {Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data},
  year      = {2013},
  series    = {SIGMOD '13},
  pages     = {49--60},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2463716},
  doi       = {10.1145/2463676.2463716},
  file      = {Indexing for Subtree Similarity-Search Using Edit Distance:cohen-sigmod-2013.pdf:PDF},
  isbn      = {978-1-4503-2037-5},
  keywords  = {edit distance, indexing},
  location  = {New York, New York, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2463676.2463716},
}

@InProceedings{cohen-icde-2014,
  author    = {S. Cohen and N. Or},
  title     = {{A General Algorithm for Subtree Similarity-Search}},
  booktitle = {2014 IEEE 30th International Conference on Data Engineering},
  year      = {2014},
  pages     = {928-939},
  month     = {March},
  doi       = {10.1109/ICDE.2014.6816712},
  file      = {A General Algorithm for Subtree Similarity-Search:cohen-icde-2014.pdf:PDF},
  issn      = {1063-6382},
  keywords  = {computational complexity;tree searching;NP-complete;subtree similarity-search problem;tree distance function;unordered trees;Context;Databases;Heuristic algorithms;Polynomials;Runtime;TV;Vegetation},
}

@Article{ribeiro-infsys-2011,
  author     = {Ribeiro, Leonardo Andrade and H\"{a}rder, Theo},
  title      = {{Generalizing Prefix Filtering to Improve Set Similarity Joins}},
  journal    = {Inf. Syst.},
  year       = {2011},
  volume     = {36},
  number     = {1},
  pages      = {62--78},
  month      = mar,
  issn       = {0306-4379},
  acmid      = {1869317},
  address    = {Oxford, UK, UK},
  doi        = {10.1016/j.is.2010.07.003},
  file       = {Generalizing Prefix Filtering to Improve Set Similarity Joins:ribeiro-infsys-2011.pdf:PDF},
  issue_date = {March, 2011},
  keywords   = {Advanced query processing, Set similarity join},
  numpages   = {17},
  publisher  = {Elsevier Science Ltd.},
  url        = {http://dx.doi.org/10.1016/j.is.2010.07.003},
}

@InProceedings{xiao-www-2008,
  author    = {Xiao, Chuan and Wang, Wei and Lin, Xuemin and Yu, Jeffrey Xu},
  title     = {{Efficient Similarity Joins for Near Duplicate Detection}},
  booktitle = {Proceedings of the 17th International Conference on World Wide Web},
  year      = {2008},
  series    = {WWW '08},
  pages     = {131--140},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1367516},
  doi       = {10.1145/1367497.1367516},
  file      = {Efficient Similarity Joins for Near Duplicate Detection:xiao-www-2008.pdf:PDF},
  isbn      = {978-1-60558-085-2},
  keywords  = {near duplicate detection, similarity join},
  location  = {Beijing, China},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/1367497.1367516},
}

@InProceedings{xiao-icde-2009,
  author    = {Xiao, Chuan and Wang, Wei and Lin, Xuemin and Shang, Haichuan},
  title     = {{Top-k Set Similarity Joins}},
  booktitle = {Proceedings of the 2009 IEEE International Conference on Data Engineering},
  year      = {2009},
  series    = {ICDE '09},
  pages     = {916--927},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {1547327},
  doi       = {10.1109/ICDE.2009.111},
  file      = {Top-k Set Similarity Joins:xiao-icde-2009.pdf:PDF},
  isbn      = {978-0-7695-3545-6},
  numpages  = {12},
  url       = {http://dx.doi.org/10.1109/ICDE.2009.111},
}

@InProceedings{guha-sigmod-2002,
  author    = {Guha, Sudipto and Jagadish, H. V. and Koudas, Nick and Srivastava, Divesh and Yu, Ting},
  title     = {{Approximate XML Joins}},
  booktitle = {Proceedings of the 2002 ACM SIGMOD International Conference on Management of Data},
  year      = {2002},
  series    = {SIGMOD '02},
  pages     = {287--298},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {564725},
  doi       = {10.1145/564691.564725},
  file      = {Approximate XML Joins:guha-sigmod-2002.pdf:PDF},
  isbn      = {1-58113-497-5},
  location  = {Madison, Wisconsin},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/564691.564725},
}

@Article{li-sigmod-2013,
  author     = {Li, Fei and Wang, Hongzhi and Li, Jianzhong and Gao, Hong},
  title      = {{A Survey on Tree Edit Distance Lower Bound Estimation Techniques for Similarity Join on XML Data}},
  journal    = {SIGMOD Rec.},
  year       = {2014},
  volume     = {42},
  number     = {4},
  pages      = {29--39},
  month      = feb,
  issn       = {0163-5808},
  acmid      = {2590994},
  address    = {New York, NY, USA},
  doi        = {10.1145/2590989.2590994},
  file       = {A Survey on Tree Edit Distance Lower Bound Estimation Techniques for Similarity Join on XML Data:li-sigmod-2013.pdf:PDF},
  issue_date = {December 2013},
  numpages   = {11},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2590989.2590994},
}

@InProceedings{ashraf-imcom-2015,
  author    = {Ashraf, Shafaet and Sarwar, Sheikh Muhammad and Hassan, Md. Abeed and Tareeq, Saifuddin Md. and Fariha, Anna},
  title     = {An Efficient Method for Extracting Subtrees Against Forest Query},
  booktitle = {Proceedings of the 9th International Conference on Ubiquitous Information Management and Communication},
  year      = {2015},
  series    = {IMCOM '15},
  pages     = {98:1--98:7},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2701195},
  articleno = {98},
  doi       = {10.1145/2701126.2701195},
  file      = {An Efficient Method for Extracting Subtrees Against Forest Query:ashraf-imcom-2015.pdf:PDF},
  isbn      = {978-1-4503-3377-1},
  keywords  = {XML retrieval, data structure, forest query},
  location  = {Bali, Indonesia},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/2701126.2701195},
}

@InBook{li-ssdbm-2008,
  pages     = {131--149},
  title     = {{Efficient Similarity Search for Tree-Structured Data}},
  publisher = {Springer Berlin Heidelberg},
  year      = {2008},
  author    = {Li, Guoliang and Liu, Xuhui and Feng, Jianhua and Zhou, Lizhu},
  editor    = {Lud{\"a}scher, Bertram and Mamoulis, Nikos},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-540-69497-7},
  abstract  = {Tree-structured data are becoming ubiquitous nowadays and manipulating them based on similarity is essential for many applications. Although similarity search on textual data has been extensively studied, searching for similar trees is still an open problem due to the high complexity of computing the similarity between trees, especially for large numbers of tress. In this paper, we propose to transform tree-structured data into strings with a one-to-one mapping. We prove that the edit distance of the corresponding strings forms a bound for the similarity measures between trees, including tree edit distance, largest common subtrees and smallest common super-trees. Based on the theoretical analysis, we can employ any existing algorithm of approximate string search for effective similarity search on trees. Moreover, we embed the bound into a filter-and-refine framework for facilitating similarity search on tree-structured data. The experimental results show that our algorithm achieves high performance and outperforms state-of-the-art methods significantly. Our method is especially suitable for accelerating similarity query processing on large numbers of trees in massive datasets.},
  booktitle = {Scientific and Statistical Database Management: 20th International Conference, SSDBM 2008, Hong Kong, China, July 9-11, 2008 Proceedings},
  doi       = {10.1007/978-3-540-69497-7_11},
  file      = {Efficient Similarity Search for Tree-Structured Data:li-ssdbm-2008.pdf:PDF},
  url       = {https://doi.org/10.1007/978-3-540-69497-7_11},
}

@Article{xiao-vldb-2008,
  author     = {Xiao, Chuan and Wang, Wei and Lin, Xuemin},
  title      = {{Ed-Join: An Efficient Algorithm for Similarity Joins with Edit Distance Constraints}},
  journal    = {Proc. VLDB Endow.},
  year       = {2008},
  volume     = {1},
  number     = {1},
  pages      = {933--944},
  month      = aug,
  issn       = {2150-8097},
  acmid      = {1453957},
  doi        = {10.14778/1453856.1453957},
  file       = {Ed-Join\: An Efficient Algorithm for Similarity Joins with Edit Distance Constraints:xiao-vldb-2008.pdf:PDF},
  issue_date = {August 2008},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/1453856.1453957},
}

@InProceedings{zhao-icde-2012,
  author    = {Zhao, Xiang and Xiao, Chuan and Lin, Xuemin and Wang, Wei},
  title     = {{Efficient Graph Similarity Joins with Edit Distance Constraints}},
  booktitle = {Proceedings of the 2012 IEEE 28th International Conference on Data Engineering},
  year      = {2012},
  series    = {ICDE '12},
  pages     = {834--845},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2310415},
  doi       = {10.1109/ICDE.2012.91},
  file      = {Efficient Graph Similarity Joins with Edit Distance Constraints:zhao-icde-2012.pdf:PDF},
  isbn      = {978-0-7695-4747-3},
  numpages  = {12},
  url       = {http://dx.doi.org/10.1109/ICDE.2012.91},
}

@Article{tang-vldb-2015,
  author     = {Tang, Yu and Cai, Yilun and Mamoulis, Nikos},
  title      = {{Scaling Similarity Joins over Tree-structured Data}},
  journal    = {Proc. VLDB Endow.},
  year       = {2015},
  volume     = {8},
  number     = {11},
  pages      = {1130--1141},
  month      = jul,
  issn       = {2150-8097},
  acmid      = {2809976},
  doi        = {10.14778/2809974.2809976},
  file       = {Scaling Similarity Joins over Tree-structured Data:tang-vldb-2015.pdf:PDF},
  issue_date = {July 2015},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2809974.2809976},
}

@InBook{flouri-iwoca-2013,
  pages     = {269--282},
  title     = {{An Optimal Algorithm for Computing All Subtree Repeats in Trees}},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Flouri, Tom{\'a}{\v{s}} and Kobert, Kassian and Pissis, Solon P. and Stamatakis, Alexandros},
  editor    = {Lecroq, Thierry and Mouchard, Laurent},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-642-45278-9},
  abstract  = {Given a labeled tree T, our goal is to group repeating subtrees of T into equivalence classes with respect to their topologies and the node labels. We present an explicit, simple, and time-optimal algorithm for solving this problem for unrooted unordered labeled trees, and show that the running time of our method is linear with respect to the size of T. By unordered, we mean that the order of the adjacent nodes (children/neighbors) of any node of T is irrelevant. An unrooted tree T does not have a node that is designated as root and can also be referred to as an undirected tree. We show how the presented algorithm can easily be modified to operate on trees that do not satisfy some or any of the aforementioned assumptions on the tree structure; for instance, how it can be applied to rooted, ordered or unlabeled trees.},
  booktitle = {Combinatorial Algorithms: 24th International Workshop, IWOCA 2013, Rouen, France, July 10-12, 2013, Revised Selected Papers},
  doi       = {10.1007/978-3-642-45278-9_23},
  file      = {An Optimal Algorithm for Computing All Subtree Repeats in Trees:flouri-iwoca-2013.pdf:PDF},
  url       = {https://doi.org/10.1007/978-3-642-45278-9_23},
}

@InProceedings{touzet-cpm-2005,
  author    = {Touzet, H{\'e}l{\`e}ne},
  title     = {{A Linear Tree Edit Distance Algorithm for Similar Ordered Trees}},
  booktitle = {Combinatorial Pattern Matching},
  year      = {2005},
  editor    = {Apostolico, Alberto and Crochemore, Maxime and Park, Kunsoo},
  pages     = {334--345},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {We describe a linear algorithm for comparing two similar ordered rooted trees with node labels. The method for comparing trees is the usual tree edit distance. We show that an optimal mapping which uses at most k insertions or deletions can then be constructed in O(nk3) where n is the size of the trees. The approach is inspired by the Zhang-Shasha algorithm for tree edit distance in combination with an adequate pruning of the search space.},
  file      = {touzet-cpm-2005.pdf:touzet-cpm-2005.pdf:PDF},
  isbn      = {978-3-540-31562-9},
}

@InProceedings{awekar-snma-2009,
  author    = {Awekar, Amit and Samatova, Nagiza F. and Breimyer, Paul},
  title     = {{Incremental All Pairs Similarity Search for Varying Similarity Thresholds}},
  booktitle = {Proceedings of the 3rd Workshop on Social Network Mining and Analysis},
  year      = {2009},
  series    = {SNA-KDD '09},
  pages     = {1:1--1:10},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1731012},
  articleno = {1},
  doi       = {10.1145/1731011.1731012},
  file      = {Incremental All Pairs Similarity Search for Varying Similarity Thresholds:awekar-snma-2009.pdf:PDF},
  isbn      = {978-1-60558-676-2},
  keywords  = {data mining, inverted index, similarity search},
  location  = {Paris, France},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/1731011.1731012},
}

@Article{mann-vldb-2016,
  author     = {Mann, Willi and Augsten, Nikolaus and Bouros, Panagiotis},
  title      = {{An Empirical Evaluation of Set Similarity Join Techniques}},
  journal    = {Proc. VLDB Endow.},
  year       = {2016},
  volume     = {9},
  number     = {9},
  pages      = {636--647},
  month      = may,
  issn       = {2150-8097},
  acmid      = {2947620},
  doi        = {10.14778/2947618.2947620},
  file       = {An Empirical Evaluation of Set Similarity Join Techniques:mann-vldb-2016.pdf:PDF},
  issue_date = {May 2016},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2947618.2947620},
}

@Article{binnig-vldb-2016,
  author     = {Binnig, Carsten and Crotty, Andrew and Galakatos, Alex and Kraska, Tim and Zamanian, Erfan},
  title      = {{The End of Slow Networks: It's Time for a Redesign}},
  journal    = {Proc. VLDB Endow.},
  year       = {2016},
  volume     = {9},
  number     = {7},
  pages      = {528--539},
  month      = mar,
  issn       = {2150-8097},
  acmid      = {2904485},
  doi        = {10.14778/2904483.2904485},
  file       = {The End of Slow Networks\: It's Time for a Redesign:binnig-vldb-2016.pdf:PDF},
  issue_date = {March 2016},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2904483.2904485},
}

@Article{roediger-vldb-2015,
  author     = {R\"{o}diger, Wolf and M\"{u}hlbauer, Tobias and Kemper, Alfons and Neumann, Thomas},
  title      = {{High-speed Query Processing over High-speed Networks}},
  journal    = {Proc. VLDB Endow.},
  year       = {2015},
  volume     = {9},
  number     = {4},
  pages      = {228--239},
  month      = dec,
  issn       = {2150-8097},
  acmid      = {2856319},
  doi        = {10.14778/2856318.2856319},
  file       = {High-speed Query Processing over High-speed Networks:roediger-vldb-2015.pdf:PDF},
  issue_date = {December 2015},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2856318.2856319},
}

@InProceedings{loesing-sigmod-2015,
  author    = {Loesing, Simon and Pilman, Markus and Etter, Thomas and Kossmann, Donald},
  title     = {{On the Design and Scalability of Distributed Shared-Data Databases}},
  booktitle = {Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data},
  year      = {2015},
  series    = {SIGMOD '15},
  pages     = {663--676},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2751519},
  doi       = {10.1145/2723372.2751519},
  file      = {On the Design and Scalability of Distributed Shared-Data Databases:loesing-sigmod-2015.pdf:PDF},
  isbn      = {978-1-4503-2758-9},
  keywords  = {decoupled storage, optimistic concurrency control, shared-data, transaction processing},
  location  = {Melbourne, Victoria, Australia},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/2723372.2751519},
}

@Article{balkesen-vldb-2013,
  author     = {Balkesen, Cagri and Alonso, Gustavo and Teubner, Jens and \"{O}zsu, M. Tamer},
  title      = {{Multi-core, Main-memory Joins: Sort vs. Hash Revisited}},
  journal    = {Proc. VLDB Endow.},
  year       = {2013},
  volume     = {7},
  number     = {1},
  pages      = {85--96},
  month      = sep,
  issn       = {2150-8097},
  acmid      = {2732227},
  doi        = {10.14778/2732219.2732227},
  file       = {Multi-core, Main-memory Joins\: Sort vs. Hash Revisited:balkesen-vldb-2013.pdf:PDF},
  issue_date = {September 2013},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2732219.2732227},
}

@InProceedings{barthels-sigmod-2015,
  author    = {Barthels, Claude and Loesing, Simon and Alonso, Gustavo and Kossmann, Donald},
  title     = {{Rack-Scale In-Memory Join Processing Using RDMA}},
  booktitle = {Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data},
  year      = {2015},
  series    = {SIGMOD '15},
  pages     = {1463--1475},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2750547},
  doi       = {10.1145/2723372.2750547},
  file      = {Rack-Scale In-Memory Join Processing Using RDMA:barthels-sigmod-2015.pdf:PDF},
  isbn      = {978-1-4503-2758-9},
  keywords  = {distributed join, distributed query processing, join processing with rdma, rack scale databases},
  location  = {Melbourne, Victoria, Australia},
  numpages  = {13},
  url       = {http://doi.acm.org/10.1145/2723372.2750547},
}

@InProceedings{bayardo-www-2007,
  author    = {Bayardo, Roberto J. and Ma, Yiming and Srikant, Ramakrishnan},
  title     = {Scaling Up All Pairs Similarity Search},
  booktitle = {Proceedings of the 16th International Conference on World Wide Web},
  year      = {2007},
  series    = {WWW '07},
  pages     = {131--140},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1242591},
  doi       = {10.1145/1242572.1242591},
  file      = {Scaling Up All Pairs Similarity Search:bayardo-www-2007.pdf:PDF},
  isbn      = {978-1-59593-654-7},
  keywords  = {data mining, similarity join, similarity search},
  location  = {Banff, Alberta, Canada},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/1242572.1242591},
}

@Article{mori-tkde-2015,
  author   = {T. Mori and A. Takasu and J. Jansson and J. Hwang and T. Tamura and T. Akutsu},
  title    = {Similar Subtree Search Using Extended Tree Inclusion},
  journal  = {IEEE Transactions on Knowledge and Data Engineering},
  year     = {2015},
  volume   = {27},
  number   = {12},
  pages    = {3360-3373},
  month    = {Dec},
  issn     = {1041-4347},
  doi      = {10.1109/TKDE.2015.2457922},
  file     = {Similar Subtree Search Using Extended Tree Inclusion:mori-tkde-2015.pdf:PDF},
  keywords = {computational complexity;tree data structures;NP-hard problem;bibliographic matching;entity resolution problem;extended tree inclusion;pattern tree;similar subtree search;text tree;time complexity;tree edit distance;tree-structured data;unordered tree inclusion;Approximation algorithms;Approximation methods;Complexity theory;Search problems;Vegetation;XML;Tree edit distance;dynamic programming;tree edit distance;tree inclusion;unordered trees},
}

@InBook{habi-dexa-2017,
  pages     = {290--304},
  title     = {Search and Aggregation in XML Documents},
  publisher = {Springer International Publishing},
  year      = {2017},
  author    = {Habi, Abdelmalek and Effantin, Brice and Kheddouci, Hamamache},
  editor    = {Benslimane, Djamal and Damiani, Ernesto and Grosky, William I. and Hameurlain, Abdelkader and Sheth, Amit and Wagner, Roland R.},
  address   = {Cham},
  isbn      = {978-3-319-64468-4},
  abstract  = {Information retrieval encounters a migration from the traditional paradigm (returning an ordered list of responses) to the aggregate search paradigm (grouping the most comprehensive and relevant answers into one final aggregated document). Nowadays extensible markup language (XML) is an important standard of information exchange and representation. Usually the tree representation of documents and queries is used to process them. It allows to consider the XML documents retrieval as a tree matching problem between the document trees and the query tree. Several paradigms for retrieving XML documents have been proposed in the literature but only a few of them try to aggregate a set of XML documents in order to provide more significant answers for a given query. In this paper, we propose and evaluate an aggregated search method to obtain the most accurate and richest answers in XML fragment search. Our search method is based on the Top-k Approximate Subtree Matching (TASM) algorithm and a new similarity function is proposed to improve the returned fragments. Then an aggregation process is presented to generate a single aggregate response containing the most relevant, exhaustive and non-redundant information given by the fragments. The method is evaluated on two real world datasets. Experimentations show that it generates good results in terms of relevance and quality.},
  booktitle = {Database and Expert Systems Applications: 28th International Conference, DEXA 2017, Lyon, France, August 28-31, 2017, Proceedings, Part I},
  doi       = {10.1007/978-3-319-64468-4_22},
  file      = {Search and Aggregation in XML Documents:habi-dexa-2017.pdf:PDF},
  url       = {https://doi.org/10.1007/978-3-319-64468-4_22},
}

@Article{olma-vldb-2017,
  author     = {Olma, Matthaios and Karpathiotakis, Manos and Alagiannis, Ioannis and Athanassoulis, Manos and Ailamaki, Anastasia},
  title      = {Slalom: Coasting Through Raw Data via Adaptive Partitioning and Indexing},
  journal    = {Proc. VLDB Endow.},
  year       = {2017},
  volume     = {10},
  number     = {10},
  pages      = {1106--1117},
  month      = jun,
  issn       = {2150-8097},
  acmid      = {3115415},
  doi        = {10.14778/3115404.3115415},
  file       = {Slalom\: Coasting Through Raw Data via Adaptive Partitioning and Indexing:olma-vldb-2017.pdf:PDF},
  issue_date = {June 2017},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3115404.3115415},
}

@Article{athanassoulis-vldb-2014,
  author     = {Athanassoulis, Manos and Ailamaki, Anastasia},
  title      = {{BF-Tree: Approximate Tree Indexing}},
  journal    = {Proc. VLDB Endow.},
  year       = {2014},
  volume     = {7},
  number     = {14},
  pages      = {1881--1892},
  month      = oct,
  issn       = {2150-8097},
  acmid      = {2733094},
  doi        = {10.14778/2733085.2733094},
  file       = {BF-Tree\: Approximate Tree Indexing:athanassoulis-vldb-2014.pdf:PDF},
  issue_date = {October 2014},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2733085.2733094},
}

@Article{christou-ipl-2012,
  author     = {Christou, Michalis and Crochemore, Maxime and Flouri, Tom\'{a}\v{s} and Iliopoulos, Costas S. and Janou\v{s}Ek, Jan and Melichar, Bo\v{r}Ivoj and Pissis, Solon P.},
  title      = {Computing All Subtree Repeats in Ordered Trees},
  journal    = {Inf. Process. Lett.},
  year       = {2012},
  volume     = {112},
  number     = {24},
  pages      = {958--962},
  month      = dec,
  issn       = {0020-0190},
  acmid      = {2381675},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.ipl.2012.09.001},
  file       = {Computing All Subtree Repeats in Ordered Trees:christou-ipl-2012.pdf:PDF},
  issue_date = {December, 2012},
  keywords   = {Algorithms, Strings, Subtree repeats, Trees},
  numpages   = {5},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.ipl.2012.09.001},
}

@InProceedings{christou-spire-2011,
  author    = {Christou, Michalis and Crochemore, Maxime and Flouri, Tom\'{a}\v{s} and Iliopoulos, Costas S. and Janou\v{s}ek, Jan and Melichar, Bo\v{r}ivoj and Pissis, Solon P.},
  title     = {Computing All Subtree Repeats in Ordered Ranked Trees},
  booktitle = {Proceedings of the 18th International Conference on String Processing and Information Retrieval},
  year      = {2011},
  series    = {SPIRE'11},
  pages     = {338--343},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2051106},
  file      = {Computing All Subtree Repeats in Ordered Ranked Trees:christou-spire-2011.pdf:PDF},
  isbn      = {978-3-642-24582-4},
  location  = {Pisa, Italy},
  numpages  = {6},
  url       = {http://dl.acm.org/citation.cfm?id=2051073.2051106},
}

@InProceedings{ester-kdd-1996,
  author    = {Ester, Martin and Kriegel, Hans-Peter and Sander, J\"{o}rg and Xu, Xiaowei},
  title     = {A Density-based Algorithm for Discovering Clusters a Density-based Algorithm for Discovering Clusters in Large Spatial Databases with Noise},
  booktitle = {Proceedings of the Second International Conference on Knowledge Discovery and Data Mining},
  year      = {1996},
  series    = {KDD'96},
  pages     = {226--231},
  publisher = {AAAI Press},
  acmid     = {3001507},
  file      = {A Density-Based Algorithm for Discovering Clusters in Large Spatial Databases with Noise:ester-kdd-1996.pdf:PDF},
  keywords  = {arbitrary shape of clusters, clustering algorithms, efficiency on large spatial databases, handling nlj4-275oise},
  location  = {Portland, Oregon},
  numpages  = {6},
  url       = {http://dl.acm.org/citation.cfm?id=3001460.3001507},
}

@InProceedings{ankerst-sigmod-1999,
  author    = {Ankerst, Mihael and Breunig, Markus M. and Kriegel, Hans-Peter and Sander, J\"{o}rg},
  title     = {{OPTICS: Ordering Points to Identify the Clustering Structure}},
  booktitle = {Proceedings of the 1999 ACM SIGMOD International Conference on Management of Data},
  year      = {1999},
  series    = {SIGMOD '99},
  pages     = {49--60},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {304187},
  doi       = {10.1145/304182.304187},
  file      = {OPTICS\: Ordering Points to Identify the Clustering Structure:ankerst-sigmod-1999.pdf:PDF},
  isbn      = {1-58113-084-8},
  keywords  = {cluster analysis, database mining, visualization},
  location  = {Philadelphia, Pennsylvania, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/304182.304187},
}

@Article{rong-tkde-2013,
  author   = {C. Rong and W. Lu and X. Wang and X. Du and Y. Chen and A. K. H. Tung},
  title    = {{Efficient and Scalable Processing of String Similarity Join}},
  journal  = {IEEE Transactions on Knowledge and Data Engineering},
  year     = {2013},
  volume   = {25},
  number   = {10},
  pages    = {2217-2230},
  month    = {Oct},
  issn     = {1041-4347},
  doi      = {10.1109/TKDE.2012.195},
  file     = {Efficient and Scalable Processing of String Similarity Join:rong-tkde-2013.pdf:PDF},
  keywords = {data handling;indexing;parallel processing;Hadoop system;MapReduce framework;candidate pair generation;computational cost;filtering power;global ordering;inverted index;multiple prefix filtering method;parallel extension;scalable processing;similar string pair identification;similarity function;string similarity join;two-step filter-and-refine approach;verification cost;Algorithm design and analysis;Educational institutions;Filtering;Indexes;Pipeline processing;Transforms;XML;Algorithm design and analysis;Educational institutions;Filtering;Indexes;MapReduce;Pipeline processing;Similarity join;Transforms;XML;multiple filtering},
}

@InProceedings{deng-icde-2014,
  author    = {D. Deng and G. Li and S. Hao and J. Wang and J. Feng},
  title     = {{MassJoin: A MapReduce-based Method for Scalable String Similarity Joins}},
  booktitle = {2014 IEEE 30th International Conference on Data Engineering},
  year      = {2014},
  pages     = {340-351},
  month     = {March},
  doi       = {10.1109/ICDE.2014.6816663},
  file      = {MassJoin\: A MapReduce-based Method for Scalable String Similarity Joins:deng-icde-2014.pdf:PDF},
  issn      = {1063-6382},
  keywords  = {Big Data;computational complexity;cost reduction;data integration;string matching;MASSJOIN;MapReduce-based framework;MassJoin;big data;character-based similarity functions;cubic complexity;data integration;key-value pairs;large-scale string similarity join;light-weight filter units;linear complexity;mapreduce-based method;partition-based signature scheme;scalable algorithm;scalable string similarity joins;set-based similarity functions;transmission cost reduction;Erbium;Filtering;Open systems},
}

@Article{deng-vldb-2015,
  author     = {Deng, Dong and Li, Guoliang and Wen, He and Feng, Jianhua},
  title      = {{An Efficient Partition Based Method for Exact Set Similarity Joins}},
  journal    = {Proc. VLDB Endow.},
  year       = {2015},
  volume     = {9},
  number     = {4},
  pages      = {360--371},
  month      = dec,
  issn       = {2150-8097},
  acmid      = {2856330},
  doi        = {10.14778/2856318.2856330},
  file       = {An Efficient Partition Based Method for Exact Set Similarity Joins:deng-vldb-2015.pdf:PDF},
  issue_date = {December 2015},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2856318.2856330},
}

@InProceedings{rong-icde-2017,
  author    = {C. Rong and C. Lin and Y. N. Silva and J. Wang and W. Lu and X. Du},
  title     = {{Fast and Scalable Distributed Set Similarity Joins for Big Data Analytics}},
  booktitle = {2017 IEEE 33rd International Conference on Data Engineering (ICDE)},
  year      = {2017},
  pages     = {1059-1070},
  month     = {April},
  doi       = {10.1109/ICDE.2017.151},
  file      = {Fast and Scalable Distributed Set Similarity Joins for Big Data Analytics:rong-icde-2017.pdf:PDF},
  keywords  = {Big Data;data integration;distributed algorithms;parallel processing;resource allocation;FS-Join;MapReduce;big data analytics;data cleaning;data integration;distributed algorithms;distributed set similarity;load balancing;parallel processing;Big Data;Cleaning;Data engineering;Data integration;Load management;Partitioning algorithms;Scalability},
}

@InProceedings{elsayed-hlt-2008,
  author    = {Elsayed, Tamer and Lin, Jimmy and Oard, Douglas W.},
  title     = {{Pairwise Document Similarity in Large Collections with MapReduce}},
  booktitle = {Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics on Human Language Technologies: Short Papers},
  year      = {2008},
  series    = {HLT-Short '08},
  pages     = {265--268},
  address   = {Stroudsburg, PA, USA},
  publisher = {Association for Computational Linguistics},
  acmid     = {1557767},
  file      = {Pairwise Document Similarity in Large Collections with MapReduce:elsayed-hlt-2008.pdf:PDF},
  location  = {Columbus, Ohio},
  numpages  = {4},
  url       = {http://dl.acm.org/citation.cfm?id=1557690.1557767},
}

@InProceedings{vernica-sigmod-2010,
  author    = {Vernica, Rares and Carey, Michael J. and Li, Chen},
  title     = {{Efficient Parallel Set-similarity Joins Using MapReduce}},
  booktitle = {Proceedings of the 2010 ACM SIGMOD International Conference on Management of Data},
  year      = {2010},
  series    = {SIGMOD '10},
  pages     = {495--506},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1807222},
  doi       = {10.1145/1807167.1807222},
  file      = {Efficient Parallel Set-similarity Joins Using MapReduce:vernica-sigmod-2010.pdf:PDF},
  isbn      = {978-1-4503-0032-2},
  keywords  = {mapreduce, set-similarity join},
  location  = {Indianapolis, Indiana, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/1807167.1807222},
}

@Article{metwally-vldb-2012,
  author     = {Metwally, Ahmed and Faloutsos, Christos},
  title      = {{V-SMART-join: A Scalable Mapreduce Framework for All-pair Similarity Joins of Multisets and Vectors}},
  journal    = {Proc. VLDB Endow.},
  year       = {2012},
  volume     = {5},
  number     = {8},
  pages      = {704--715},
  month      = apr,
  issn       = {2150-8097},
  acmid      = {2212353},
  doi        = {10.14778/2212351.2212353},
  file       = {V-SMART-join\: A Scalable Mapreduce Framework for All-pair Similarity Joins of Multisets and Vectors:metwally-vldb-2012.pdf:PDF},
  issue_date = {April 2012},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2212351.2212353},
}

@InProceedings{silva-sigmod-2012,
  author    = {Silva, Yasin N. and Reed, Jason M.},
  title     = {{Exploiting MapReduce-based Similarity Joins}},
  booktitle = {Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data},
  year      = {2012},
  series    = {SIGMOD '12},
  pages     = {693--696},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2213935},
  doi       = {10.1145/2213836.2213935},
  file      = {Exploiting MapReduce-based Similarity Joins:silva-sigmod-2012.pdf:PDF},
  isbn      = {978-1-4503-1247-9},
  keywords  = {hadoop, mapreduce, similarity join},
  location  = {Scottsdale, Arizona, USA},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2213836.2213935},
}

@Article{dassarma-vldb-2014,
  author     = {Das Sarma, Akash and He, Yeye and Chaudhuri, Surajit},
  title      = {{ClusterJoin: A Similarity Joins Framework Using Map-Reduce}},
  journal    = {Proc. VLDB Endow.},
  year       = {2014},
  volume     = {7},
  number     = {12},
  pages      = {1059--1070},
  month      = aug,
  issn       = {2150-8097},
  acmid      = {2732981},
  doi        = {10.14778/2732977.2732981},
  file       = {ClusterJoin\: A Similarity Joins Framework Using Map-Reduce:dassarma-vldb-2014.pdf:PDF},
  issue_date = {August 2014},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2732977.2732981},
}

@InProceedings{baraglia-icdm-2010,
  author    = {R. Baraglia and G. De Francisci Morales and C. Lucchese},
  title     = {{Document Similarity Self-Join with MapReduce}},
  booktitle = {2010 IEEE International Conference on Data Mining},
  year      = {2010},
  pages     = {731-736},
  month     = {Dec},
  doi       = {10.1109/ICDM.2010.70},
  file      = {Document Similarity Self-Join with MapReduce:baraglia-icdm-2010.pdf:PDF},
  issn      = {1550-4786},
  keywords  = {distributed databases;document handling;network operating systems;parallel algorithms;MapReduce-based technique;distributed file system;document similarity;memory bottlenecks;object collection;parallel algorithm;partitioning strategy;pruning strategy;serial algorithm;user defined threshold;MapReduce;Similarity Self-Join;Web Information Retrieval},
}

@InProceedings{li-sigmod-2016,
  author    = {Li, Feng and Das, Sudipto and Syamala, Manoj and Narasayya, Vivek R.},
  title     = {{Accelerating Relational Databases by Leveraging Remote Memory and RDMA}},
  booktitle = {Proceedings of the 2016 International Conference on Management of Data},
  year      = {2016},
  series    = {SIGMOD '16},
  pages     = {355--370},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2882949},
  doi       = {10.1145/2882903.2882949},
  file      = {Accelerating Relational Databases by Leveraging Remote Memory and RDMA:li-sigmod-2016.pdf:PDF},
  isbn      = {978-1-4503-3531-7},
  keywords  = {RDMA, buffer pool extension, opportunistic caching, relational databases, remote memory, semantic caching},
  location  = {San Francisco, California, USA},
  numpages  = {16},
  url       = {http://doi.acm.org/10.1145/2882903.2882949},
}

@Article{barthels-vldb-2017,
  author     = {Barthels, Claude and M\"{u}ller, Ingo and Schneider, Timo and Alonso, Gustavo and Hoefler, Torsten},
  title      = {{Distributed Join Algorithms on Thousands of Cores}},
  journal    = {Proc. VLDB Endow.},
  year       = {2017},
  volume     = {10},
  number     = {5},
  pages      = {517--528},
  month      = jan,
  issn       = {2150-8097},
  acmid      = {3055545},
  doi        = {10.14778/3055540.3055545},
  file       = {Distributed Join Algorithms on Thousands of Cores:barthels-vldb-2017.pdf:PDF},
  issue_date = {January 2017},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3055540.3055545},
}

@Article{zamanian-vldb-2017,
  author     = {Zamanian, Erfan and Binnig, Carsten and Harris, Tim and Kraska, Tim},
  title      = {{The End of a Myth: Distributed Transactions Can Scale}},
  journal    = {Proc. VLDB Endow.},
  year       = {2017},
  volume     = {10},
  number     = {6},
  pages      = {685--696},
  month      = feb,
  issn       = {2150-8097},
  acmid      = {3055335},
  doi        = {10.14778/3055330.3055335},
  file       = {The End of a Myth\: Distributed Transactions Can Scale:zamanian-vldb-2017.pdf:PDF},
  issue_date = {February 2017},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3055330.3055335},
}

@InProceedings{makreshanski-sigmod-2017,
  author    = {Makreshanski, Darko and Giceva, Jana and Barthels, Claude and Alonso, Gustavo},
  title     = {{BatchDB: Efficient Isolated Execution of Hybrid OLTP+OLAP Workloads for Interactive Applications}},
  booktitle = {Proceedings of the 2017 ACM International Conference on Management of Data},
  year      = {2017},
  series    = {SIGMOD '17},
  pages     = {37--50},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3035959},
  doi       = {10.1145/3035918.3035959},
  file      = {BatchDB\: Efficient Isolated Execution of Hybrid OLTP+OLAP Workloads for Interactive Applications:makreshanski-sigmod-2017.pdf:PDF},
  isbn      = {978-1-4503-4197-4},
  keywords  = {batchdb, batching, ch-benchmark, databases, htap, numa, olap, oltp, rdbms, rdma, tpc-c, tpc-h},
  location  = {Chicago, Illinois, USA},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/3035918.3035959},
}

@Article{dittrich-ds-2014,
  author   = {Dittrich, Jens},
  title    = {{Die Umgedrehte Vorlesung -- Chancen f{\"u}r die Informatiklehre}},
  journal  = {Datenbank-Spektrum},
  year     = {2014},
  volume   = {14},
  number   = {1},
  pages    = {69--76},
  month    = {Mar},
  issn     = {1610-1995},
  abstract = {Dieser Artikel beschreibt die Erfahrung des Autors mit einer Umgedrehten Datenbankvorlesung. Bei einer Umgedrehten Vorlesung findet die Wissensaneignung zun{\"a}chst mit Hilfe von Lehrvideos statt. In der urspr{\"u}nglichen Vorlesungszeit wird das gelernte Material dann gemeinsam einge{\"u}bt. Dieses Vorlesungsformat ist ein hybrides Format zwischen traditioneller Vorlesung und den sogenannten MOOCs (Massive Open Online Courses).},
  day      = {01},
  doi      = {10.1007/s13222-013-0143-9},
  file     = {Die Umgedrehte Vorlesung - Chancen für die Informatiklehre:dittrich-ds-2014.pdf:PDF},
  url      = {https://doi.org/10.1007/s13222-013-0143-9},
}

@Article{wang-alg-2008,
  author   = {Wang, Lusheng and Zhang, Kaizhong},
  title    = {{Space Efficient Algorithms for Ordered Tree Comparison}},
  journal  = {Algorithmica},
  year     = {2008},
  volume   = {51},
  number   = {3},
  pages    = {283--297},
  month    = {Jul},
  issn     = {1432-0541},
  abstract = {In this paper we present techniques to significantly improve the space complexity of several ordered tree comparison algorithms without sacrificing the corresponding time complexity. We present new algorithms for computing the constrained ordered tree edit distance and the alignment of (ordered) trees. The techniques can also be applied to other related problems.},
  day      = {01},
  doi      = {10.1007/s00453-007-9100-z},
  file     = {Space Efficient Algorithms for Ordered Tree Comparison:wang-alg-2008.pdf:PDF},
  url      = {https://doi.org/10.1007/s00453-007-9100-z},
}

@InProceedings{dragojevic-nsdi-2014,
  author    = {Aleksandar Dragojevi{\'c} and Dushyanth Narayanan and Miguel Castro and Orion Hodson},
  title     = {{FaRM: Fast Remote Memory}},
  booktitle = {11th {USENIX} Symposium on Networked Systems Design and Implementation ({NSDI} 14)},
  year      = {2014},
  pages     = {401--414},
  address   = {Seattle, WA},
  publisher = {{USENIX} Association},
  file      = {FaRM\: Fast Remote Memory:dragojevic-nsdi-2014.pdf:PDF},
  isbn      = {978-1-931971-09-6},
  url       = {https://www.usenix.org/conference/nsdi14/technical-sessions/dragojevi{\'c}},
}

@Article{sun-vldb-2017,
  author     = {Sun, Ji and Shang, Zeyuan and Li, Guoliang and Deng, Dong and Bao, Zhifeng},
  title      = {Dima: A Distributed In-memory Similarity-based Query Processing System},
  journal    = {Proc. VLDB Endow.},
  year       = {2017},
  volume     = {10},
  number     = {12},
  pages      = {1925--1928},
  month      = aug,
  issn       = {2150-8097},
  acmid      = {3137810},
  doi        = {10.14778/3137765.3137810},
  file       = {Dima\: A Distributed In-memory Similarity-based Query Processing System (Technical Report):sun-tr-2017.pdf:PDF;Dima\: A Distributed In-memory Similarity-based Query Processing System:sun-vldb-2017.pdf:PDF},
  issue_date = {August 2017},
  numpages   = {4},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3137765.3137810},
}

@InProceedings{kirsch-onward-2017,
  author    = {Kirsch, Christoph M.},
  title     = {Selfie and the Basics},
  booktitle = {Proceedings of the 2017 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software},
  year      = {2017},
  series    = {Onward! 2017},
  pages     = {198--213},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3133857},
  doi       = {10.1145/3133850.3133857},
  file      = {Selfie and the Basics:kirsch-onward-2017.pdf:PDF},
  isbn      = {978-1-4503-5530-8},
  keywords  = {Computer Science for All, Self-Referentiality},
  location  = {Vancouver, BC, Canada},
  numpages  = {16},
  url       = {http://doi.acm.org/10.1145/3133850.3133857},
}

@Book{augsten-morganclaypool-2013,
  title     = {{Similarity Joins in Relational Database Systems}},
  publisher = {Morgan {\&} Claypool Publishers},
  year      = {2013},
  author    = {Nikolaus Augsten and Michael H. B{\"{o}}hlen},
  series    = {Synthesis Lectures on Data Management},
  isbn      = {9781627050289},
  doi       = {10.2200/S00544ED1V01Y201310DTM038},
  timestamp = {Tue, 10 Dec 2013 17:04:43 +0100},
  url       = {http://dx.doi.org/10.2200/S00544ED1V01Y201310DTM038},
}

@Article{zhang-siam-1989,
  author     = {Zhang, K. and Shasha, D.},
  title      = {{Simple Fast Algorithms for the Editing Distance Between Trees and Related Problems}},
  journal    = {SIAM J. Comput.},
  year       = {1989},
  volume     = {18},
  number     = {6},
  pages      = {1245--1262},
  month      = dec,
  issn       = {0097-5397},
  acmid      = {76082},
  address    = {Philadelphia, PA, USA},
  doi        = {10.1137/0218082},
  issue_date = {Dec. 1989},
  numpages   = {18},
  publisher  = {Society for Industrial and Applied Mathematics},
  url        = {http://dx.doi.org/10.1137/0218082},
}

@InProceedings{akbarinia-vldb-2007,
  author    = {Akbarinia, Reza and Pacitti, Esther and Valduriez, Patrick},
  title     = {Best Position Algorithms for Top-k Queries},
  booktitle = {Proceedings of the 33rd International Conference on Very Large Data Bases},
  year      = {2007},
  series    = {VLDB '07},
  pages     = {495--506},
  publisher = {VLDB Endowment},
  acmid     = {1325909},
  file      = {Best Position Algorithms for Top-k Queries:akbarinia-vldb-2007.pdf:PDF},
  isbn      = {978-1-59593-649-3},
  location  = {Vienna, Austria},
  numpages  = {12},
  url       = {http://dl.acm.org/citation.cfm?id=1325851.1325909},
}

@Article{fagin-jcss-2003,
  author     = {Fagin, Ronald and Lotem, Amnon and Naor, Moni},
  title      = {Optimal Aggregation Algorithms for Middleware},
  journal    = {J. Comput. Syst. Sci.},
  year       = {2003},
  volume     = {66},
  number     = {4},
  pages      = {614--656},
  month      = jun,
  issn       = {0022-0000},
  acmid      = {861185},
  address    = {Orlando, FL, USA},
  doi        = {10.1016/S0022-0000(03)00026-6},
  file       = {Optimal aggregation algorithms for middleware:fagin-jcss-2003.pdf:PDF},
  issue_date = {1 June 2003},
  numpages   = {43},
  publisher  = {Academic Press, Inc.},
  url        = {http://dx.doi.org/10.1016/S0022-0000(03)00026-6},
}

@InProceedings{fagin-pods-2001,
  author    = {Fagin, Ronald and Lotem, Amnon and Naor, Moni},
  title     = {Optimal Aggregation Algorithms for Middleware},
  booktitle = {Proceedings of the Twentieth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems},
  year      = {2001},
  series    = {PODS '01},
  pages     = {102--113},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {375567},
  doi       = {10.1145/375551.375567},
  file      = {Optimal aggregation algorithms for middleware:fagin-pods-2001.pdf:PDF},
  isbn      = {1-58113-361-8},
  location  = {Santa Barbara, California, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/375551.375567},
}

@Article{pawlik-vldb-2011,
  author     = {Pawlik, Mateusz and Augsten, Nikolaus},
  title      = {{RTED: A Robust Algorithm for the Tree Edit Distance}},
  journal    = {Proc. VLDB Endow.},
  year       = {2011},
  volume     = {5},
  number     = {4},
  pages      = {334--345},
  month      = dec,
  issn       = {2150-8097},
  acmid      = {2095692},
  doi        = {10.14778/2095686.2095692},
  file       = {pawlik-vldb-2011.pdf:pawlik-vldb-2011.pdf:PDF},
  issue_date = {December 2011},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2095686.2095692},
}

@Article{pawlik-infsys-2016,
  author   = {Mateusz Pawlik and Nikolaus Augsten},
  title    = {Tree edit distance: Robust and memory-efficient},
  journal  = {Information Systems},
  year     = {2016},
  volume   = {56},
  pages    = {157 - 173},
  issn     = {0306-4379},
  doi      = {https://doi.org/10.1016/j.is.2015.08.004},
  file     = {pawlik-infsys-2016.pdf:pawlik-infsys-2016.pdf:PDF},
  keywords = {Tree edit distance, Similarity search, Approximate matching},
  url      = {http://www.sciencedirect.com/science/article/pii/S0306437915001611},
}

@InProceedings{augsten-vldb-2005,
  author    = {Augsten, Nikolaus and B\"{o}hlen, Michael and Gamper, Johann},
  title     = {{Approximate Matching of Hierarchical Data Using pq-grams}},
  booktitle = {Proceedings of the 31st International Conference on Very Large Data Bases},
  year      = {2005},
  series    = {VLDB '05},
  pages     = {301--312},
  publisher = {VLDB Endowment},
  acmid     = {1083630},
  file      = {augsten-vldb-2005.pdf:augsten-vldb-2005.pdf:PDF},
  isbn      = {1-59593-154-6},
  location  = {Trondheim, Norway},
  numpages  = {12},
  url       = {http://dl.acm.org/citation.cfm?id=1083592.1083630},
}

@InProceedings{yang-sigmod-2005,
  author    = {Yang, Rui and Kalnis, Panos and Tung, Anthony K. H.},
  title     = {{Similarity Evaluation on Tree-structured Data}},
  booktitle = {Proceedings of the 2005 ACM SIGMOD International Conference on Management of Data},
  year      = {2005},
  series    = {SIGMOD '05},
  pages     = {754--765},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1066243},
  doi       = {10.1145/1066157.1066243},
  file      = {yang-sigmod-2005.pdf:yang-sigmod-2005.pdf:PDF},
  isbn      = {1-59593-060-4},
  location  = {Baltimore, Maryland},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/1066157.1066243},
}

@InProceedings{theobald-vldb-2004,
  author    = {Theobald, Martin and Weikum, Gerhard and Schenkel, Ralf},
  title     = {{Top-k Query Evaluation with Probabilistic Guarantees}},
  booktitle = {Proceedings of the Thirtieth International Conference on Very Large Data Bases - Volume 30},
  year      = {2004},
  series    = {VLDB '04},
  pages     = {648--659},
  publisher = {VLDB Endowment},
  acmid     = {1316746},
  file      = {theobald-vldb-2004.pdf:theobald-vldb-2004.pdf:PDF},
  isbn      = {0-12-088469-0},
  location  = {Toronto, Canada},
  numpages  = {12},
  url       = {http://dl.acm.org/citation.cfm?id=1316689.1316746},
}

@InProceedings{theobald-sigir-2005,
  author    = {Theobald, Martin and Schenkel, Ralf and Weikum, Gerhard},
  title     = {{Efficient and Self-tuning Incremental Query Expansion for Top-k Query Processing}},
  booktitle = {Proceedings of the 28th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval},
  year      = {2005},
  series    = {SIGIR '05},
  pages     = {242--249},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1076077},
  doi       = {10.1145/1076034.1076077},
  file      = {theobald-sigir-2005.pdf:theobald-sigir-2005.pdf:PDF},
  isbn      = {1-59593-034-5},
  keywords  = {incremental merge, probabilistic candidate pruning, query expansion, top-k ranking},
  location  = {Salvador, Brazil},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/1076034.1076077},
}

@Article{theobald-vldbj-2008,
  author   = {Theobald, Martin and Bast, Holger and Majumdar, Debapriyo and Schenkel, Ralf and Weikum, Gerhard},
  title    = {TopX: efficient and versatile top-k query processing for semistructured data},
  journal  = {The VLDB Journal},
  year     = {2008},
  volume   = {17},
  number   = {1},
  pages    = {81--115},
  month    = {Jan},
  issn     = {0949-877X},
  abstract = {Recent IR extensions to XML query languages such as Xpath 1.0 Full-Text or the NEXI query language of the INEX benchmark series reflect the emerging interest in IR-style ranked retrieval over semistructured data. TopX is a top-k retrieval engine for text and semistructured data. It terminates query execution as soon as it can safely determine the k top-ranked result elements according to a monotonic score aggregation function with respect to a multidimensional query. It efficiently supports vague search on both content- and structure-oriented query conditions for dynamic query relaxation with controllable influence on the result ranking. The main contributions of this paper unfold into four main points: (1) fully implemented models and algorithms for ranked XML retrieval with XPath Full-Text functionality, (2) efficient and effective top-k query processing for semistructured data, (3) support for integrating thesauri and ontologies with statistically quantified relationships among concepts, leveraged for word-sense disambiguation and query expansion, and (4) a comprehensive description of the TopX system, with performance experiments on large-scale corpora like TREC Terabyte and INEX Wikipedia.},
  day      = {01},
  doi      = {10.1007/s00778-007-0072-z},
  file     = {theobald-vldbj-2008.pdf:theobald-vldbj-2008.pdf:PDF},
  url      = {https://doi.org/10.1007/s00778-007-0072-z},
}

@Article{augsten-vldbj-2012,
  author   = {Augsten, Nikolaus and B{\"o}hlen, Michael and Dyreson, Curtis and Gamper, Johann},
  title    = {{Windowed pq-grams for approximate joins of data-centric XML}},
  journal  = {The VLDB Journal},
  year     = {2012},
  volume   = {21},
  number   = {4},
  pages    = {463--488},
  month    = {Aug},
  issn     = {0949-877X},
  abstract = {In data integration applications, a join matches elements that are common to two data sources. Since elements are represented slightly different in each source, an approximate join must be used to do the matching. For XML data, most existing approximate join strategies are based on some ordered tree matching technique, such as the tree edit distance. In data-centric XML, however, the sibling order is irrelevant, and two elements should match even if their subelement order varies. Thus, approximate joins for data-centric XML must leverage unordered tree matching techniques. This is computationally hard since the algorithms cannot rely on a predefined sibling order. In this paper, we give a solution for approximate joins based on unordered tree matching. The core of our solution are windowed pq-grams which are small subtrees of a specific shape. We develop an efficient technique to generate windowed pq-grams in a three-step process: sort the tree, extend the sorted tree with dummy nodes, and decompose the extended tree into windowed pq-grams. The windowed pq-grams distance between two trees is the number of pq-grams that are in one tree decomposition only. We show that our distance is a pseudo-metric and empirically demonstrate that it effectively approximates the unordered tree edit distance. The approximate join using windowed pq-grams can be efficiently implemented as an equality join on strings, which avoids the costly computation of the distance between every pair of input trees. Experiments with synthetic and real world data confirm the analytic results and show the effectiveness and efficiency of our technique.},
  day      = {01},
  doi      = {10.1007/s00778-011-0254-6},
  file     = {augsten-vldbj-2012.pdf:augsten-vldbj-2012.pdf:PDF},
  url      = {https://doi.org/10.1007/s00778-011-0254-6},
}

@InProceedings{grust-sigmod-2002,
  author    = {Grust, Torsten},
  title     = {{Accelerating XPath Location Steps}},
  booktitle = {Proceedings of the 2002 ACM SIGMOD International Conference on Management of Data},
  year      = {2002},
  series    = {SIGMOD '02},
  pages     = {109--120},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {564705},
  doi       = {10.1145/564691.564705},
  file      = {Accelerating XPath Location Steps:grust-sigmod-2002.pdf:PDF},
  isbn      = {1-58113-497-5},
  location  = {Madison, Wisconsin},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/564691.564705},
}

@InProceedings{kaushik-sigmod-2004,
  author    = {Kaushik, Raghav and Krishnamurthy, Rajasekar and Naughton, Jeffrey F. and Ramakrishnan, Raghu},
  title     = {{On the Integration of Structure Indexes and Inverted Lists}},
  booktitle = {Proceedings of the 2004 ACM SIGMOD International Conference on Management of Data},
  year      = {2004},
  series    = {SIGMOD '04},
  pages     = {779--790},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1007656},
  doi       = {10.1145/1007568.1007656},
  file      = {On the Integration of Structure Indexes and Inverted Lists:kaushik-sigmod-2004.pdf:PDF},
  isbn      = {1-58113-859-8},
  location  = {Paris, France},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/1007568.1007656},
}

@Article{herrbach-tcs-2010,
  author   = {Claire Herrbach and Alain Denise and Serge Dulucq},
  title    = {{Average complexity of the Jiang-Wang-Zhang pairwise tree alignment algorithm and of a RNA secondary structure alignment algorithm}},
  journal  = {Theoretical Computer Science},
  year     = {2010},
  volume   = {411},
  number   = {26},
  pages    = {2423 - 2432},
  issn     = {0304-3975},
  abstract = {We prove that the average complexity of the pairwise ordered tree alignment algorithm of Jiang, Wang and Zhang is in O(nm), where n and m stand for the sizes of the two trees, respectively. We show that the same result holds for the average complexity of pairwise comparison of RNA secondary structures, using a set of biologically relevant operations.},
  doi      = {https://doi.org/10.1016/j.tcs.2010.01.014},
  file     = {Average complexity of the Jiang-Wang-Zhang pairwise tree alignment algorithm and of a RNA secondary structure alignment algorithm:herrbach-tcs-2010.pdf:PDF},
  keywords = {Average complexity, Tree alignment, RNA alignment, RNA structure},
  url      = {http://www.sciencedirect.com/science/article/pii/S0304397510000393},
}

@InProceedings{lin-nlpis-2010,
  author    = {Lin, Zhiwei and Wang, Hui and McClean, Sally},
  title     = {{Measuring Tree Similarity for Natural Language Processing Based Information Retrieval}},
  booktitle = {Natural Language Processing and Information Systems},
  year      = {2010},
  editor    = {Hopfe, Christina J. and Rezgui, Yacine and M{\'e}tais, Elisabeth and Preece, Alun and Li, Haijiang},
  pages     = {13--23},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {Natural language processing based information retrieval (NIR) aims to go beyond the conventional bag-of-words based information retrieval (KIR) by considering syntactic and even semantic information in documents. NIR is a conceptually appealing approach to IR, but is hard due to the need to measure distance/similarity between structures. We aim to move beyond the state of the art in measuring structure similarity for NIR.},
  file      = {lin-nlpis-2010.pdf:lin-nlpis-2010.pdf:PDF},
  isbn      = {978-3-642-13881-2},
}

@Article{kashkoush-cirp-2013,
  author   = {Mohamed Kashkoush and Hoda ElMaraghy},
  title    = {{Matching Bills of Materials Using Tree Reconciliation}},
  journal  = {Procedia CIRP},
  year     = {2013},
  volume   = {7},
  pages    = {169 - 174},
  issn     = {2212-8271},
  note     = {Forty Sixth CIRP Conference on Manufacturing Systems 2013},
  abstract = {A product Bill of Materials (BOM) is a structured tree which represents its components and their hierarchal relationships. The BOMs are traditionally used for Material Requirement Planning (MRP). However, they do have other useful applications in product modeling and variety management. Recent research used graph difference operations, linear algebra and integer programming to match trees of BOM and find pairwise similarity measures for applications such as clustering product variants into families and retrieval of design and manufacturing data. Matching phylogenetic trees has been utilized in biological science for decades and is referred to as “tree reconciliation”. A new application of this approach in manufacturing to match pairs of BOM trees and retrieve the most similar design is presented. This novel method can help speeding-up other downstream planning activities such as process planning, hence, improving productivity and shortening time to market. Assembly of chemical processing centrifugal pumps is used as a case study for demonstration. This novel matching of Bills of Materials uses linear time algorithms, compared to state-of- the-art algorithms which use integer programming and matrix approximation, hence, leading to more computational efficiency.},
  doi      = {https://doi.org/10.1016/j.procir.2013.05.029},
  file     = {Matching Bills of Materials Using Tree Reconciliation:kashkoush-cirp-2013.pdf:PDF},
  keywords = {Bill of Materials (BOM), Tree Reconciliation, Design retrieval, Assembly Process Planning},
  url      = {http://www.sciencedirect.com/science/article/pii/S2212827113002369},
}

@InProceedings{falleri-ase-2014,
  author    = {Falleri, Jean-R{\'e}my and Morandat, Flor{\'e}al and Blanc, Xavier and Martinez, Matias and Monperrus, Martin},
  title     = {{Fine-grained and Accurate Source Code Differencing}},
  booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  year      = {2014},
  series    = {ASE '14},
  pages     = {313--324},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2642982},
  doi       = {10.1145/2642937.2642982},
  file      = {falleri-ase-2014.pdf:falleri-ase-2014.pdf:PDF},
  isbn      = {978-1-4503-3013-8},
  keywords  = {ast, program comprehension, software evolution, tree differencing},
  location  = {Vasteras, Sweden},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2642937.2642982},
}

@Misc{simian-2019,
  title        = {{Simian - Similarity Analyzer | Duplicate Code Detection for the Enterprise}},
  howpublished = {\url{https://www.harukizaemon.com/simian/}},
  note         = {Accessed: 2019-02-11, 02:29 PM},
}

@Article{akutsu-ieice-2010,
  author  = {Tatsuya Akutsu},
  title   = {{Tree Edit Distance Problems: Algorithms and Applications to Bioinformatics}},
  journal = {IEICE Transactions on Information and Systems},
  year    = {2010},
  volume  = {E93.D},
  number  = {2},
  pages   = {208-218},
  file    = {Tree Edit Distance Problems\: Algorithms and Applications to Bioinformatics:akutsu-ieice-2010.pdf:PDF},
}

@InProceedings{finis-sigmod-2013,
  author    = {Finis, Jan and Brunel, Robert and Kemper, Alfons and Neumann, Thomas and F\"{a}rber, Franz and May, Norman},
  title     = {{DeltaNI: An Efficient Labeling Scheme for Versioned Hierarchical Data}},
  booktitle = {Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data},
  year      = {2013},
  series    = {SIGMOD '13},
  pages     = {905--916},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2465329},
  doi       = {10.1145/2463676.2465329},
  file      = {finis-sigmod-2013.pdf:finis-sigmod-2013.pdf:PDF},
  isbn      = {978-1-4503-2037-5},
  keywords  = {database indexing, hierarchical data, hierarchy indexing, labeling schemes, multiversion indexing, nested intervals},
  location  = {New York, New York, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2463676.2465329},
}

@InProceedings{vidal-sigir-2006,
  author    = {Vidal, M\'{a}rcio L. A. and da Silva, Altigran S. and de Moura, Edleno S. and Cavalcanti, Jo\~{a}o M. B.},
  title     = {{Structure-driven Crawler Generation by Example}},
  booktitle = {Proceedings of the 29th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval},
  year      = {2006},
  series    = {SIGIR '06},
  pages     = {292--299},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1148223},
  doi       = {10.1145/1148170.1148223},
  file      = {vidal-sigir-2006.pdf:vidal-sigir-2006.pdf:PDF},
  isbn      = {1-59593-369-7},
  keywords  = {digital libraries, tree edit distance, web crawlers},
  location  = {Seattle, Washington, USA},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/1148170.1148223},
}

@InProceedings{augsten-vldb-2006,
  author    = {Augsten, Nikolaus and B\"{o}hlen, Michael and Gamper, Johann},
  title     = {{An Incrementally Maintainable Index for Approximate Lookups in Hierarchical Data}},
  booktitle = {Proceedings of the 32Nd International Conference on Very Large Data Bases},
  year      = {2006},
  series    = {VLDB '06},
  pages     = {247--258},
  publisher = {VLDB Endowment},
  acmid     = {1164150},
  file      = {augsten-vldb-2006.pdf:augsten-vldb-2006.pdf:PDF},
  location  = {Seoul, Korea},
  numpages  = {12},
  url       = {http://dl.acm.org/citation.cfm?id=1182635.1164150},
}

@Article{bille-tcs-2005,
  author   = {Philip Bille},
  title    = {{A survey on tree edit distance and related problems}},
  journal  = {Theoretical Computer Science},
  year     = {2005},
  volume   = {337},
  number   = {1},
  pages    = {217 - 239},
  issn     = {0304-3975},
  abstract = {We survey the problem of comparing labeled trees based on simple local operations of deleting, inserting, and relabeling nodes. These operations lead to the tree edit distance, alignment distance, and inclusion problem. For each problem we review the results available and present, in detail, one or more of the central algorithms for solving the problem.},
  doi      = {https://doi.org/10.1016/j.tcs.2004.12.030},
  file     = {A survey on tree edit distance and related problems:bille-tcs-2005.pdf:PDF},
  keywords = {Tree matching, Tree edit distance, Tree alignment, Tree inclusion},
  url      = {http://www.sciencedirect.com/science/article/pii/S0304397505000174},
}

@Article{romanowski-smc-2005,
  author   = {C. J. {Romanowski} and R. {Nagi}},
  title    = {{On Comparing Bills of Materials: A Similarity/Distance Measure for Unordered Trees}},
  journal  = {IEEE Transactions on Systems, Man, and Cybernetics - Part A: Systems and Humans},
  year     = {2005},
  volume   = {35},
  number   = {2},
  pages    = {249-260},
  month    = {March},
  issn     = {1083-4427},
  doi      = {10.1109/TSMCA.2005.843395},
  file     = {On Comparing Bills of Materials\: A Similarity/Distance Measure for Unordered Trees:romanowski-smc-2005.pdf:PDF},
  keywords = {bills of materials;trees (mathematics);manufacturing data processing;bills of materials;similarity measure;distance measure;unordered trees;polynomial time algorithm;minimum weighted symmetric difference;pairwise comparisons;Bills of materials;Group technology;Raw materials;Clustering algorithms;Databases;Assembly;Area measurement;Cellular manufacturing;Polynomials;Agile manufacturing;Bills of material (BOMs);similarity measure;symmetric difference;unordered trees},
}

@Article{chubak-vldb-2012,
  author     = {Chubak, Pirooz and Rafiei, Davood},
  title      = {{Efficient Indexing and Querying over Syntactically Annotated Trees}},
  journal    = {Proc. VLDB Endow.},
  year       = {2012},
  volume     = {5},
  number     = {11},
  pages      = {1316--1327},
  month      = jul,
  issn       = {2150-8097},
  acmid      = {2350249},
  doi        = {10.14778/2350229.2350249},
  file       = {chubak-vldb-2012.pdf:chubak-vldb-2012.pdf:PDF},
  issue_date = {July 2012},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2350229.2350249},
}

@InProceedings{pirk-damon-2014,
  author    = {Pirk, Holger and Petraki, Eleni and Idreos, Stratos and Manegold, Stefan and Kersten, Martin},
  title     = {{Database Cracking: Fancy Scan, Not Poor Man's Sort!}},
  booktitle = {Proceedings of the Tenth International Workshop on Data Management on New Hardware},
  year      = {2014},
  series    = {DaMoN '14},
  pages     = {4:1--4:8},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2619232},
  articleno = {4},
  doi       = {10.1145/2619228.2619232},
  file      = {Database Cracking\: Fancy Scan, Not Poor Man's Sort!:pirk-damon-2014.pdf:PDF},
  isbn      = {978-1-4503-2971-2},
  location  = {Snowbird, Utah},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2619228.2619232},
}

@Article{cai-vldb-2018,
  author     = {Cai, Qingchao and Guo, Wentian and Zhang, Hao and Agrawal, Divyakant and Chen, Gang and Ooi, Beng Chin and Tan, Kian-Lee and Teo, Yong Meng and Wang, Sheng},
  title      = {{Efficient Distributed Memory Management with RDMA and Caching}},
  journal    = {Proc. VLDB Endow.},
  year       = {2018},
  volume     = {11},
  number     = {11},
  pages      = {1604--1617},
  month      = jul,
  issn       = {2150-8097},
  acmid      = {3269472},
  doi        = {10.14778/3236187.3236209},
  file       = {cai-vldb-2018.pdf:cai-vldb-2018.pdf:PDF},
  issue_date = {July 2018},
  numpages   = {14},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3236187.3236209},
}

@InProceedings{balkesen-icde-2013,
  author    = {C. {Balkesen} and J. {Teubner} and G. {Alonso} and M. T. {Özsu}},
  title     = {{Main-memory hash joins on multi-core CPUs: Tuning to the underlying hardware}},
  booktitle = {2013 IEEE 29th International Conference on Data Engineering (ICDE)},
  year      = {2013},
  pages     = {362-373},
  month     = {April},
  doi       = {10.1109/ICDE.2013.6544839},
  file      = {balkesen-icde-2013.pdf:balkesen-icde-2013.pdf:PDF},
  issn      = {1063-6382},
  keywords  = {cache storage;memory architecture;multiprocessing systems;performance evaluation;radix join implementation;data operators;tuple sizes;table sizes;hardware-oblivious approaches;experimental analysis;TLB miss latencies;cache hiding;memory bandwidth;cache sizes;architectural parameters;main-memory hash join algorithms;multicore CPUs;Hardware;Probes;Latches;Partitioning algorithms;Tuning;Instruction sets;Algorithm design and analysis},
}

@Article{rotabulo-ejor-2017,
  author   = {Samuel Rota Bulò and Marcello Pelillo},
  title    = {{Dominant-set clustering: A review}},
  journal  = {European Journal of Operational Research},
  year     = {2017},
  volume   = {262},
  number   = {1},
  pages    = {1 - 13},
  issn     = {0377-2217},
  abstract = {Clustering refers to the process of extracting maximally coherent groups from a set of objects using pairwise, or high-order, similarities. Traditional approaches to this problem are based on the idea of partitioning the input data into a predetermined number of classes, thereby obtaining the clusters as a by-product of the partitioning process. A radically different perspective of the problem consists in providing a formalization of the very notion of a cluster and considering the clustering process as a sequential search of structures in the data adhering to this cluster notion. In this manuscript we review one of the pioneering approaches falling in the latter class of algorithms, which has been proposed in the early 2000s and has been found since then a number of applications in different domains. It is known as dominant set clustering and provides a notion of a cluster (a.k.a. dominant set) that has intriguing links to game-theory, graph-theory and optimization theory. From the game-theoretic perspective, clusters are regarded as equilibria of non-cooperative “clustering” games; in the graph-theoretic context, it can be shown that they generalize the notion of maximal clique to edge-weighted graphs; finally, from an optimization point of view, they can be characterized in terms of solutions to a simplex-constrained, quadratic optimization problem, as well as in terms of an exquisitely combinatorial entity. Besides introducing dominant sets from a theoretical perspective, we will also focus on the related algorithmic issues by reviewing two state-of-the-art methods that are used in the literature to find dominant sets clusters, namely the Replicator Dynamics and the Infection and Immunization Dynamics. Finally, we conclude with an overview of different extensions of the dominant set framework and of applications where dominant sets have been successfully employed.},
  comment  = {Clustering},
  doi      = {https://doi.org/10.1016/j.ejor.2017.03.056},
  file     = {Dominant-set clustering\: A review:rotabulo-ejor-2017.pdf:PDF},
  keywords = {Artificial intelligence, Clustering, Dominant sets, ESS equilibria, Maximal cliques},
  url      = {http://www.sciencedirect.com/science/article/pii/S0377221717302783},
}

@InProceedings{bloecher-damon-2018,
  author    = {Bl\"{o}cher, Marcel and Ziegler, Tobias and Binnig, Carsten and Eugster, Patrick},
  title     = {{Boosting Scalable Data Analytics with Modern Programmable Networks}},
  booktitle = {Proceedings of the 14th International Workshop on Data Management on New Hardware},
  year      = {2018},
  series    = {DAMON '18},
  pages     = {1:1--1:3},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3211923},
  articleno = {1},
  comment   = {RDMA, Modern Hardware},
  doi       = {10.1145/3211922.3211923},
  file      = {Boosting Scalable Data Analytics with Modern Programmable Networks:bloecher-damon-2018.pdf:PDF},
  isbn      = {978-1-4503-5853-8},
  keywords  = {data center networks, deeply programmable networks, in-network processing, scalable data analytics},
  location  = {Houston, Texas},
  numpages  = {3},
  url       = {http://doi.acm.org/10.1145/3211922.3211923},
}

@InProceedings{goyal-compute-2014,
  author    = {Goyal, Poonam and Kumari, Sonal and Kumar, Dhruv and Balasubramaniam, Sundar and Goyal, Navneet},
  title     = {{Parallelizing OPTICS for Multicore Systems}},
  booktitle = {Proceedings of the 7th ACM India Computing Conference},
  year      = {2014},
  series    = {COMPUTE '14},
  pages     = {17:1--17:6},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2675763},
  articleno = {17},
  doi       = {10.1145/2675744.2675763},
  file      = {Parallelizing OPTICS for Multicore Systems:goyal-compute-2014.pdf:PDF},
  isbn      = {978-1-60558-814-8},
  keywords  = {density-based clustering, multicore, optics, parallel computing, shared memory systems},
  location  = {Nagpur, India},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2675744.2675763},
}

@InProceedings{goyal-icdcn-2015,
  author    = {Goyal, Poonam and Kumari, Sonal and Kumar, Dhruv and Balasubramaniam, Sundar and Goyal, Navneet and Islam, Saiyedul and Challa, Jagat Sesh},
  title     = {{Parallelizing OPTICS for Commodity Clusters}},
  booktitle = {Proceedings of the 2015 International Conference on Distributed Computing and Networking},
  year      = {2015},
  series    = {ICDCN '15},
  pages     = {33:1--33:10},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2684477},
  articleno = {33},
  doi       = {10.1145/2684464.2684477},
  file      = {Parallelizing OPTICS for Commodity Clusters:goyal-icdcn-2015.pdf:PDF},
  isbn      = {978-1-4503-2928-6},
  keywords  = {Clustering, MPI, OPTICS, OpenMP, Parallel computing, R-trees, clusters, commodity clusters, density-based clustering, multicore},
  location  = {Goa, India},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2684464.2684477},
}

@InProceedings{guidotti-sigspatial-2015,
  author    = {Guidotti, Riccardo and Trasarti, Roberto and Nanni, Mirco},
  title     = {{TOSCA: Two-steps Clustering Algorithm for Personal Locations Detection}},
  booktitle = {Proceedings of the 23rd SIGSPATIAL International Conference on Advances in Geographic Information Systems},
  year      = {2015},
  series    = {SIGSPATIAL '15},
  pages     = {38:1--38:10},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2820818},
  articleno = {38},
  doi       = {10.1145/2820783.2820818},
  file      = {TOSCA\: Two-steps Clustering Algorithm for Personal Locations Detection:guidotti-sigspatial-2015.pdf:PDF},
  isbn      = {978-1-4503-3967-4},
  keywords  = {clustering algorithm, mobility data mining, personal locations detection},
  location  = {Seattle, Washington},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2820783.2820818},
}

@InProceedings{ziegler-btw-2019,
  author    = {Tobias Ziegler and Carsten Binnig and Uwe R{\"{o}}hm},
  title     = {{Skew-resilient Query Processing for Fast Networks}},
  booktitle = {Datenbanksysteme f{\"{u}}r Business, Technologie und Web {(BTW} 2019), 18. Fachtagung des GI-Fachbereichs ,,Datenbanken und Informationssysteme" (DBIS), 4.-8. M{\"{a}}rz 2019, Rostock, Germany, Workshopband},
  year      = {2019},
  pages     = {81--85},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/bib/conf/btw/0001BR19},
  doi       = {10.18420/btw2019-ws-06},
  file      = {Skew-resilient Query Processing for Fast Networks:ziegler-btw-2019.pdf:PDF},
  timestamp = {Mon, 08 Apr 2019 17:17:48 +0200},
  url       = {https://doi.org/10.18420/btw2019-ws-06},
}

@InProceedings{macarthur-hpcc-2012,
  author    = {P. {MacArthur} and R. D. {Russell}},
  title     = {{A Performance Study to Guide RDMA Programming Decisions}},
  booktitle = {2012 IEEE 14th International Conference on High Performance Computing and Communication 2012 IEEE 9th International Conference on Embedded Software and Systems},
  year      = {2012},
  pages     = {778-785},
  month     = {June},
  doi       = {10.1109/HPCC.2012.110},
  file      = {A Performance Study to Guide RDMA Programming Decisions:macarthur-hpcc-2012.pdf:PDF},
  keywords  = {application program interfaces;file organisation;message passing;virtual storage;workstation clusters;RDMA programming decisions;remote direct memory access programming technique;Infiniband RDMA;scientific high-performance computing clusters;HPC clusters;MPI;virtual memory;high-speed clusters;high-level programs;application program interfaces;message passing interface;Throughput;Servers;Programming;Protocols;Data structures;Operating systems;Sockets;RDMA;Infiniband;OFA;OFED;HPC},
}

@InProceedings{arulraj-sigmod-2016,
  author    = {Arulraj, Joy and Pavlo, Andrew and Menon, Prashanth},
  title     = {{Bridging the Archipelago Between Row-Stores and Column-Stores for Hybrid Workloads}},
  booktitle = {Proceedings of the 2016 International Conference on Management of Data},
  year      = {2016},
  series    = {SIGMOD '16},
  pages     = {583--598},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2915231},
  doi       = {10.1145/2882903.2915231},
  file      = {Bridging the Archipelago Between Row-Stores and Column-Stores for Hybrid Workloads:arulraj-sigmod-2016.pdf:PDF},
  isbn      = {978-1-4503-3531-7},
  keywords  = {HTAP, column-stores, hybrid workloads},
  location  = {San Francisco, California, USA},
  numpages  = {16},
  url       = {http://doi.acm.org/10.1145/2882903.2915231},
}

@InProceedings{arulraj-sigmod-2015,
  author    = {Arulraj, Joy and Pavlo, Andrew and Dulloor, Subramanya R.},
  title     = {{Let's Talk About Storage \&\#38; Recovery Methods for Non-Volatile Memory Database Systems}},
  booktitle = {Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data},
  year      = {2015},
  series    = {SIGMOD '15},
  pages     = {707--722},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2749441},
  doi       = {10.1145/2723372.2749441},
  file      = {Let's Talk About Storage \\&\\#38\; Recovery Methods for Non-Volatile Memory Database Systems:arulraj-sigmod-2015.pdf:PDF},
  isbn      = {978-1-4503-2758-9},
  keywords  = {non-volatile memory, oltp, recovery, storage engines},
  location  = {Melbourne, Victoria, Australia},
  numpages  = {16},
  url       = {http://doi.acm.org/10.1145/2723372.2749441},
}

@InProceedings{kalia-usenix-2016,
  author    = {Anuj Kalia and Michael Kaminsky and David G. Andersen},
  title     = {{Design Guidelines for High Performance {RDMA} Systems}},
  booktitle = {2016 {USENIX} Annual Technical Conference ({USENIX} {ATC} 16)},
  year      = {2016},
  pages     = {437--450},
  address   = {Denver, CO},
  publisher = {{USENIX} Association},
  file      = {Design Guidelines for High Performance RDMA Systems:kalia-usenix-2016.pdf:PDF},
  isbn      = {978-1-931971-30-0},
  url       = {https://www.usenix.org/conference/atc16/technical-sessions/presentation/kalia},
}

@InProceedings{raasveldt-dbtest-2018,
  author    = {Raasveldt, Mark and Holanda, Pedro and Gubner, Tim and M\"{u}hleisen, Hannes},
  title     = {{Fair Benchmarking Considered Difficult: Common Pitfalls In Database Performance Testing}},
  booktitle = {Proceedings of the Workshop on Testing Database Systems},
  year      = {2018},
  series    = {DBTest'18},
  pages     = {2:1--2:6},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3209955},
  articleno = {2},
  doi       = {10.1145/3209950.3209955},
  file      = {Fair Benchmarking Considered Difficult\: Common Pitfalls In Database Performance Testing:raasveldt-dbtest-2018.pdf:PDF},
  isbn      = {978-1-4503-5826-2},
  keywords  = {Benchmarking, Performance Evaluation},
  location  = {Houston, TX, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/3209950.3209955},
}

@InProceedings{chandramouli-sigmod-2018,
  author    = {Chandramouli, Badrish and Prasaad, Guna and Kossmann, Donald and Levandoski, Justin and Hunter, James and Barnett, Mike},
  title     = {{FASTER: A Concurrent Key-Value Store with In-Place Updates}},
  booktitle = {2018 ACM SIGMOD International Conference on Management of Data (SIGMOD '18), Houston, TX, USA},
  year      = {2018},
  month     = {June},
  publisher = {ACM},
  abstract  = {Over the last decade, there has been a tremendous growth in data-intensive applications and services in the cloud. Data is created on a variety of edge sources, e.g., devices, browsers, and servers, and processed by cloud applications to gain insights or take decisions. Applications and services either work on collected data, or monitor and process data in real time. These applications are typically update intensive and involve a large amount of state beyond what can fit in main memory. However, they display significant temporal locality in their access pattern. This paper presents FASTER, a new key-value store for point operations. FASTER combines a highly cache-optimized concurrent hash index with a "hybrid log": a concurrent log-structured record store that spans main memory and storage, while supporting fast in-place updates of the hot set in memory. FASTER extends the standard key-value store interface to handle read-modify-writes, blind updates, and CRDT-based updates. Experiments show that FASTER achieves orders-of-magnitude better throughput - up to 160M operations per second on a single machine - than alternative systems deployed widely today, and exceeds the performance of pure in-memory data structures when the workload fits in memory.},
  edition   = {2018 ACM SIGMOD International Conference on Management of Data (SIGMOD '18), Houston, TX, USA},
  file      = {FASTER\: A Concurrent Key-Value Store with In-Place Updates:chandramouli-sigmod-2018.pdf:PDF},
  url       = {https://www.microsoft.com/en-us/research/publication/faster-concurrent-key-value-store-place-updates/},
}

@InProceedings{arulraj-sigmod-2017,
  author    = {Arulraj, Joy and Pavlo, Andrew},
  title     = {{How to Build a Non-Volatile Memory Database Management System}},
  booktitle = {Proceedings of the 2017 ACM International Conference on Management of Data},
  year      = {2017},
  series    = {SIGMOD '17},
  pages     = {1753--1758},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3054780},
  doi       = {10.1145/3035918.3054780},
  file      = {How to Build a Non-Volatile Memory Database Management System:arulraj-sigmod-2017.pdf:PDF},
  isbn      = {978-1-4503-4197-4},
  keywords  = {database management systems, non-volatile memory},
  location  = {Chicago, Illinois, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/3035918.3054780},
}

@InProceedings{zhu-hpcc-2018,
  author    = {S. {Zhu} and L. {Gagliardelli} and G. {Simonini} and D. {Beneventano}},
  title     = {{How Improve Set Similarity Join Based on Prefix Approach in Distributed Environment}},
  booktitle = {2018 International Conference on High Performance Computing Simulation (HPCS)},
  year      = {2018},
  pages     = {844-851},
  month     = {July},
  doi       = {10.1109/HPCS.2018.00136},
  file      = {How Improve Set Similarity Join Based on Prefix Approach in Distributed Environment:zhu-hpcc-2018.pdf:PDF},
  keywords  = {data analysis;data integration;parallel processing;resource allocation;set theory;prefix approach;distributed environment;data analytics applications;PPJoin;set similarity join algorithm;parallel processing;load balancing;skewness problem;prefix filter;Apache Spark;TTJoin MapReduce implementation;duplicate-free technique;data integration;Load management;Mathematical model;Distributed databases;Partitioning algorithms;Computational modeling;Data models;Data integration},
}

@InProceedings{leis-icde-2018,
  author    = {V. {Leis} and M. {Haubenschild} and A. {Kemper} and T. {Neumann}},
  title     = {{LeanStore: In-Memory Data Management beyond Main Memory}},
  booktitle = {2018 IEEE 34th International Conference on Data Engineering (ICDE)},
  year      = {2018},
  pages     = {185-196},
  month     = {April},
  doi       = {10.1109/ICDE.2018.00026},
  file      = {LeanStore\: In-Memory Data Management beyond Main Memory:leis-icde-2018.pdf:PDF},
  issn      = {2375-026X},
  keywords  = {database management systems;storage management;in-memory system;in-memory database systems;buffer management;data sets;novel storage manager;in-memory data management;disk-based database systems;buffer managers;buffer manager;LeanStore;multicore CPUs;Random access memory;Indexes;Memory management;Hardware;Data structures;storage engine;in memory;SSD},
}

@InProceedings{ristov-kbnets-2017,
  author    = {Ristov, Samyon and Weinsberg, Yaron and Dolev, Danny and Anker, Tal},
  title     = {{LogMemcached: An RDMA Based Continuous Cache Replication}},
  booktitle = {Proceedings of the Workshop on Kernel-Bypass Networks},
  year      = {2017},
  series    = {KBNets '17},
  pages     = {1--6},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3098584},
  doi       = {10.1145/3098583.3098584},
  file      = {LogMemcached\: An RDMA Based Continuous Cache Replication:ristov-kbnets-2017.pdf:PDF},
  isbn      = {978-1-4503-5053-2},
  keywords  = {Availability, Cache Replication, Memcached, RDMA},
  location  = {Los Angeles, CA, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/3098583.3098584},
}

@InProceedings{vanrenen-sigmod-2018,
  author    = {van Renen, Alexander and Leis, Viktor and Kemper, Alfons and Neumann, Thomas and Hashida, Takushi and Oe, Kazuichi and Doi, Yoshiyasu and Harada, Lilian and Sato, Mitsuru},
  title     = {{Managing Non-Volatile Memory in Database Systems}},
  booktitle = {Proceedings of the 2018 International Conference on Management of Data},
  year      = {2018},
  series    = {SIGMOD '18},
  pages     = {1541--1555},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3196897},
  doi       = {10.1145/3183713.3196897},
  file      = {Managing Non-Volatile Memory in Database Systems:vanrenen-sigmod-2018.pdf:PDF},
  isbn      = {978-1-4503-4703-7},
  keywords  = {database architecture, non-volatile memory},
  location  = {Houston, TX, USA},
  numpages  = {15},
  url       = {http://doi.acm.org/10.1145/3183713.3196897},
}

@InProceedings{dragojevic-sosp-2015,
  author    = {Dragojevi\'{c}, Aleksandar and Narayanan, Dushyanth and Nightingale, Edmund B. and Renzelmann, Matthew and Shamis, Alex and Badam, Anirudh and Castro, Miguel},
  title     = {{No Compromises: Distributed Transactions with Consistency, Availability, and Performance}},
  booktitle = {Proceedings of the 25th Symposium on Operating Systems Principles},
  year      = {2015},
  series    = {SOSP '15},
  pages     = {54--70},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2815425},
  doi       = {10.1145/2815400.2815425},
  file      = {No Compromises\: Distributed Transactions with Consistency, Availability, and Performance:dragojevic-sosp-2015.pdf:PDF},
  isbn      = {978-1-4503-3834-9},
  location  = {Monterey, California},
  numpages  = {17},
  url       = {http://doi.acm.org/10.1145/2815400.2815425},
}

@InProceedings{lu-usenix-2017,
  author    = {Youyou Lu and Jiwu Shu and Youmin Chen and Tao Li},
  title     = {{Octopus: an RDMA-enabled Distributed Persistent Memory File System}},
  booktitle = {2017 {USENIX} Annual Technical Conference ({USENIX} {ATC} 17)},
  year      = {2017},
  pages     = {773--785},
  address   = {Santa Clara, CA},
  publisher = {{USENIX} Association},
  file      = {Octopus\: an RDMA-enabled Distributed Persistent Memory File System:lu-usenix-2017.pdf:PDF},
  isbn      = {978-1-931971-38-6},
  url       = {https://www.usenix.org/conference/atc17/technical-sessions/presentation/lu},
}

@Article{manegold-tkde-2002,
  author   = {S. {Manegold} and P. {Boncz} and M. {Kersten}},
  title    = {{Optimizing main-memory join on modern hardware}},
  journal  = {IEEE Transactions on Knowledge and Data Engineering},
  year     = {2002},
  volume   = {14},
  number   = {4},
  pages    = {709-730},
  month    = {July},
  issn     = {1041-4347},
  doi      = {10.1109/TKDE.2002.1019210},
  file     = {Optimizing main-memory join on modern hardware:manegold-tkde-2002.pdf:PDF},
  keywords = {query processing;optimisation;performance evaluation;database machines;data structures;cache storage;main-memory join optimization;modern hardware;commodity CPU speed;memory latency;CPU performance;clock rate;parallelism;database systems;resource utilization;future database architectures;algorithms;cost modeling;vertically fragmented data structures;cache performance optimization;sequential data access;partitioned hash-join;radix-cluster partitioning algorithm;memory access optimization;algorithm performance;analytical model;memory access costs;cache sizes;miss penalties;calibration tool;automatic parameter extraction;accuracy;Monet database system;hardware platforms;implementation techniques;CPU resource usage optimization;RISC hardware;main-memory databases;query processing;decomposed storage model;Hardware;Partitioning algorithms;Database systems;Data structures;Delay;Clocks;Parallel processing;Guidelines;Cost function;Algorithm design and analysis},
}

@InProceedings{alonso-cidr-2019,
  author    = {Gustavo Alonso and Carsten Binnig and Ippokratis Pandis and Kenneth Salem and Jan Skrzypczak and Ryan Stutsman and Lasse Thostrup and Tianzheng Wang and Zeke Wang and Tobias Ziegler},
  title     = {{{DPI:} The Data Processing Interface for Modern Networks}},
  booktitle = {{CIDR} 2019, 9th Biennial Conference on Innovative Data Systems Research, Asilomar, CA, USA, January 13-16, 2019, Online Proceedings},
  year      = {2019},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/bib/conf/cidr/AlonsoBPSSST0W019},
  file      = {DPI\: The Data Processing Interface for Modern Networks:alonso-cidr-2019.pdf:PDF},
  timestamp = {Thu, 17 Jan 2019 16:08:33 +0100},
  url       = {http://cidrdb.org/cidr2019/papers/p11-alonso-cidr19.pdf},
}

@InProceedings{huang-cikm-2010,
  author    = {Huang, Jianbin and Sun, Heli and Han, Jiawei and Deng, Hongbo and Sun, Yizhou and Liu, Yaguang},
  title     = {{SHRINK: A Structural Clustering Algorithm for Detecting Hierarchical Communities in Networks}},
  booktitle = {Proceedings of the 19th ACM International Conference on Information and Knowledge Management},
  year      = {2010},
  series    = {CIKM '10},
  pages     = {219--228},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1871469},
  doi       = {10.1145/1871437.1871469},
  file      = {SHRINK\: A Structural Clustering Algorithm for Detecting Hierarchical Communities in Networks:huang-cikm-2010.pdf:PDF},
  isbn      = {978-1-4503-0099-5},
  keywords  = {graph clustering, hierarchical community discovery, hubs and outliers},
  location  = {Toronto, ON, Canada},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/1871437.1871469},
}

@Article{gong-vldb-2017,
  author     = {Gong, Shufeng and Zhang, Yanfeng and Yu, Ge},
  title      = {{Clustering Stream Data by Exploring the Evolution of Density Mountain}},
  journal    = {Proc. VLDB Endow.},
  year       = {2017},
  volume     = {11},
  number     = {4},
  pages      = {393--405},
  month      = dec,
  issn       = {2150-8097},
  acmid      = {3164136},
  doi        = {10.1145/3186728.3164136},
  file       = {Clustering Stream Data by Exploring the Evolution of Density Mountain:gong-vldb-2017.pdf:PDF},
  issue_date = {December 2017},
  numpages   = {13},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.1145/3186728.3164136},
}

@Article{arulraj-vldb-2018,
  author     = {Arulraj, Joy and Levandoski, Justin and Minhas, Umar Farooq and Larson, Per-Ake},
  title      = {{Bztree: A High-performance Latch-free Range Index for Non-volatile Memory}},
  journal    = {Proc. VLDB Endow.},
  year       = {2018},
  volume     = {11},
  number     = {5},
  pages      = {553--565},
  month      = jan,
  issn       = {2150-8097},
  acmid      = {3164147},
  doi        = {10.1145/3187009.3164147},
  file       = {Bztree\: A High-performance Latch-free Range Index for Non-volatile Memory:arulraj-vldb-2018.pdf:PDF},
  issue_date = {January 2018},
  numpages   = {13},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.1145/3187009.3164147},
}

@InProceedings{ziegler-sigmod-2019,
  author    = {Ziegler, Tobias and Tumkur Vani, Sumukha and Binnig, Carsten and Fonseca, Rodrigo and Kraska, Tim},
  title     = {{Designing Distributed Tree-based Index Structures for Fast RDMA-capable Networks}},
  booktitle = {Proceedings of the 2019 International Conference on Management of Data},
  year      = {2019},
  series    = {SIGMOD '19},
  pages     = {741--758},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3300081},
  doi       = {10.1145/3299869.3300081},
  file      = {Designing Distributed Tree-based Index Structures for Fast RDMA-capable Networks:ziegler-sigmod-2019.pdf:PDF},
  isbn      = {978-1-4503-5643-5},
  keywords  = {databases, indexes, rdma},
  location  = {Amsterdam, Netherlands},
  numpages  = {18},
  url       = {http://doi.acm.org/10.1145/3299869.3300081},
}

@Article{wang-vldb-2017,
  author     = {Wang, Xubo and Qin, Lu and Lin, Xuemin and Zhang, Ying and Chang, Lijun},
  title      = {{Leveraging Set Relations in Exact Set Similarity Join}},
  journal    = {Proc. VLDB Endow.},
  year       = {2017},
  volume     = {10},
  number     = {9},
  pages      = {925--936},
  month      = may,
  issn       = {2150-8097},
  acmid      = {3099624},
  doi        = {10.14778/3099622.3099624},
  file       = {Leveraging Set Relations in Exact Set Similarity Join:wang-vldb-2017.pdf:PDF},
  issue_date = {May 2017},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3099622.3099624},
}

@Article{fier-vldb-2018,
  author     = {Fier, Fabian and Augsten, Nikolaus and Bouros, Panagiotis and Leser, Ulf and Freytag, Johann-Christoph},
  title      = {{Set Similarity Joins on Mapreduce: An Experimental Survey}},
  journal    = {Proc. VLDB Endow.},
  year       = {2018},
  volume     = {11},
  number     = {10},
  pages      = {1110--1122},
  month      = jun,
  issn       = {2150-8097},
  acmid      = {3242932},
  doi        = {10.14778/3231751.3231760},
  file       = {Set Similarity Joins on Mapreduce\: An Experimental Survey:fier-vldb-2018.pdf:PDF},
  issue_date = {June 2018},
  numpages   = {13},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3231751.3231760},
}

@InProceedings{song-sigmod-2018,
  author    = {Song, Hwanjun and Lee, Jae-Gil},
  title     = {{RP-DBSCAN: A Superfast Parallel DBSCAN Algorithm Based on Random Partitioning}},
  booktitle = {Proceedings of the 2018 International Conference on Management of Data},
  year      = {2018},
  series    = {SIGMOD '18},
  pages     = {1173--1187},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3196887},
  doi       = {10.1145/3183713.3196887},
  file      = {RP-DBSCAN\: A Superfast Parallel DBSCAN Algorithm Based on Random Partitioning:song-sigmod-2018.pdf:PDF},
  isbn      = {978-1-4503-4703-7},
  keywords  = {clustering, dbscan, parallelization, spark},
  location  = {Houston, TX, USA},
  numpages  = {15},
  url       = {http://doi.acm.org/10.1145/3183713.3196887},
}

@InProceedings{gan-sigmod-2017,
  author    = {Gan, Junhao and Tao, Yufei},
  title     = {{Dynamic Density Based Clustering}},
  booktitle = {Proceedings of the 2017 ACM International Conference on Management of Data},
  year      = {2017},
  series    = {SIGMOD '17},
  pages     = {1493--1507},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3064050},
  doi       = {10.1145/3035918.3064050},
  file      = {Dynamic Density Based Clustering:gan-sigmod-2017.pdf:PDF},
  isbn      = {978-1-4503-4197-4},
  keywords  = {algorithms, approximate dbscan, dynamic clustering},
  location  = {Chicago, Illinois, USA},
  numpages  = {15},
  url       = {http://doi.acm.org/10.1145/3035918.3064050},
}

@InProceedings{shanbhag-sigmod-2018,
  author    = {Shanbhag, Anil and Pirk, Holger and Madden, Samuel},
  title     = {{Efficient Top-K Query Processing on Massively Parallel Hardware}},
  booktitle = {Proceedings of the 2018 International Conference on Management of Data},
  year      = {2018},
  series    = {SIGMOD '18},
  pages     = {1557--1570},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3183735},
  doi       = {10.1145/3183713.3183735},
  file      = {Efficient Top-K Query Processing on Massively Parallel Hardware:shanbhag-sigmod-2018.pdf:PDF},
  isbn      = {978-1-4503-4703-7},
  keywords  = {bitonic top-k, top-k algorithms for gpu},
  location  = {Houston, TX, USA},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/3183713.3183735},
}

@InProceedings{yoon-sigmod-2018,
  author    = {Yoon, Dong Young and Chowdhury, Mosharaf and Mozafari, Barzan},
  title     = {{Distributed Lock Management with RDMA: Decentralization Without Starvation}},
  booktitle = {Proceedings of the 2018 International Conference on Management of Data},
  year      = {2018},
  series    = {SIGMOD '18},
  pages     = {1571--1586},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3196890},
  doi       = {10.1145/3183713.3196890},
  file      = {Distributed Lock Management with RDMA\: Decentralization Without Starvation:yoon-sigmod-2018.pdf:PDF},
  isbn      = {978-1-4503-4703-7},
  keywords  = {decentralized, distributed locking, distributed systems, infiniband, rdma, serializability, starvation-free},
  location  = {Houston, TX, USA},
  numpages  = {16},
  url       = {http://doi.acm.org/10.1145/3183713.3196890},
}

@Article{cao-vldb-2018,
  author     = {Cao, Wei and Liu, Zhenjun and Wang, Peng and Chen, Sen and Zhu, Caifeng and Zheng, Song and Wang, Yuhui and Ma, Guoqing},
  title      = {{PolarFS: An Ultra-low Latency and Failure Resilient Distributed File System for Shared Storage Cloud Database}},
  journal    = {Proc. VLDB Endow.},
  year       = {2018},
  volume     = {11},
  number     = {12},
  pages      = {1849--1862},
  month      = aug,
  issn       = {2150-8097},
  acmid      = {3275552},
  doi        = {10.14778/3229863.3229872},
  file       = {PolarFS\: An Ultra-low Latency and Failure Resilient Distributed File System for Shared Storage Cloud Database:cao-vldb-2018.pdf:PDF},
  issue_date = {August 2018},
  numpages   = {14},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3229863.3229872},
}

@InProceedings{aguilera-socc-2017,
  author    = {Aguilera, Marcos K. and Amit, Nadav and Calciu, Irina and Deguillard, Xavier and Gandhi, Jayneel and Subrahmanyam, Pratap and Suresh, Lalith and Tati, Kiran and Venkatasubramanian, Rajesh and Wei, Michael},
  title     = {{Remote Memory in the Age of Fast Networks}},
  booktitle = {Proceedings of the 2017 Symposium on Cloud Computing},
  year      = {2017},
  series    = {SoCC '17},
  pages     = {121--127},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3131612},
  doi       = {10.1145/3127479.3131612},
  file      = {Remote Memory in the Age of Fast Networks:aguilera-socc-2017.pdf:PDF},
  isbn      = {978-1-4503-5028-0},
  location  = {Santa Clara, California},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/3127479.3131612},
}

@Article{andrei-vldb-2017,
  author     = {Andrei, Mihnea and Lemke, Christian and Radestock, G\"{u}nter and Schulze, Robert and Thiel, Carsten and Blanco, Rolando and Meghlan, Akanksha and Sharique, Muhammad and Seifert, Sebastian and Vishnoi, Surendra and Booss, Daniel and Peh, Thomas and Schreter, Ivan and Thesing, Werner and Wagle, Mehul and Willhalm, Thomas},
  title      = {{SAP HANA Adoption of Non-volatile Memory}},
  journal    = {Proc. VLDB Endow.},
  year       = {2017},
  volume     = {10},
  number     = {12},
  pages      = {1754--1765},
  month      = aug,
  issn       = {2150-8097},
  acmid      = {3137780},
  doi        = {10.14778/3137765.3137780},
  file       = {SAP HANA Adoption of Non-volatile Memory:andrei-vldb-2017.pdf:PDF},
  issue_date = {August 2017},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3137765.3137780},
}

@Article{wang-vldbj-2019,
  author   = {Wang, Xubo and Qin, Lu and Lin, Xuemin and Zhang, Ying and Chang, Lijun},
  title    = {{Leveraging set relations in exact and dynamic set similarity join}},
  journal  = {The VLDB Journal},
  year     = {2019},
  volume   = {28},
  number   = {2},
  pages    = {267--292},
  month    = {Apr},
  issn     = {0949-877X},
  abstract = {Set similarity join, which finds all the similar set pairs from two collections of sets, is a fundamental problem with a wide range of applications. Existing works study both exact set similarity join and approximate similarity join problems. In this paper, we focus on the exact set similarity join problem. The existing solutions for exact set similarity join follow a filtering-verification framework, which generates a list of candidate pairs through scanning indexes in the filtering phase and reports those similar pairs in the verification phase. Though much research has been conducted on this problem, set relations have not been well studied on improving the algorithm efficiency through computational cost sharing. Therefore, in this paper, we explore the set relations in different levels to reduce the overall computational cost. First, it has been shown that most of the computational time is spent on the filtering phase, which can be quadratic to the number of sets in the worst case for the existing solutions. Thus, we explore index-level set relations to reduce the filtering cost while keeping the same filtering power. We achieve this by grouping related sets into blocks in the index and skipping useless index probes in joins. Second, we explore answer-level set relations to further improve the algorithm based on the intuition that if two sets are similar, their answers may have a large overlap. We derive an algorithm which incrementally generates the answer of one set from an already computed answer of another similar set rather than compute the answer from scratch to reduce the computational cost. In addition, considering that in real applications, the data are usually updated dynamically, we extend our techniques and design efficient algorithms to incrementally update the join result when any element in the sets is updated. Finally, we conduct extensive performance studies using 21 real datasets with various data properties from a wide range of domains. The experimental results demonstrate that our algorithm outperforms all the existing algorithms across all datasets.},
  day      = {01},
  doi      = {10.1007/s00778-018-0529-2},
  file     = {Leveraging set relations in exact and dynamic set similarity join:wang-vldbj-2019.pdf:PDF},
  url      = {https://doi.org/10.1007/s00778-018-0529-2},
}

@InProceedings{frey-phdthesis-2010,
  author = {Philip Werner Frey},
  title  = {{Zero-Copy Network Communication : An Applicability Study of iWARP beyond Micro Benchmarks}},
  year   = {2010},
  file   = {Zero-Copy Network Communication \: An Applicability Study of iWARP beyond Micro Benchmarks:frey-phdthesis-2010.pdf:PDF},
}

@InProceedings{pavlo-phdthesis-2013,
  author = {Andrew Pavlo},
  title  = {{On Scalable Transaction Execution in Partitioned Main Memory Database Management Systems}},
  year   = {2013},
  file   = {On Scalable Transaction Execution in Partitioned Main Memory Database Management Systems:pavlo-phdthesis-2013.pdf:PDF},
}

@Article{liu-jcsc-2018,
  author     = {Liu, Qian},
  title      = {{Introducing RDMA into Computer Networks Course: Design and Experience}},
  journal    = {J. Comput. Sci. Coll.},
  year       = {2018},
  volume     = {34},
  number     = {1},
  pages      = {71--80},
  month      = oct,
  issn       = {1937-4771},
  acmid      = {3280501},
  address    = {USA},
  file       = {Introducing RDMA into Computer Networks Course\: Design and Experience:liu-jcsc-2018.pdf:PDF},
  issue_date = {October 2018},
  numpages   = {10},
  publisher  = {Consortium for Computing Sciences in Colleges},
  url        = {http://dl.acm.org/citation.cfm?id=3280489.3280501},
}

@Article{boehm-morganclaypool-2019,
  author  = {Boehm, Matthias and Kumar, Arun and Yang, Jun},
  title   = {{Data Management in Machine Learning Systems}},
  journal = {Synthesis Lectures on Data Management},
  year    = {2019},
  volume  = {14},
  pages   = {1-173},
  month   = {02},
  doi     = {10.2200/S00895ED1V01Y201901DTM057},
  file    = {Data Management in Machine Learning Systems:boehm-morganclaypool-2019.pdf:PDF},
}

@Article{arulraj-morganclaypool-2019,
  author  = {Arulraj, Joy and Pavlo, Andrew},
  title   = {{Non-Volatile Memory Database Management Systems}},
  journal = {Synthesis Lectures on Data Management},
  year    = {2019},
  volume  = {11},
  pages   = {1-191},
  month   = {02},
  doi     = {10.2200/S00891ED1V01Y201812DTM055},
  file    = {Non-Volatile Memory Database Management Systems:arulraj-morganclaypool-2019.pdf:PDF},
}

@InProceedings{demaine-lcns-2007,
  author    = {Demaine, Erik D. and Mozes, Shay and Rossman, Benjamin and Weimann, Oren},
  title     = {{An Optimal Decomposition Algorithm for Tree Edit Distance}},
  booktitle = {Automata, Languages and Programming},
  year      = {2007},
  editor    = {Arge, Lars and Cachin, Christian and Jurdzi{\'{n}}ski, Tomasz and Tarlecki, Andrzej},
  pages     = {146--157},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {The edit distance between two ordered rooted trees with vertex labels is the minimum cost of transforming one tree into the other by a sequence of elementary operations consisting of deleting and relabeling existing nodes, as well as inserting new nodes. In this paper, we present a worst-case O(n3)-time algorithm for this problem, improving the previous best O(n3logn)-time algorithm [7]. Our result requires a novel adaptive strategy for deciding how a dynamic program divides into subproblems, together with a deeper understanding of the previous algorithms for the problem. We prove the optimality of our algorithm among the family of decomposition strategy algorithms---which also includes the previous fastest algorithms---by tightening the known lower bound of $\Omega$(n2log2n) [4] to $\Omega$(n3), matching our algorithm's running time. Furthermore, we obtain matching upper and lower bounds of {\$}{\backslash}Theta(n m^2 (1 + {\backslash}log {\backslash}frac{\{}n{\}}{\{}m{\}})){\$}when the two trees have sizes m and n where m{\thinspace}<{\thinspace}n.},
  file      = {demaine-lcns-2007.pdf:demaine-lcns-2007.pdf:PDF},
  isbn      = {978-3-540-73420-8},
}

@InProceedings{puhlmann-edbt-2016,
  author    = {Sven Puhlmann and Melanie Weis and Felix Naumann},
  title     = {{XML} Duplicate Detection Using Sorted Neighborhoods},
  booktitle = {International Conference on Extending Database Technology (EDBT)},
  year      = {2006},
  volume    = {3896},
  series    = {Lecture Notes in Computer Science},
  pages     = {773--791},
  publisher = {Springer},
  doi       = {10.1007/11687238\_46},
  file      = {puhlmann-edbt-2016.pdf:puhlmann-edbt-2016.pdf:PDF},
}

@InCollection{calado-book-2010,
  author    = {P{\'{a}}vel Calado and Melanie Herschel and Lu{\'{\i}}s Leit{\~{a}}o},
  title     = {{An Overview of {XML} Duplicate Detection Algorithms}},
  booktitle = {Soft Computing in {XML} Data Management - Intelligent Systems from Decision Making to Data Mining, Web Intelligence and Computer Vision},
  publisher = {Springer},
  year      = {2010},
  volume    = {255},
  series    = {Studies in Fuzziness and Soft Computing},
  pages     = {193--224},
  isbn      = {978-3-642-14009-9},
  doi       = {10.1007/978-3-642-14010-5\_8},
}

@Article{ilyas-acmcs-2008,
  author    = {Ihab F. Ilyas and George Beskales and Mohamed A. Soliman},
  title     = {{A Survey of Top-\emph{k} Query Processing Techniques in Relational Database Systems}},
  journal   = {{ACM} Comput. Surv.},
  year      = {2008},
  volume    = {40},
  number    = {4},
  pages     = {11:1--11:58},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/bib/journals/csur/IlyasBS08},
  doi       = {10.1145/1391729.1391730},
  file      = {ilyas-acmcs-2008.pdf:ilyas-acmcs-2008.pdf:PDF},
  timestamp = {Mon, 05 Jun 2017 20:51:53 +0200},
  url       = {http://doi.acm.org/10.1145/1391729.1391730},
}

@Article{sun-vldb-2019,
  author     = {Sun, Ji and Shang, Zeyuan and Li, Guoliang and Deng, Dong and Bao, Zhifeng},
  title      = {{Balance-aware Distributed String Similarity-based Query Processing System}},
  journal    = {Proc. VLDB Endow.},
  year       = {2019},
  volume     = {12},
  number     = {9},
  pages      = {961--974},
  month      = may,
  issn       = {2150-8097},
  acmid      = {3342041},
  doi        = {10.14778/3329772.3329774},
  file       = {Balance-aware Distributed String Similarity-based Query Processing System:sun-vldb-2019.pdf:PDF},
  issue_date = {May 2019},
  numpages   = {14},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3329772.3329774},
}

@InProceedings{deng-icde-2019,
  author    = {D. {Deng} and C. {Yang} and S. {Shang} and F. {Zhu} and L. {Liu} and L. {Shao}},
  title     = {{LCJoin: Set Containment Join via List Crosscutting}},
  booktitle = {2019 IEEE 35th International Conference on Data Engineering (ICDE)},
  year      = {2019},
  pages     = {362-373},
  month     = {April},
  doi       = {10.1109/ICDE.2019.00040},
  file      = {LCJoin\: Set Containment Join via List Crosscutting:deng-icde-2019.pdf:PDF},
  issn      = {2375-026X},
  keywords  = {set theory;tree data structures;containment join;list crosscutting;set containment;set-valued attributes;subset relationship;join condition;publish/subscribe services;inclusion dependency discovery;union-oriented methods;expensive subset enumeration step;inverted index;attribute;inverted lists;novel list intersection method;Indexes;Silicon;Scalability;Conferences;Data engineering;Fans;Design methodology;Set Containment;Similarity Join;Approximate Query Processing;Data Integration},
}

@Article{campello-tkdd-2015,
  author     = {Campello, Ricardo J. G. B. and Moulavi, Davoud and Zimek, Arthur and Sander, J\"{o}rg},
  title      = {{Hierarchical Density Estimates for Data Clustering, Visualization, and Outlier Detection}},
  journal    = {ACM Trans. Knowl. Discov. Data},
  year       = {2015},
  volume     = {10},
  number     = {1},
  pages      = {5:1--5:51},
  month      = jul,
  issn       = {1556-4681},
  acmid      = {2733381},
  address    = {New York, NY, USA},
  articleno  = {5},
  doi        = {10.1145/2733381},
  file       = {Hierarchical Density Estimates for Data Clustering, Visualization, and Outlier Detection:campello-tkdd-2015.pdf:PDF},
  issue_date = {July 2015},
  keywords   = {Density-based clustering, data visualization, global/local outliers, hierarchical and nonhierarchical clustering, outlier detection, unsupervised and semisupervised clustering},
  numpages   = {51},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2733381},
}

@InProceedings{campello-akddm-2013,
  author    = {Campello, Ricardo J. G. B. and Moulavi, Davoud and Sander, Joerg},
  title     = {{Density-Based Clustering Based on Hierarchical Density Estimates}},
  booktitle = {Advances in Knowledge Discovery and Data Mining},
  year      = {2013},
  editor    = {Pei, Jian and Tseng, Vincent S. and Cao, Longbing and Motoda, Hiroshi and Xu, Guandong},
  pages     = {160--172},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {We propose a theoretically and practically improved density-based, hierarchical clustering method, providing a clustering hierarchy from which a simplified tree of significant clusters can be constructed. For obtaining a ``flat'' partition consisting of only the most significant clusters (possibly corresponding to different density thresholds), we propose a novel cluster stability measure, formalize the problem of maximizing the overall stability of selected clusters, and formulate an algorithm that computes an optimal solution to this problem. We demonstrate that our approach outperforms the current, state-of-the-art, density-based clustering methods on a wide variety of real world data.},
  file      = {Density-Based Clustering Based on Hierarchical Density Estimates:campello-akddm-2013.pdf:PDF},
  isbn      = {978-3-642-37456-2},
}

@Article{campello-dmkd-2013,
  author   = {Campello, R. J. G. B. and Moulavi, D. and Zimek, A. and Sander, J.},
  title    = {{A framework for semi-supervised and unsupervised optimal extraction of clusters from hierarchies}},
  journal  = {Data Mining and Knowledge Discovery},
  year     = {2013},
  volume   = {27},
  number   = {3},
  pages    = {344--371},
  month    = {Nov},
  issn     = {1573-756X},
  abstract = {We introduce a framework for the optimal extraction of flat clusterings from local cuts through cluster hierarchies. The extraction of a flat clustering from a cluster tree is formulated as an optimization problem and a linear complexity algorithm is presented that provides the globally optimal solution to this problem in semi-supervised as well as in unsupervised scenarios. A collection of experiments is presented involving clustering hierarchies of different natures, a variety of real data sets, and comparisons with specialized methods from the literature.},
  day      = {01},
  doi      = {10.1007/s10618-013-0311-4},
  file     = {A framework for semi-supervised and unsupervised optimal extraction of clusters from hierarchies:campello-dmkd-2013.pdf:PDF},
  url      = {https://doi.org/10.1007/s10618-013-0311-4},
}

@InProceedings{zhu-sigmod-2019,
  author    = {Zhu, Erkang and Deng, Dong and Nargesian, Fatemeh and Miller, Ren{\'e}e J.},
  title     = {{JOSIE: Overlap Set Similarity Search for Finding Joinable Tables in Data Lakes}},
  booktitle = {Proceedings of the 2019 International Conference on Management of Data},
  year      = {2019},
  series    = {SIGMOD '19},
  pages     = {847--864},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3300065},
  doi       = {10.1145/3299869.3300065},
  file      = {JOSIE\: Overlap Set Similarity Search for Finding Joinable Tables in Data Lakes:zhu-sigmod-2019.pdf:PDF},
  isbn      = {978-1-4503-5643-5},
  keywords  = {data discovery, data lakes, joinable table search, set similarity search},
  location  = {Amsterdam, Netherlands},
  numpages  = {18},
  url       = {http://doi.acm.org/10.1145/3299869.3300065},
}

@InProceedings{sharma-www-2017,
  author    = {Sharma, Aneesh and Seshadhri, C. and Goel, Ashish},
  title     = {{When Hashes Met Wedges: A Distributed Algorithm for Finding High Similarity Vectors}},
  booktitle = {Proceedings of the 26th International Conference on World Wide Web},
  year      = {2017},
  series    = {WWW ’17},
  pages     = {431–440},
  address   = {Republic and Canton of Geneva, CHE},
  publisher = {International World Wide Web Conferences Steering Committee},
  doi       = {10.1145/3038912.3052633},
  file      = {:sharma-www-2017.pdf:PDF},
  isbn      = {9781450349130},
  keywords  = {similarity search, matrix multiplication, wedge sampling, nearest neighbor search},
  location  = {Perth, Australia},
  numpages  = {10},
  url       = {https://doi.org/10.1145/3038912.3052633},
}

@Article{bellas-infsys-2020,
  author   = {Christos Bellas and Anastasios Gounaris},
  title    = {An empirical evaluation of exact set similarity join techniques using GPUs},
  journal  = {Information Systems},
  year     = {2020},
  volume   = {89},
  pages    = {101485},
  issn     = {0306-4379},
  abstract = {Exact set similarity join is a notoriously expensive operation, for which several solutions have been proposed. Recently, there have been studies that present a comparative analysis using MapReduce or a non-parallel setting. Our contribution is that we complement these works through conducting a thorough evaluation of the state-of-the-art GPU-enabled techniques. These techniques are highly diverse in their key features and our experiments manage to reveal the key strengths of each one. As we explain, in real-life applications there is no dominant solution. Depending on specific dataset and query characteristics, each solution, even not using the GPU at all, has its own sweet spot. All our work is repeatable and extensible.},
  doi      = {https://doi.org/10.1016/j.is.2019.101485},
  file     = {:bellas-infsys-2020.pdf:PDF},
  keywords = {Set-similarity join, GPU computing, CUDA},
  url      = {http://www.sciencedirect.com/science/article/pii/S030643791930537X},
}

@Article{sandes-infsys-2020,
  author   = {Edans F.O. Sandes and George L.M. Teodoro and Alba C.M.A. Melo},
  title    = {Bitmap filter: Speeding up exact set similarity joins with bitwise operations},
  journal  = {Information Systems},
  year     = {2020},
  volume   = {88},
  pages    = {101449},
  issn     = {0306-4379},
  abstract = {The Exact Set Similarity Join problem aims to find all similar sets between two collections of sets, with respect to a threshold and a similarity function such as Overlap, Jaccard, Dice or Cosine. The naïve approach verifies all pairs of sets and it is often considered impractical due the high number of combinations. So, Exact Set Similarity Join algorithms are usually based on the Filter-Verification Framework, that applies a series of filters to reduce the number of verified pairs. This paper presents a new filtering technique called Bitmap Filter, which is able to accelerate state-of-the-art algorithms for the exact Set Similarity Join problem. The Bitmap Filter uses hash functions to create bitmaps of fixed b bits, representing characteristics of the sets. Then, it applies bitwise operations (such as xor and population count) on the bitmaps in order to infer a similarity upper bound for each pair of sets. If the upper bound is below a given similarity threshold, the pair of sets is pruned. The Bitmap Filter benefits from the fact that bitwise operations are efficiently implemented by many modern general-purpose processors and it was easily applied to four state-of-the-art algorithms implemented in CPU: AllPairs, PPJoin, AdaptJoin and GroupJoin. Furthermore, we propose a Graphic Processor Unit (GPU) algorithm based on the naïve approach but using the Bitmap Filter to speedup the computation. The experiments considered 12 collections containing from 100 thousands up to 10 million sets and the joins were made using Jaccard thresholds from 0.50 to 0.95. The Bitmap Filter was able to improve 85% of the experiments in CPU, with speedups of up to 4.50× and 1.35× on average. Using the GPU algorithm, the experiments were able to speedup the original CPU algorithms by up to 577× using an Nvidia Geforce GTX 980 Ti.},
  doi      = {https://doi.org/10.1016/j.is.2019.101449},
  file     = {:sandes-infsys-2020.pdf:PDF},
  keywords = {Set similarity join, Query processing, Data mining},
  url      = {http://www.sciencedirect.com/science/article/pii/S0306437919305010},
}

@Article{kim-infsys-2020,
  author   = {Taewoo Kim and Wenhai Li and Alexander Behm and Inci Cetindil and Rares Vernica and Vinayak Borkar and Michael J. Carey and Chen Li},
  title    = {Similarity query support in big data management systems},
  journal  = {Information Systems},
  year     = {2020},
  volume   = {88},
  pages    = {101455},
  issn     = {0306-4379},
  abstract = {Similarity query processing is becoming increasingly important in many applications such as data cleaning, record linkage, Web search, and document analytics. In this paper we study how to provide end-to-end similarity query support natively in a parallel database system. We discuss how to express a similarity predicate in its query language, how to build indexes, how to answer similarity queries (selections and joins) efficiently in the runtime engine, possibly using indexes, and how to optimize similarity queries. One particular challenge is how to incorporate existing similarity join algorithms, which often require a series of steps to achieve a high efficiency, including collecting token frequencies, finding matching record id pairs, and reassembling result records based on id pairs. We present a novel approach that uses existing runtime operators to implement such complex join algorithms without reinventing the wheel; doing so positions the system to automatically benefit from future improvements to those operators. The approach includes a technique to transform a similarity join plan into an efficient operator-based physical plan during query optimization by using a template expressed largely in the system’s user-level query language; this technique greatly simplifies the specification of such a transformation rule. We use Apache AsterixDB, a parallel Big Data management system, to illustrate and validate our techniques. We conduct an experimental study using several large, real datasets on a parallel computing cluster to assess the similarity query support. We also include experiments involving three other parallel systems and report the efficacy and performance results.},
  doi      = {https://doi.org/10.1016/j.is.2019.101455},
  file     = {:kim-infsys-2020.pdf:PDF},
  keywords = {Similarity query, Parallel database, Optimization},
  url      = {http://www.sciencedirect.com/science/article/pii/S0306437919305071},
}

@Article{ngo-sigmodrec-2014,
  author     = {Ngo, Hung Q and R\'{e}, Christopher and Rudra, Atri},
  title      = {Skew Strikes Back: New Developments in the Theory of Join Algorithms},
  journal    = {SIGMOD Rec.},
  year       = {2014},
  volume     = {42},
  number     = {4},
  pages      = {5–16},
  month      = feb,
  issn       = {0163-5808},
  address    = {New York, NY, USA},
  doi        = {10.1145/2590989.2590991},
  file       = {:ngo-sigmodrec-2014.pdf:PDF},
  issue_date = {February 2014},
  numpages   = {12},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/2590989.2590991},
}

@InProceedings{norouzi-cvpr-2012,
  author    = {M. {Norouzi} and A. {Punjani} and D. J. {Fleet}},
  title     = {{Fast search in Hamming space with multi-index hashing}},
  booktitle = {2012 IEEE Conference on Computer Vision and Pattern Recognition},
  year      = {2012},
  pages     = {3108-3115},
  file      = {norouzi-cvpr-2012.pdf:norouzi-cvpr-2012.pdf:PDF},
}

@InProceedings{ong-cvpr-2016,
  author    = {E. {Ong} and M. {Bober}},
  title     = {{Improved Hamming Distance Search Using Variable Length Hashing}},
  booktitle = {2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},
  year      = {2016},
  pages     = {2000-2008},
  file      = {ong-cvpr-2016.pdf:ong-cvpr-2016.pdf:PDF},
}

@InProceedings{santoyo-ssa-2014,
  author    = {Santoyo, Francisco and Ch{\'a}vez, Edgar and T{\'e}llez, Eric S.},
  title     = {{A Compressed Index for Hamming Distances}},
  booktitle = {Similarity Search and Applications},
  year      = {2014},
  editor    = {Traina, Agma Juci Machado and Traina, Caetano and Cordeiro, Robson Leonardo Ferreira},
  pages     = {113--126},
  address   = {Cham},
  publisher = {Springer International Publishing},
  abstract  = {Some instances of multimedia data can be represented as high dimensional binary vectors under the hamming distance. The standard index used to handle queries is Locality Sensitive Hashing (LSH), reducing approximate queries to a set of exact searches. When the queries are not selective and multiple families of hashing functions are employed, or when the collection is large, LSH indexes should be stored in secondary memory, slowing down the query time.},
  file      = {santoyo-ssa-2014.pdf:santoyo-ssa-2014.pdf:PDF},
  isbn      = {978-3-319-11988-5},
}

@InProceedings{gog-sigir-2016,
  author    = {Gog, Simon and Venturini, Rossano},
  title     = {{Fast and Compact Hamming Distance Index}},
  booktitle = {Proceedings of the 39th International ACM SIGIR Conference on Research and Development in Information Retrieval},
  year      = {2016},
  series    = {SIGIR ’16},
  pages     = {285–294},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2911451.2911523},
  file      = {gog-sigir-2016.pdf:gog-sigir-2016.pdf:PDF},
  isbn      = {9781450340694},
  keywords  = {hamming distance, indexing},
  location  = {Pisa, Italy},
  numpages  = {10},
  url       = {https://doi.org/10.1145/2911451.2911523},
}

@Article{kumar-infsys-2016,
  author   = {K. Mahesh Kumar and A. Rama Mohan Reddy},
  title    = {{A fast DBSCAN clustering algorithm by accelerating neighbor searching using Groups method}},
  journal  = {Pattern Recognition},
  year     = {2016},
  volume   = {58},
  pages    = {39 - 48},
  issn     = {0031-3203},
  abstract = {Density based clustering methods are proposed for clustering spatial databases with noise. Density Based Spatial Clustering of Applications with Noise (DBSCAN) can discover clusters of arbitrary shape and also handles outliers effectively. DBSCAN obtains clusters by finding the number of points within the specified distance from a given point. It involves computing distances from given point to all other points in the dataset. The conventional index based methods construct a hierarchical structure over the dataset to speed-up the neighbor search operations. The hierarchical index-structures fail to scale for datasets of dimensionality above 20. In this paper, we propose a novel graph-based index structure method Groups that accelerates the neighbor search operations and also scalable for high dimensional datasets. Experimental results show that the proposed method improves the speed of DBSCAN by a factor of about 1.5–2.2 on benchmark datasets. The performance of DBSCAN degrades considerably with noise due to unnecessary distance computations introduced by noise points while the proposed method is robust to noise by pruning out noise points early and eliminating the unnecessary distance computations. The cluster results produced by our method are exactly similar to that of DBSCAN but executed at a much faster pace.},
  doi      = {https://doi.org/10.1016/j.patcog.2016.03.008},
  file     = {kumar-infsys-2016.pdf:kumar-infsys-2016.pdf:PDF},
  keywords = {Unsupervised learning, Density based clustering, DBSCAN, Neighborhood graph},
  url      = {http://www.sciencedirect.com/science/article/pii/S0031320316001035},
}

@Article{kim-infsys-2015,
  author   = {Chulyun Kim and Kyuseok Shim},
  title    = {{Supporting set-valued joins in NoSQL using MapReduce}},
  journal  = {Information Systems},
  year     = {2015},
  volume   = {49},
  pages    = {52 - 64},
  issn     = {0306-4379},
  abstract = {NoSQL systems are increasingly adopted for Web applications requiring scalability that relational database systems cannot meet. Although NoSQL systems have not been designed to support joins, as they are applied to a wide variety of applications, the need to support joins has emerged. Furthermore, joins performed in NoSQL systems are generally similarity joins, rather than exact-match joins, which find similar pairs of records. Since Web applications often use the MapReduce framework, we develop a solution to perform similarity joins in NoSQL systems using the MapReduce framework.},
  doi      = {https://doi.org/10.1016/j.is.2014.11.005},
  file     = {kim-infsys-2015.pdf:kim-infsys-2015.pdf:PDF},
  keywords = {Set-similarity join, MapReduce, Trie structure, Prefix filtering, NoSQL, Big data, Data mining},
  url      = {http://www.sciencedirect.com/science/article/pii/S0306437914001811},
}

@Article{ribeiro-jidm-2017,
  author    = {Sidney Ribeiro{-}J{\'{u}}nior and Rafael David Quirino and Leonardo Andrade Ribeiro and Wellington Santos Martins},
  title     = {{Fast Parallel Set Similarity Joins on Many-core Architectures}},
  journal   = {{JIDM}},
  year      = {2017},
  volume    = {8},
  number    = {3},
  pages     = {255--270},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/journals/jidm/Ribeiro-JuniorQ17.bib},
  file      = {ribeiro-jidm-2017.pdf:ribeiro-jidm-2017.pdf:PDF},
  timestamp = {Tue, 12 Dec 2017 12:23:39 +0100},
  url       = {https://seer.lcc.ufmg.br/index.php/jidm/article/view/4711},
}

@InProceedings{pham-cikm-2016,
  author    = {Pham, Ninh and Pagh, Rasmus},
  title     = {{Scalability and Total Recall with Fast CoveringLSH}},
  booktitle = {Proceedings of the 25th ACM International on Conference on Information and Knowledge Management},
  year      = {2016},
  series    = {CIKM ’16},
  pages     = {1109–1118},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2983323.2983742},
  file      = {pham-cikm-2016.pdf:pham-cikm-2016.pdf:PDF},
  isbn      = {9781450340731},
  keywords  = {fast hadamard transform, near neighbor search, lsh, total recall},
  location  = {Indianapolis, Indiana, USA},
  numpages  = {10},
  url       = {https://doi.org/10.1145/2983323.2983742},
}

@InProceedings{kleinheksel-icisa-2016,
  author    = {Kleinheksel, Cory J. and Somani, Arun K.},
  title     = {{Scaling Distributed All-Pairs Algorithms}},
  booktitle = {Information Science and Applications (ICISA) 2016},
  year      = {2016},
  editor    = {Kim, Kuinam J. and Joukov, Nikolai},
  pages     = {247--257},
  address   = {Singapore},
  publisher = {Springer Singapore},
  abstract  = {In this paper we propose and prove that cyclic quorum sets can efficiently manage all-pairs computations and data replication. The quorums are O(N/{\textsurd}P) in size, up to 50{\%} smaller than the dual N/{\textsurd}P array implementations, and significantly smaller than solutions requiring all data. Implementation evaluation demonstrated scalability on real datasets with a 7x speed up on 8 nodes with 1/3rd the memory usage per process.},
  file      = {kleinheksel-icisa-2016.pdf:kleinheksel-icisa-2016.pdf:PDF},
  isbn      = {978-981-10-0557-2},
}

@Article{mula-corr-2016,
  author        = {Wojciech Mula and Nathan Kurz and Daniel Lemire},
  title         = {Faster Population Counts using {AVX2} Instructions},
  journal       = {CoRR},
  year          = {2016},
  volume        = {abs/1611.07612},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, https://dblp.org},
  biburl        = {https://dblp.org/rec/journals/corr/MulaKL16.bib},
  eprint        = {1611.07612},
  file          = {mula-corr-2016.pdf:mula-corr-2016.pdf:PDF},
  timestamp     = {Mon, 13 Aug 2018 16:48:34 +0200},
  url           = {http://arxiv.org/abs/1611.07612},
}

@Article{mann-corr-2017,
  author        = {Willi Mann and Nikolaus Augsten and Christian S. Jensen},
  title         = {{SWOOP: Top-k Similarity Joins over Set Streams}},
  journal       = {CoRR},
  year          = {2017},
  volume        = {abs/1711.02476},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, https://dblp.org},
  biburl        = {https://dblp.org/rec/journals/corr/abs-1711-02476.bib},
  eprint        = {1711.02476},
  file          = {mann-corr-2017.pdf:mann-corr-2017.pdf:PDF},
  timestamp     = {Mon, 13 Aug 2018 16:46:32 +0200},
  url           = {http://arxiv.org/abs/1711.02476},
}

@InProceedings{rashtchian-www-2020,
  author    = {Rashtchian, Cyrus and Sharma, Aneesh and Woodruff, David},
  title     = {LSF-Join: Locality Sensitive Filtering for Distributed All-Pairs Set Similarity Under Skew},
  booktitle = {Proceedings of The Web Conference 2020},
  year      = {2020},
  series    = {WWW ’20},
  pages     = {2998–3004},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/3366423.3380069},
  file      = {rashtchian-www-2020.pdf:rashtchian-www-2020.pdf:PDF},
  isbn      = {9781450370233},
  keywords  = {distributed algorithms, similarity search, social networks},
  location  = {Taipei, Taiwan},
  numpages  = {7},
  url       = {https://doi.org/10.1145/3366423.3380069},
}

@Article{shavit-cacm-2011,
  author     = {Shavit, Nir},
  title      = {{Data Structures in the Multicore Age}},
  journal    = {Commun. ACM},
  year       = {2011},
  volume     = {54},
  number     = {3},
  pages      = {76–84},
  month      = mar,
  issn       = {0001-0782},
  address    = {New York, NY, USA},
  doi        = {10.1145/1897852.1897873},
  file       = {shavit-cacm-2011.pdf:shavit-cacm-2011.pdf:PDF},
  issue_date = {March 2011},
  numpages   = {9},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/1897852.1897873},
}

@Article{xiao-tods-2011,
  author     = {Xiao, Chuan and Wang, Wei and Lin, Xuemin and Yu, Jeffrey Xu and Wang, Guoren},
  title      = {{Efficient Similarity Joins for Near-Duplicate Detection}},
  journal    = {ACM Trans. Database Syst.},
  year       = {2011},
  volume     = {36},
  number     = {3},
  month      = aug,
  issn       = {0362-5915},
  address    = {New York, NY, USA},
  articleno  = {15},
  doi        = {10.1145/2000824.2000825},
  file       = {xiao-tods-2011.pdf:xiao-tods-2011.pdf:PDF},
  issue_date = {August 2011},
  keywords   = {Similarity join, near duplicate detection},
  numpages   = {41},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/2000824.2000825},
}

@Article{li-vldb-2011,
  author     = {Li, Guoliang and Deng, Dong and Wang, Jiannan and Feng, Jianhua},
  title      = {{Pass-Join: A Partition-Based Method for Similarity Joins}},
  journal    = {Proc. VLDB Endow.},
  year       = {2011},
  volume     = {5},
  number     = {3},
  pages      = {253–264},
  month      = nov,
  issn       = {2150-8097},
  doi        = {10.14778/2078331.2078340},
  file       = {li-vldb-2011.pdf:li-vldb-2011.pdf:PDF},
  issue_date = {November 2011},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/2078331.2078340},
}

@InProceedings{haas-ccf-2013,
  author    = {Haas, Andreas and Lippautz, Michael and Henzinger, Thomas A. and Payer, Hannes and Sokolova, Ana and Kirsch, Christoph M. and Sezgin, Ali},
  title     = {Distributed Queues in Shared Memory: Multicore Performance and Scalability through Quantitative Relaxation},
  booktitle = {Proceedings of the ACM International Conference on Computing Frontiers},
  year      = {2013},
  series    = {CF ’13},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  articleno = {17},
  doi       = {10.1145/2482767.2482789},
  file      = {haas-ccf-2013.pdf:haas-ccf-2013.pdf:PDF},
  isbn      = {9781450320535},
  keywords  = {LRU, inexact computing, load balancing},
  location  = {Ischia, Italy},
  numpages  = {9},
  url       = {https://doi.org/10.1145/2482767.2482789},
}

@InProceedings{leis-sigmod-2014,
  author    = {Leis, Viktor and Boncz, Peter and Kemper, Alfons and Neumann, Thomas},
  title     = {{Morsel-Driven Parallelism: A NUMA-Aware Query Evaluation Framework for the Many-Core Age}},
  booktitle = {Proceedings of the 2014 ACM SIGMOD International Conference on Management of Data},
  year      = {2014},
  series    = {SIGMOD ’14},
  pages     = {743–754},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2588555.2610507},
  file      = {leis-sigmod-2014.pdf:leis-sigmod-2014.pdf:PDF},
  isbn      = {9781450323765},
  keywords  = {morsel-driven parallelism, NUMA-awareness},
  location  = {Snowbird, Utah, USA},
  numpages  = {12},
  url       = {https://doi.org/10.1145/2588555.2610507},
}

@InProceedings{dayan-sigmod-2017,
  author    = {Dayan, Niv and Athanassoulis, Manos and Idreos, Stratos},
  title     = {{Monkey: Optimal Navigable Key-Value Store}},
  booktitle = {Proceedings of the 2017 ACM International Conference on Management of Data},
  year      = {2017},
  series    = {SIGMOD ’17},
  pages     = {79–94},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/3035918.3064054},
  file      = {dayan-sigmod-2017.pdf:dayan-sigmod-2017.pdf:PDF},
  isbn      = {9781450341974},
  keywords  = {bloom filters, key-value store, memory hierarchy, adaptivity, read/write/memory trade-off, log-structured merge-tree, point lookups, auto-tuning, lsm-tree, point queries},
  location  = {Chicago, Illinois, USA},
  numpages  = {16},
  url       = {https://doi.org/10.1145/3035918.3064054},
}

@Article{qin-vldb-2018,
  author     = {Qin, Jianbin and Xiao, Chuan},
  title      = {{Pigeonring: A Principle for Faster Thresholded Similarity Search}},
  journal    = {Proc. VLDB Endow.},
  year       = {2018},
  volume     = {12},
  number     = {1},
  pages      = {28–42},
  month      = sep,
  issn       = {2150-8097},
  doi        = {10.14778/3275536.3275539},
  file       = {qin-vldb-2018.pdf:qin-vldb-2018.pdf:PDF},
  issue_date = {September 2018},
  numpages   = {15},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3275536.3275539},
}

@InProceedings{vansandt-sigmod-2019,
  author    = {Van Sandt, Peter and Chronis, Yannis and Patel, Jignesh M.},
  title     = {Efficiently Searching In-Memory Sorted Arrays: Revenge of the Interpolation Search?},
  booktitle = {Proceedings of the 2019 International Conference on Management of Data},
  year      = {2019},
  series    = {SIGMOD ’19},
  pages     = {36–53},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/3299869.3300075},
  file      = {vansandt-sigmod-2019.pdf:vansandt-sigmod-2019.pdf:PDF},
  isbn      = {9781450356435},
  keywords  = {interpolation search, binary search, in-memory search},
  location  = {Amsterdam, Netherlands},
  numpages  = {18},
  url       = {https://doi.org/10.1145/3299869.3300075},
}

@InProceedings{kocher-sigmod-2019,
  author    = {Kocher, Daniel and Augsten, Nikolaus},
  title     = {{A Scalable Index for Top-k Subtree Similarity Queries}},
  booktitle = {Proceedings of the 2019 International Conference on Management of Data},
  year      = {2019},
  series    = {SIGMOD ’19},
  pages     = {1624–1641},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/3299869.3319892},
  file      = {kocher-sigmod-2019.pdf:kocher-sigmod-2019.pdf:PDF},
  isbn      = {9781450356435},
  keywords  = {top-k subtree similarity, tree indexing, top-k query, tree edit distance},
  location  = {Amsterdam, Netherlands},
  numpages  = {18},
  url       = {https://doi.org/10.1145/3299869.3319892},
}

@Article{miraldo-pl-2019,
  author     = {Miraldo, Victor Cacciari and Swierstra, Wouter},
  title      = {An Efficient Algorithm for Type-Safe Structural Diffing},
  journal    = {Proc. ACM Program. Lang.},
  year       = {2019},
  volume     = {3},
  number     = {ICFP},
  month      = jul,
  address    = {New York, NY, USA},
  articleno  = {113},
  doi        = {10.1145/3341717},
  file       = {miraldo-pl-2019.pdf:miraldo-pl-2019.pdf:PDF},
  issue_date = {August 2019},
  keywords   = {Haskell, Version Control, Generic Programming, diff},
  numpages   = {29},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3341717},
}

@Article{barthels-vldb-2019,
  author     = {Barthels, Claude and M\"{u}ller, Ingo and Taranov, Konstantin and Alonso, Gustavo and Hoefler, Torsten},
  title      = {Strong Consistency is Not Hard to Get: Two-Phase Locking and Two-Phase Commit on Thousands of Cores},
  journal    = {Proc. VLDB Endow.},
  year       = {2019},
  volume     = {12},
  number     = {13},
  pages      = {2325–2338},
  month      = sep,
  issn       = {2150-8097},
  doi        = {10.14778/3358701.3358702},
  file       = {barthels-vldb-2019.pdf:barthels-vldb-2019.pdf:PDF},
  issue_date = {September 2019},
  numpages   = {14},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3358701.3358702},
}

@Article{zois-vldb-2019,
  author     = {Zois, Vasileios and Tsotras, Vassilis J. and Najjar, Walid A.},
  title      = {{Efficient Main-Memory Top-K Selection for Multicore Architectures}},
  journal    = {Proc. VLDB Endow.},
  year       = {2019},
  volume     = {13},
  number     = {2},
  pages      = {114–127},
  month      = oct,
  issn       = {2150-8097},
  doi        = {10.14778/3364324.3364327},
  file       = {:zois-vldb-2019.pdf:PDF},
  issue_date = {October 2019},
  numpages   = {14},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3364324.3364327},
}

@InProceedings{zhang-icde-2017,
  author    = {Y. {Zhang} and X. {Li} and J. {Wang} and Y. {Zhang} and C. {Xing} and X. {Yuan}},
  title     = {An Efficient Framework for Exact Set Similarity Search Using Tree Structure Indexes},
  booktitle = {2017 IEEE 33rd International Conference on Data Engineering (ICDE)},
  year      = {2017},
  pages     = {759-770},
  file      = {zhang-icde-2017.pdf:zhang-icde-2017.pdf:PDF},
}

@InProceedings{qin-icde-2018,
  author    = {J. {Qin} and Y. {Wang} and C. {Xiao} and W. {Wang} and X. {Lin} and Y. {Ishikawa}},
  title     = {{GPH: Similarity Search in Hamming Space}},
  booktitle = {2018 IEEE 34th International Conference on Data Engineering (ICDE)},
  year      = {2018},
  pages     = {29-40},
  file      = {qin-icde-2018.pdf:qin-icde-2018.pdf:PDF},
}

@Article{qin-tkde-2019,
  author  = {J. {Qin} and C. {Xiao} and Y. {Wang} and W. {Wang} and X. {Lin} and Y. {Ishikawa} and G. {Wang}},
  title   = {{Generalizing the Pigeonhole Principle for Similarity Search in Hamming Space}},
  journal = {IEEE Transactions on Knowledge and Data Engineering},
  year    = {2019},
  pages   = {1-1},
  file    = {qin-tkde-2019.pdf:qin-tkde-2019.pdf:PDF},
}

@InProceedings{bellas-damon-2019,
  author    = {Bellas, Christos and Gounaris, Anastasios},
  title     = {{Exact Set Similarity Joins for Large Datasets in the GPGPU Paradigm}},
  booktitle = {Proceedings of the 15th International Workshop on Data Management on New Hardware},
  year      = {2019},
  series    = {DaMoN’19},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  articleno = {5},
  doi       = {10.1145/3329785.3329919},
  file      = {bellas-damon-2019.pdf:bellas-damon-2019.pdf:PDF},
  isbn      = {9781450368018},
  location  = {Amsterdam, Netherlands},
  numpages  = {10},
  url       = {https://doi.org/10.1145/3329785.3329919},
}

@InProceedings{barthels-phdthesis-2019,
  author = {Claude Barthels},
  title  = {{Scalable Query and Transaction Processing over High-Performance Networks}},
  year   = {2019},
  file   = {barthels-phdthesis-2019.pdf:barthels-phdthesis-2019.pdf:PDF},
}

@Article{schubert-tods-2017,
  author     = {Schubert, Erich and Sander, J\"{o}rg and Ester, Martin and Kriegel, Hans Peter and Xu, Xiaowei},
  title      = {{DBSCAN Revisited, Revisited: Why and How You Should (Still) Use DBSCAN}},
  journal    = {ACM Trans. Database Syst.},
  year       = {2017},
  volume     = {42},
  number     = {3},
  month      = jul,
  issn       = {0362-5915},
  address    = {New York, NY, USA},
  articleno  = {19},
  doi        = {10.1145/3068335},
  file       = {schubert-tods-2017.pdf:schubert-tods-2017.pdf:PDF},
  issue_date = {August 2017},
  keywords   = {DBSCAN, density-based clustering, range-search complexity},
  numpages   = {21},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3068335},
}

@Article{barua-acmcs-2019,
  author     = {Barua, Hrishav Bakul and Mondal, Kartick Chandra},
  title      = {{A Comprehensive Survey on Cloud Data Mining (CDM) Frameworks and Algorithms}},
  journal    = {ACM Comput. Surv.},
  year       = {2019},
  volume     = {52},
  number     = {5},
  month      = sep,
  issn       = {0360-0300},
  address    = {New York, NY, USA},
  articleno  = {104},
  doi        = {10.1145/3349265},
  file       = {barua-acmcs-2019.pdf:barua-acmcs-2019.pdf:PDF},
  issue_date = {October 2019},
  keywords   = {data science, clustering, big data, volume, classification and association rule mining, taxonomy, framework, data mining, cloud data mining (CDM), Review, velocity, machine learning, survey, distributed computing, big data analytics, cloud computing, variety, parallelism, graph mining, dbscan},
  numpages   = {62},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3349265},
}

@InProceedings{leis-damon-2016,
  author    = {Leis, Viktor and Scheibner, Florian and Kemper, Alfons and Neumann, Thomas},
  title     = {{The ART of Practical Synchronization}},
  booktitle = {Proceedings of the 12th International Workshop on Data Management on New Hardware},
  year      = {2016},
  series    = {DaMoN ’16},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  articleno = {3},
  doi       = {10.1145/2933349.2933352},
  file      = {leis-damon-2016.pdf:leis-damon-2016.pdf:PDF},
  isbn      = {9781450343190},
  location  = {San Francisco, California},
  numpages  = {8},
  url       = {https://doi.org/10.1145/2933349.2933352},
}

@InProceedings{mitchell-usenix-2013,
  author    = {Christopher Mitchell and Yifeng Geng and Jinyang Li},
  title     = {{Using One-Sided RDMA Reads to Build a Fast, CPU-Efficient Key-Value Store}},
  booktitle = {2013 {USENIX} Annual Technical Conference ({USENIX} {ATC} 13)},
  year      = {2013},
  pages     = {103--114},
  address   = {San Jose, CA},
  month     = jun,
  publisher = {{USENIX} Association},
  file      = {mitchell-usenix-2013.pdf:mitchell-usenix-2013.pdf:PDF},
  isbn      = {978-1-931971-01-0},
  url       = {https://www.usenix.org/conference/atc13/technical-sessions/presentation/mitchell},
}

@InProceedings{baezayates-cpm-2004,
  author    = {Baeza-Yates, Ricardo},
  title     = {{A Fast Set Intersection Algorithm for Sorted Sequences}},
  booktitle = {Combinatorial Pattern Matching},
  year      = {2004},
  editor    = {Sahinalp, Suleyman Cenk and Muthukrishnan, S. and Dogrusoz, Ugur},
  pages     = {400--408},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {This paper introduces a simple intersection algorithm for two sorted sequences that is fast on average. It is related to the multiple searching problem and to merging. We present the worst and average case analysis, showing that in the former, the complexity nicely adapts to the smallest list size. In the later case, it performs less comparisons than the total number of elements on both inputs when n = $\alpha$m ($\alpha$ > 1). Finally, we show its application to fast query processing in Web search engines, where large intersections, or differences, must be performed fast.},
  file      = {baezayates-cpm-2004.pdf:baezayates-cpm-2004.pdf:PDF},
  isbn      = {978-3-540-27801-6},
}

@InProceedings{freire-sigmod-2012,
  author    = {Freire, Juliana and Bonnet, Philippe and Shasha, Dennis},
  title     = {{Computational Reproducibility: State-of-the-Art, Challenges, and Database Research Opportunities}},
  booktitle = {Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data},
  year      = {2012},
  series    = {SIGMOD ’12},
  pages     = {593–596},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2213836.2213908},
  file      = {freire-sigmod-2012.pdf:freire-sigmod-2012.pdf:PDF},
  isbn      = {9781450312479},
  keywords  = {computational reproducibility, reproducible publications},
  location  = {Scottsdale, Arizona, USA},
  numpages  = {4},
  url       = {https://doi.org/10.1145/2213836.2213908},
}

@InProceedings{yang-icde-2019,
  author    = {K. {Yang} and Y. {Gao} and R. {Ma} and L. {Chen} and S. {Wu} and G. {Chen}},
  title     = {{DBSCAN-MS: Distributed Density-Based Clustering in Metric Spaces}},
  booktitle = {2019 IEEE 35th International Conference on Data Engineering (ICDE)},
  year      = {2019},
  pages     = {1346-1357},
  file      = {yang-icde-2019.pdf:yang-icde-2019.pdf:PDF},
}

@InProceedings{idreos-cidr-2019,
  author    = {Stratos Idreos and Niv Dayan and Wilson Qin and Mali Akmanalp and Sophie Hilgard and Andrew Ross and James Lennon and Varun Jain and Harshita Gupta and David Li and Zichen Zhu},
  title     = {{Design Continuums and the Path Toward Self-Designing Key-Value Stores that Know and Learn}},
  booktitle = {{CIDR} 2019, 9th Biennial Conference on Innovative Data Systems Research, Asilomar, CA, USA, January 13-16, 2019, Online Proceedings},
  year      = {2019},
  publisher = {www.cidrdb.org},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/conf/cidr/IdreosDQAHRLJGL19.bib},
  file      = {idreos-cidr-2019.pdf:idreos-cidr-2019.pdf:PDF},
  timestamp = {Thu, 12 Mar 2020 11:32:37 +0100},
  url       = {http://cidrdb.org/cidr2019/papers/p143-idreos-cidr19.pdf},
}

@Article{johnson-tobd-2019,
  author  = {J. {Johnson} and M. {Douze} and H. {Jégou}},
  title   = {{Billion-scale similarity search with GPUs}},
  journal = {IEEE Transactions on Big Data},
  year    = {2019},
  pages   = {1-1},
  file    = {johnson-tobd-2019.pdf:johnson-tobd-2019.pdf:PDF},
}

@Article{johnson-corr-2017,
  author        = {Jeff Johnson and Matthijs Douze and Herv{\'{e}} J{\'{e}}gou},
  title         = {{Billion-scale similarity search with GPUs}},
  journal       = {CoRR},
  year          = {2017},
  volume        = {abs/1702.08734},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, https://dblp.org},
  biburl        = {https://dblp.org/rec/journals/corr/JohnsonDJ17.bib},
  eprint        = {1702.08734},
  file          = {johnson-corr-2017.pdf:johnson-corr-2017.pdf:PDF},
  timestamp     = {Mon, 13 Aug 2018 16:47:46 +0200},
  url           = {http://arxiv.org/abs/1702.08734},
}

@Article{lulli-vldb-2016,
  author     = {Lulli, Alessandro and Dell’Amico, Matteo and Michiardi, Pietro and Ricci, Laura},
  title      = {{NG-DBSCAN: Scalable Density-Based Clustering for Arbitrary Data}},
  journal    = {Proc. VLDB Endow.},
  year       = {2016},
  volume     = {10},
  number     = {3},
  pages      = {157–168},
  month      = nov,
  issn       = {2150-8097},
  doi        = {10.14778/3021924.3021932},
  file       = {lulli-vldb-2016.pdf:lulli-vldb-2016.pdf:PDF},
  issue_date = {November 2016},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3021924.3021932},
}

@InProceedings{tabei-sigkdd-2013,
  author    = {Tabei, Yasuo and Kishimoto, Akihiro and Kotera, Masaaki and Yamanishi, Yoshihiro},
  title     = {Succinct Interval-Splitting Tree for Scalable Similarity Search of Compound-Protein Pairs with Property Constraints},
  booktitle = {Proceedings of the 19th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
  year      = {2013},
  series    = {KDD ’13},
  pages     = {176–184},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2487575.2487637},
  file      = {tabei-sigkdd-2013.pdf:tabei-sigkdd-2013.pdf:PDF},
  isbn      = {9781450321747},
  keywords  = {succinct data structure, wavelet tree, similarity search},
  location  = {Chicago, Illinois, USA},
  numpages  = {9},
  url       = {https://doi.org/10.1145/2487575.2487637},
}

@Article{inoue-vldb-2014,
  author     = {Inoue, Hiroshi and Ohara, Moriyoshi and Taura, Kenjiro},
  title      = {{Faster Set Intersection with SIMD Instructions by Reducing Branch Mispredictions}},
  journal    = {Proc. VLDB Endow.},
  year       = {2014},
  volume     = {8},
  number     = {3},
  pages      = {293–304},
  month      = nov,
  issn       = {2150-8097},
  doi        = {10.14778/2735508.2735518},
  file       = {inoue-vldb-2014.pdf:inoue-vldb-2014.pdf:PDF},
  issue_date = {November 2014},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/2735508.2735518},
}

@InProceedings{boehm-cikm-2000,
  author    = {B\"{o}hm, Christian and Braunm\"{u}ller, Bernhard and Breunig, Markus and Kriegel, Hans-Peter},
  title     = {{High Performance Clustering Based on the Similarity Join}},
  booktitle = {Proceedings of the Ninth International Conference on Information and Knowledge Management},
  year      = {2000},
  series    = {CIKM ’00},
  pages     = {298–305},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/354756.354832},
  file      = {boehm-cikm-2000.pdf:boehm-cikm-2000.pdf:PDF},
  isbn      = {1581133200},
  keywords  = {clustering, similarity join, multidimensional index structure, database primitives, data mining},
  location  = {McLean, Virginia, USA},
  numpages  = {8},
  url       = {https://doi.org/10.1145/354756.354832},
}

@InProceedings{gan-sigmod-2015,
  author    = {Gan, Junhao and Tao, Yufei},
  title     = {{DBSCAN Revisited: Mis-Claim, Un-Fixability, and Approximation}},
  booktitle = {Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data},
  year      = {2015},
  series    = {SIGMOD ’15},
  pages     = {519–530},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2723372.2737792},
  file      = {gan-sigmod-2015.pdf:gan-sigmod-2015.pdf:PDF},
  isbn      = {9781450327589},
  keywords  = {dbscan, density-based clustering, algorithm},
  location  = {Melbourne, Victoria, Australia},
  numpages  = {12},
  url       = {https://doi.org/10.1145/2723372.2737792},
}

@Article{lehmann-tods-1981,
  author     = {Lehman, Philip L. and Yao, s. Bing},
  title      = {{Efficient Locking for Concurrent Operations on B-Trees}},
  journal    = {ACM Trans. Database Syst.},
  year       = {1981},
  volume     = {6},
  number     = {4},
  pages      = {650–670},
  month      = dec,
  issn       = {0362-5915},
  address    = {New York, NY, USA},
  doi        = {10.1145/319628.319663},
  file       = {lehmann-tods-1981.pdf:lehmann-tods-1981.pdf:PDF},
  issue_date = {Dec. 1981},
  keywords   = {B-tree, consistencey, concurrenct algorithms, locking protocols, data structures, concurrency controls, multiway search trees, database, correctness, index organizations},
  numpages   = {21},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/319628.319663},
}

@Article{zamanian-vldb-2019,
  author     = {Zamanian, Erfan and Yu, Xiangyao and Stonebraker, Michael and Kraska, Tim},
  title      = {{Rethinking Database High Availability with RDMA Networks}},
  journal    = {Proc. VLDB Endow.},
  year       = {2019},
  volume     = {12},
  number     = {11},
  pages      = {1637–1650},
  month      = jul,
  issn       = {2150-8097},
  doi        = {10.14778/3342263.3342639},
  file       = {zamanian-vldb-2019.pdf:zamanian-vldb-2019.pdf:PDF},
  issue_date = {July 2019},
  numpages   = {14},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3342263.3342639},
}

@InProceedings{wang-sigmod-2016,
  author    = {Wang, Pei and Xiao, Chuan and Qin, Jianbin and Wang, Wei and Zhang, Xiaoyang and Ishikawa, Yoshiharu},
  title     = {{Local Similarity Search for Unstructured Text}},
  booktitle = {Proceedings of the 2016 International Conference on Management of Data},
  year      = {2016},
  series    = {SIGMOD ’16},
  pages     = {1991–2005},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2882903.2915211},
  file      = {wang-sigmod-2016.pdf:wang-sigmod-2016.pdf:PDF},
  isbn      = {9781450335317},
  keywords  = {unstructured text, local similarity search, prefix filtering, k-wise signature},
  location  = {San Francisco, California, USA},
  numpages  = {15},
  url       = {https://doi.org/10.1145/2882903.2915211},
}

@InProceedings{chirigati-sigmod-2016,
  author    = {Chirigati, Fernando and Rampin, R\'{e}mi and Shasha, Dennis and Freire, Juliana},
  title     = {{ReproZip: Computational Reproducibility With Ease}},
  booktitle = {Proceedings of the 2016 International Conference on Management of Data},
  year      = {2016},
  series    = {SIGMOD ’16},
  pages     = {2085–2088},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2882903.2899401},
  file      = {chirigati-sigmod-2016.pdf:chirigati-sigmod-2016.pdf:PDF},
  isbn      = {9781450335317},
  keywords  = {reprozip, provenance, computational reproducibility},
  location  = {San Francisco, California, USA},
  numpages  = {4},
  url       = {https://doi.org/10.1145/2882903.2899401},
}

@InProceedings{milchevski-edbt-2020,
  author    = {Evica Milchevski and Sebastian Michel},
  title     = {{Distributed Similarity Joins over Top-K Rankings}},
  booktitle = {Proceedings of the 23nd International Conference on Extending Database Technology, {EDBT} 2020, Copenhagen, Denmark, March 30 - April 02, 2020},
  year      = {2020},
  editor    = {Angela Bonifati and Yongluan Zhou and Marcos Antonio Vaz Salles and Alexander B{\"{o}}hm and Dan Olteanu and George H. L. Fletcher and Arijit Khan and Bin Yang},
  pages     = {205--216},
  publisher = {OpenProceedings.org},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/conf/edbt/Milchevski020.bib},
  doi       = {10.5441/002/edbt.2020.19},
  file      = {milchevski-edbt-2020.pdf:milchevski-edbt-2020.pdf:PDF},
  timestamp = {Wed, 25 Mar 2020 15:46:06 +0100},
  url       = {https://doi.org/10.5441/002/edbt.2020.19},
}

@InProceedings{roediger-icde-2016,
  author    = {W. {Rödiger} and S. {Idicula} and A. {Kemper} and T. {Neumann}},
  title     = {{Flow-Join: Adaptive skew handling for distributed joins over high-speed networks}},
  booktitle = {2016 IEEE 32nd International Conference on Data Engineering (ICDE)},
  year      = {2016},
  pages     = {1194-1205},
  file      = {roediger-icde-2016.pdf:roediger-icde-2016.pdf:PDF},
}

@InProceedings{wang-sigmod-2017,
  author    = {Wang, Jianguo and Lin, Chunbin and Papakonstantinou, Yannis and Swanson, Steven},
  title     = {{An Experimental Study of Bitmap Compression vs. Inverted List Compression}},
  booktitle = {Proceedings of the 2017 ACM International Conference on Management of Data},
  year      = {2017},
  series    = {SIGMOD ’17},
  pages     = {993–1008},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/3035918.3064007},
  file      = {wang-sigmod-2017.pdf:wang-sigmod-2017.pdf:PDF},
  isbn      = {9781450341974},
  keywords  = {evaluation, inverted list compression, main memory, bitmap compression, benchmarking},
  location  = {Chicago, Illinois, USA},
  numpages  = {16},
  url       = {https://doi.org/10.1145/3035918.3064007},
}

@InProceedings{lang-vldbj-2018,
  author    = {Lang, Harald and Kipf, Andreas and Passing, Linnea and Boncz, Peter and Neumann, Thomas and Kemper, Alfons},
  title     = {{Make the Most out of Your SIMD Investments: Counter Control Flow Divergence in Compiled Query Pipelines}},
  booktitle = {Proceedings of the 14th International Workshop on Data Management on New Hardware},
  year      = {2018},
  series    = {DAMON ’18},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  articleno = {5},
  doi       = {10.1145/3211922.3211928},
  file      = {lang-vldbj-2018.pdf:lang-vldbj-2018.pdf:PDF},
  isbn      = {9781450358538},
  location  = {Houston, Texas},
  numpages  = {8},
  url       = {https://doi.org/10.1145/3211922.3211928},
}

@Article{wang-soft-2020,
  author   = {Wang, Hongya and Yang, Lihong and Xiao, Yingyuan},
  title    = {{SETJoin: a novel top-k similarity join algorithm}},
  journal  = {Soft Computing},
  year     = {2020},
  month    = {Mar},
  issn     = {1433-7479},
  abstract = {As an important operation in data cleaning, near duplicate Web pages detection and data mining, similarity joins have received much attention recently. Existing similarity joins fall into two broad categories---the similarity-threshold-based similarity join and top-ksimilarity join (TopkJoin). Compared with the traditional one, TopkJoin is more suitable for cases where the similarity threshold is unknown before hand. In this paper, we focus on the performance optimization problem of TopkJoin. Particularly, we observed that the state-of-the-art TopkJoin algorithm has three serious performance issues, i.e., the inappropriate application of hash table, inefficient use of suffix filtering and unnecessary evaluation of excessive unqualified candidates. To resolve these problems, we proposed a novel algorithm, SETJoin, by combining the existing event-driven framework with three simple yet efficient optimization techniques, viz., (1) reducing the cost in hashing by rearranging the orders of the candidate filtering and hash table lookup operations; (2) maximizing the pruning capability of suffix filtering by judiciously choosing the (near) optimal recursion depth; and (3) terminating join operations earlier by setting a much tighter stop condition for iteration. The experimental results show that SETJoin achieves up to 1.26x--3.49x speedup over the state-of-the-art algorithm on several real datasets.},
  day      = {06},
  doi      = {10.1007/s00500-020-04807-w},
  file     = {wang-soft-2020.pdf:wang-soft-2020.pdf:PDF},
  url      = {https://doi.org/10.1007/s00500-020-04807-w},
}

@InProceedings{zhang-mastersthesis-2013,
  author = {Xiaoyang Zhang},
  title  = {{Efficient Similarity Search with Hamming Distance Constraints}},
  year   = {2013},
  file   = {zhang-mastersthesis-2013.pdf:zhang-mastersthesis-2013.pdf:PDF},
}

@InProceedings{chan-www-2020,
  author    = {Chan, Gromit Yeuk-Yin and Du, Fan and Rossi, Ryan A. and Rao, Anup B. and Koh, Eunyee and Silva, Cl\'{a}udio T. and Freire, Juliana},
  title     = {{Real-Time Clustering for Large Sparse Online Visitor Data}},
  booktitle = {Proceedings of The Web Conference 2020},
  year      = {2020},
  series    = {WWW ’20},
  pages     = {1049–1059},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/3366423.3380183},
  file      = {chan-www-2020.pdf:chan-www-2020.pdf:PDF},
  isbn      = {9781450370233},
  keywords  = {Sparse binary data, Density peaks, Spark, Clustering, Sketching},
  location  = {Taipei, Taiwan},
  numpages  = {11},
  url       = {https://doi.org/10.1145/3366423.3380183},
}

@InProceedings{wenig-mastersthesis-2018,
  author = {Michael Wenig},
  title  = {{An Analysis of Skipping Techniques for Set Similarity Joins}},
  year   = {2018},
  file   = {wenig-mastersthesis-2018.pdf:wenig-mastersthesis-2018.pdf:PDF},
}

@InProceedings{wang-sigmod-2020,
  author    = {Wang, Yiqiu and Gu, Yan and Shun, Julian},
  title     = {{Theoretically-Efficient and Practical Parallel DBSCAN}},
  booktitle = {Proceedings of the 2020 ACM SIGMOD International Conference on Management of Data},
  year      = {2020},
  series    = {SIGMOD '20},
  pages     = {2555–2571},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The DBSCAN method for spatial clustering has received significant attention due to its applicability in a variety of data analysis tasks. There are fast sequential algorithms for DBSCAN in Euclidean space that take O(n\l{}og n) work for two dimensions, sub-quadratic work for three or more dimensions, and can be computed approximately in linear work for any constant number of dimensions. However, existing parallel DBSCAN algorithms require quadratic work in the worst case. This paper bridges the gap between theory and practice of parallel DBSCAN by presenting new parallel algorithms for Euclidean exact DBSCAN and approximate DBSCAN that match the work bounds of their sequential counterparts, and are highly parallel (polylogarithmic depth). We present implementations of our algorithms along with optimizations that improve their practical performance. We perform a comprehensive experimental evaluation of our algorithms on a variety of datasets and parameter settings. Our experiments on a 36-core machine with two-way hyper-threading show that our implementations outperform existing parallel implementations by up to several orders of magnitude, and achieve speedups of up to 33x over the best sequential algorithms.},
  doi       = {10.1145/3318464.3380582},
  file      = {:wang-sigmod-2020.pdf:PDF},
  isbn      = {9781450367356},
  keywords  = {parallel algorithms, spatial clustering, DBScan},
  location  = {Portland, OR, USA},
  numpages  = {17},
  url       = {https://doi.org/10.1145/3318464.3380582},
}

@Misc{jiang-corr-2020,
  author        = {Heinrich Jiang and Jennifer Jang and Jakub Łącki},
  title         = {{Faster DBSCAN via subsampled similarity queries}},
  year          = {2020},
  archiveprefix = {arXiv},
  eprint        = {2006.06743},
  file          = {:jiang-corr-2020.pdf:PDF},
  primaryclass  = {cs.LG},
}

@InProceedings{sarma-cluster-2019,
  author    = {A. {Sarma} and P. {Goyal} and S. {Kumari} and A. {Wani} and J. S. {Challa} and S. {Islam} and N. {Goyal}},
  title     = {{$\mu$DBSCAN: An Exact Scalable DBSCAN Algorithm for Big Data Exploiting Spatial Locality}},
  booktitle = {2019 IEEE International Conference on Cluster Computing (CLUSTER)},
  year      = {2019},
  pages     = {1-11},
  file      = {:sarma-cluster-2019.pdf:PDF},
}

@InProceedings{deng-sigmod-2018,
  author    = {Deng, Dong and Tao, Yufei and Li, Guoliang},
  title     = {{Overlap Set Similarity Joins with Theoretical Guarantees}},
  booktitle = {Proceedings of the 2018 International Conference on Management of Data},
  year      = {2018},
  series    = {SIGMOD '18},
  pages     = {905–920},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper studies the set similarity join problem with overlap constraints which, given two collections of sets and a constant c, finds all the set pairs in the datasets that share at least c common elements. This is a fundamental operation in many fields, such as information retrieval, data mining, and machine learning. The time complexity of all existing methods is O(n2) where n is the total size of all the sets. In this paper, we present a size-aware algorithm with the time complexity of O(n2-over 1 c k1 over 2c)=o(n2)+O(k), where k is the number of results. The size-aware algorithm divides all the sets into small and large ones based on their sizes and processes them separately. We can use existing methods to process the large sets and focus on the small sets in this paper. We develop several optimization heuristics for the small sets to improve the practical performance significantly. As the size boundary between the small sets and the large sets is crucial to the efficiency, we propose an effective size boundary selection algorithm to judiciously choose an appropriate size boundary, which works very well in practice. Experimental results on real-world datasets show that our methods achieve high performance and outperform the state-of-the-art approaches by up to an order of magnitude.},
  doi       = {10.1145/3183713.3183748},
  file      = {:deng-sigmod-2018.pdf:PDF},
  isbn      = {9781450347037},
  keywords  = {overlap, theoretical guarantee, set, sub-quadratic, scalable, similarity join},
  location  = {Houston, TX, USA},
  numpages  = {16},
  url       = {https://doi.org/10.1145/3183713.3183748},
}

@InProceedings{mai-kdd-2016,
  author    = {Mai, Son T. and Assent, Ira and Storgaard, Martin},
  title     = {{AnyDBC: An Efficient Anytime Density-Based Clustering Algorithm for Very Large Complex Datasets}},
  booktitle = {Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
  year      = {2016},
  series    = {KDD '16},
  pages     = {1025–1034},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The density-based clustering algorithm DBSCAN is a state-of-the-art data clustering technique with numerous applications in many fields. However, its O(n2) time complexity still remains a severe weakness. In this paper, we propose a novel anytime approach to cope with this problem by reducing both the range query and the label propagation time of DBSCAN. Our algorithm, called AnyDBC, compresses the data into smaller density-connected subsets called primitive clusters and labels objects based on connected components of these primitive clusters for reducing the label propagation time. Moreover, instead of passively performing the range query for all objects like existing techniques, AnyDBC iteratively and actively learns the current cluster structure of the data and selects a few most promising objects for refining clusters at each iteration. Thus, in the end, it performs substantially fewer range queries compared to DBSCAN while still guaranteeing the exact final result of DBSCAN. Experiments show speedup factors of orders of magnitude compared to DBSCAN and its fastest variants on very large real and synthetic complex datasets.},
  doi       = {10.1145/2939672.2939750},
  file      = {:mai-kdd-2016.pdf:PDF},
  isbn      = {9781450342322},
  keywords  = {DBSCAN, data mining, active learning, density-based clustering, anytime algorithm},
  location  = {San Francisco, California, USA},
  numpages  = {10},
  url       = {https://doi.org/10.1145/2939672.2939750},
}

@Article{lv-nc-2016,
  author   = {Yinghua Lv and Tinghuai Ma and Meili Tang and Jie Cao and Yuan Tian and Abdullah Al-Dhelaan and Mznah Al-Rodhaan},
  title    = {{An efficient and scalable density-based clustering algorithm for datasets with complex structures}},
  journal  = {Neurocomputing},
  year     = {2016},
  volume   = {171},
  pages    = {9 - 22},
  issn     = {0925-2312},
  abstract = {As a research branch of data mining, clustering, as an unsupervised learning scheme, focuses on assigning objects in the dataset into several groups, called clusters, without any prior knowledge. Density-Based Spatial Clustering of Applications with Noise (DBSCAN) is one of the most widely used clustering algorithms for spatial datasets, which can detect any shapes of clusters and can automatically identify noise points. However, there are several troublesome limitations of DBSCAN: (1) the performance of the algorithm depends on two specified parameters, ε and MinPts in which ε represents the maximum radius of a neighborhood from the observing point and MinPts means the minimum number of data points contained in such a neighborhood. (2) The time consumption for searching the nearest neighbors of each object is intolerable in the cluster expansion. (3) Selecting different starting points results in quite different consequences. (4) DBSCAN is unable to identify adjacent clusters of various densities. In addition to these restrictions about DBSCAN mentioned above, the identification of border points is often ignored. In our paper, we successfully solve the above problems. Firstly, we improve the traditional locality sensitive hashing method to implement fast query of nearest neighbors. Secondly, several definitions are redefined on the basis of the influence space of each object, which takes the nearest neighbors and the reverse nearest neighbors into account. The influence space is proved to be sensitive to local density changes to successfully reduce the amount of parameters and identify adjacent clusters of different densities. Moreover, this new relationship based on the influence space makes the insensitivity to the ordering of inputting points possible. Finally, a new concept—core density reachable based on the influence space is put forward which aims to distinguish between border objects and noisy objects. Several experiments are performed which demonstrate that the performance of our proposed algorithm is better than the traditional DBSCAN algorithm and the improved algorithm IS-DBSCAN.},
  doi      = {https://doi.org/10.1016/j.neucom.2015.05.109},
  file     = {:lv-nc-2016.pdf:PDF},
  keywords = {Density-based clustering, Locality sensitive hashing, The influence space, Border objects detecting},
  url      = {http://www.sciencedirect.com/science/article/pii/S0925231215008073},
}

@InProceedings{han-ipdpsw-2016,
  author    = {D. {Han} and A. {Agrawal} and W. {Liao} and A. {Choudhary}},
  title     = {{A Novel Scalable DBSCAN Algorithm with Spark}},
  booktitle = {2016 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)},
  year      = {2016},
  pages     = {1393-1402},
  file      = {:han-ipdpsw-2016.pdf:PDF},
}

@InProceedings{hompes-bnaic-2015,
  author    = {B.F.A. Hompes and J.C.A.M. Buijs and {van der Aalst}, W.M.P. and P.M. Dixit and J. Buurman},
  title     = {{Discovering Deviating Cases and Process Variants Using Trace Clustering}},
  booktitle = {27th Benelux Conference on Artificial Intelligence, 5-6 November 2015, Hasselt, Belgium},
  year      = {2015},
  month     = {nov},
  note      = {27th Benelux Conference on Artificial Intelligence (BNAIC 2015), BNAIC 2015 ; Conference date: 05-11-2015 Through 06-11-2015},
  abstract  = {Information systems supporting business processes generate event data which provide the starting point for a range of process mining techniques.Lion's share of real-life processes are complex and ad-hoc, which creates problems for traditional process mining techniques, that cannot deal with such unstructured processes.Finding mainstream and deviating cases in such data is problematic, since most cases are unique and therefore determining what is normal or exceptional may depend on many factors.Trace clustering aims to group similar cases in order to find variations of the process and to gain novel insights into the process at hand.However, few trace clustering techniques take the context of the process into account and focus on the control-flow perspective only.Outlier detection techniques provide only a binary distinction between normal and exceptional behavior, or depend on a normative process model to be present.As a result, existing techniques are less suited for processes with a high degree of variability.In this paper, we introduce a novel trace clustering technique that is able to find process variants as well as deviating behavior based on a set of selected perspectives.Evaluation on both artificial and real-life event data reveals that additional insights can consequently be achieved.},
  day       = {5},
  file      = {:hompes-bnaic-2015.pdf:PDF},
  language  = {English},
  url       = {http://bnaic2015.org/},
}

@InProceedings{goetz-mlhpc-2015,
  author    = {G\"{o}tz, Markus and Bodenstein, Christian and Riedel, Morris},
  title     = {{HPDBSCAN: Highly Parallel DBSCAN}},
  booktitle = {Proceedings of the Workshop on Machine Learning in High-Performance Computing Environments},
  year      = {2015},
  series    = {MLHPC '15},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Clustering algorithms in the field of data-mining are used to aggregate similar objects into common groups. One of the best-known of these algorithms is called DBSCAN. Its distinct design enables the search for an apriori unknown number of arbitrarily shaped clusters, and at the same time allows to filter out noise. Due to its sequential formulation, the parallelization of DBSCAN renders a challenge. In this paper we present a new parallel approach which we call HPDBSCAN. It employs three major techniques in order to break the sequentiality, empower workload-balancing as well as speed up neighborhood searches in distributed parallel processing environments i) a computation split heuristic for domain decomposition, ii) a data index preprocessing step and iii) a rule-based cluster merging scheme.As a proof-of-concept we implemented HPDBSCAN as an OpenMP/MPI hybrid application. Using real-world data sets, such as a point cloud from the old town of Bremen, Germany, we demonstrate that our implementation is able to achieve a significant speed-up and scale-up in common HPC setups. Moreover, we compare our approach with previous attempts to parallelize DBSCAN showing an order of magnitude improvement in terms of computation time and memory consumption.},
  articleno = {2},
  doi       = {10.1145/2834892.2834894},
  file      = {:goetz-mlhpc-2015.pdf:PDF},
  isbn      = {9781450340069},
  keywords  = {scalable clustering, OpenMP/MPI hybrid, high performance computing, parallel DBSCAN, HPDBSCAN},
  location  = {Austin, Texas},
  numpages  = {10},
  url       = {https://doi.org/10.1145/2834892.2834894},
}

@InProceedings{cordova-hpcs-2015,
  author    = {I. {Cordova} and T. {Moh}},
  title     = {{DBSCAN on Resilient Distributed Datasets}},
  booktitle = {2015 International Conference on High Performance Computing Simulation (HPCS)},
  year      = {2015},
  pages     = {531-540},
  file      = {:cordova-hpcs-2015.pdf:PDF},
}

@InProceedings{patwary-sc-2014,
  author    = {M. M. A. {Patwary} and N. {Satish} and N. {Sundaram} and F. {Manne} and S. {Habib} and P. {Dubey}},
  title     = {{Pardicle: Parallel Approximate Density-Based Clustering}},
  booktitle = {SC '14: Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis},
  year      = {2014},
  pages     = {560-571},
  file      = {:patwary-sc-2014.pdf:PDF},
}

@InProceedings{mann-gvd-2014,
  author    = {Willi Mann and Nikolaus Augsten},
  title     = {{PEL: Position-Enhanced Length Filter for Set Similarity Joins}},
  booktitle = {Proceedings of the 26th GI-Workshop Grundlagen von Datenbanken, Bozen-Bolzano, Italy, October 21st to 24th, 2014},
  year      = {2014},
  editor    = {Friederike Klan and G{\"{u}}nther Specht and Hans Gamper},
  volume    = {1313},
  series    = {{CEUR} Workshop Proceedings},
  pages     = {89--94},
  publisher = {CEUR-WS.org},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/conf/gvd/MannA14.bib},
  file      = {:mann-gvd-2014.pdf:PDF},
  timestamp = {Wed, 12 Feb 2020 16:44:54 +0100},
  url       = {http://ceur-ws.org/Vol-1313/paper\_16.pdf},
}

@Article{he-fcs-2014,
  author     = {He, Yaobin and Tan, Haoyu and Luo, Wuman and Feng, Shengzhong and Fan, Jianping},
  title      = {{MR-DBSCAN: A Scalable MapReduce-Based DBSCAN Algorithm for Heavily Skewed Data}},
  journal    = {Front. Comput. Sci.},
  year       = {2014},
  volume     = {8},
  number     = {1},
  pages      = {83–99},
  month      = feb,
  issn       = {2095-2228},
  abstract   = {DBSCAN (density-based spatial clustering of applications with noise) is an important spatial clustering technique that is widely adopted in numerous applications. As the size of datasets is extremely large nowadays, parallel processing of complex data analysis such as DBSCAN becomes indispensable. However, there are three major drawbacks in the existing parallel DBSCAN algorithms. First, they fail to properly balance the load among parallel tasks, especially when data are heavily skewed. Second, the scalability of these algorithms is limited because not all the critical sub-procedures are parallelized. Third, most of them are not primarily designed for shared-nothing environments, which makes them less portable to emerging parallel processing paradigms. In this paper, we present MR-DBSCAN, a scalable DBSCAN algorithm using MapReduce. In our algorithm, all the critical sub-procedures are fully parallelized. As such, there is no performance bottleneck caused by sequential processing. Most importantly, we propose a novel data partitioning method based on computation cost estimation. The objective is to achieve desirable load balancing even in the context of heavily skewed data. Besides, We conduct our evaluation using real large datasets with up to 1.2 billion points. The experiment results well confirm the efficiency and scalability of MR-DBSCAN.},
  address    = {Berlin, Heidelberg},
  doi        = {10.1007/s11704-013-3158-3},
  file       = {:he-fcs-2014.pdf:PDF},
  issue_date = {February 2014},
  keywords   = {parallel algorithm, load balancing, data mining, data clustering},
  numpages   = {17},
  publisher  = {Springer-Verlag},
  url        = {https://doi.org/10.1007/s11704-013-3158-3},
}

@InProceedings{wang-sigmod-2012,
  author    = {Wang, Jiannan and Li, Guoliang and Feng, Jianhua},
  title     = {{Can We Beat the Prefix Filtering? An Adaptive Framework for Similarity Join and Search}},
  booktitle = {Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data},
  year      = {2012},
  series    = {SIGMOD ’12},
  pages     = {85–96},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2213836.2213847},
  file      = {:wang-sigmod-2012.pdf:PDF},
  isbn      = {9781450312479},
  keywords  = {adaptive framework, cost model, similarity search, prefix filtering, similarity join},
  location  = {Scottsdale, Arizona, USA},
  numpages  = {12},
  url       = {https://doi.org/10.1145/2213836.2213847},
}

@InProceedings{patwary-sc-2012,
  author    = {M. M. A. {Patwary} and D. {Palsetia} and A. {Agrawal} and W. {Liao} and F. {Manne} and A. {Choudhary}},
  title     = {{A new scalable parallel DBSCAN algorithm using the disjoint-set data structure}},
  booktitle = {SC '12: Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis},
  year      = {2012},
  pages     = {1-11},
  file      = {:patwary-sc-2012.pdf:PDF},
}

@InProceedings{dai-cc-2012,
  author    = {B. {Dai} and I. {Lin}},
  title     = {{Efficient Map/Reduce-Based DBSCAN Algorithm with Optimized Data Partition}},
  booktitle = {2012 IEEE Fifth International Conference on Cloud Computing},
  year      = {2012},
  pages     = {59-66},
  file      = {:dai-cc-2012.pdf:PDF},
}

@InProceedings{he-icpads-2011,
  author    = {Y. {He} and H. {Tan} and W. {Luo} and H. {Mao} and D. {Ma} and S. {Feng} and J. {Fan}},
  title     = {{MR-DBSCAN: An Efficient Parallel Density-Based Clustering Algorithm Using MapReduce}},
  booktitle = {2011 IEEE 17th International Conference on Parallel and Distributed Systems},
  year      = {2011},
  pages     = {473-480},
  file      = {:he-icpads-2011.pdf:PDF},
}

@InProceedings{kryszkiewicz-trends-2010,
  author    = {Kryszkiewicz, Marzena and Lasek, Piotr},
  title     = {{TI-DBSCAN: Clustering with DBSCAN by Means of the Triangle Inequality}},
  booktitle = {Rough Sets and Current Trends in Computing},
  year      = {2010},
  editor    = {Szczuka, Marcin and Kryszkiewicz, Marzena and Ramanna, Sheela and Jensen, Richard and Hu, Qinghua},
  pages     = {60--69},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {Grouping data into meaningful clusters is an important data mining task. DBSCAN is recognized as a high quality density-based algorithm for clustering data. It enables both the determination of clusters of any shape and the identification of noise in data. The most time-consuming operation in DBSCAN is the calculation of a neighborhood for each data point. In order to speed up this operation in DBSCAN, the neighborhood calculation is expected to be supported by spatial access methods. DBSCAN, nevertheless, is not efficient in the case of high dimensional data. In this paper, we propose a new efficient TI DBSCAN algorithm and its variant TI-DBSCAN-REF that apply the same clustering methodology as DBSCAN. Unlike DBSCAN, TI-DBSCAN and TI-DBSCAN-REF do not use spatial indices; instead they use the triangle inequality property to quickly reduce the neighborhood search space. The experimental results prove that the new algorithms are up to three orders of magnitude faster than DBSCAN, and efficiently cluster both low and high dimensional data.},
  file      = {:kryszkiewicz-trends-2010.pdf:PDF},
  isbn      = {978-3-642-13529-3},
}

@InProceedings{bose-bpm-2010,
  author    = {Bose, R. P. Jagadeesh Chandra and van der Aalst, Wil M. P.},
  title     = {{Trace Clustering Based on Conserved Patterns: Towards Achieving Better Process Models}},
  booktitle = {Business Process Management Workshops},
  year      = {2010},
  editor    = {Rinderle-Ma, Stefanie and Sadiq, Shazia and Leymann, Frank},
  pages     = {170--181},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {Process mining refers to the extraction of process models from event logs. Real-life processes tend to be less structured and more flexible. Traditional process mining algorithms have problems dealing with such unstructured processes and generate ``spaghetti-like'' process models that are hard to comprehend. An approach to overcome this is to cluster process instances such that each of the resulting clusters correspond to coherent sets of process instances that can each be adequately represented by a process model. In this paper, we present multiple feature sets based on conserved patterns and show that the proposed feature sets have a better performance than contemporary approaches. We evaluate the goodness of the formed clusters using established fitness and comprehensibility metrics defined in the context of process mining. The proposed approach is able to generate clusters such that the process models mined from the clustered traces show a high degree of fitness and comprehensibility. Further, the proposed feature sets can be easily discovered in linear time making it amenable to real-time analysis of large data sets.},
  file      = {:bose-bpm-2010.pdf:PDF},
  isbn      = {978-3-642-12186-9},
}

@Article{viswanath-prl-2009,
  author   = {P. Viswanath and V. {Suresh Babu}},
  title    = {{Rough-DBSCAN: A fast hybrid density based clustering method for large data sets}},
  journal  = {Pattern Recognition Letters},
  year     = {2009},
  volume   = {30},
  number   = {16},
  pages    = {1477 - 1488},
  issn     = {0167-8655},
  abstract = {Density based clustering techniques like DBSCAN are attractive because it can find arbitrary shaped clusters along with noisy outliers. Its time requirement is O(n2) where n is the size of the dataset, and because of this it is not a suitable one to work with large datasets. A solution proposed in the paper is to apply the leaders clustering method first to derive the prototypes called leaders from the dataset which along with prototypes preserves the density information also, then to use these leaders to derive the density based clusters. The proposed hybrid clustering technique called rough-DBSCAN has a time complexity of O(n) only and is analyzed using rough set theory. Experimental studies are done using both synthetic and real world datasets to compare rough-DBSCAN with DBSCAN. It is shown that for large datasets rough-DBSCAN can find a similar clustering as found by the DBSCAN, but is consistently faster than DBSCAN. Also some properties of the leaders as prototypes are formally established.},
  doi      = {https://doi.org/10.1016/j.patrec.2009.08.008},
  file     = {:viswanath-prl-2009.pdf:PDF},
  keywords = {Clustering, Density based clustering, DBSCAN, Leaders, Rough sets},
  url      = {http://www.sciencedirect.com/science/article/pii/S0167865509002153},
}

@InProceedings{song-bpm-2009,
  author    = {Song, Minseok and G{\"u}nther, Christian W. and van der Aalst, Wil M. P.},
  title     = {{Trace Clustering in Process Mining}},
  booktitle = {Business Process Management Workshops},
  year      = {2009},
  editor    = {Ardagna, Danilo and Mecella, Massimo and Yang, Jian},
  pages     = {109--120},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {Process mining has proven to be a valuable tool for analyzing operational process executions based on event logs. Existing techniques perform well on structured processes, but still have problems discovering and visualizing less structured ones. Unfortunately, process mining is most interesting in domains requiring flexibility. A typical example would be the treatment process in a hospital where it is vital that people can deviate to deal with changing circumstances. Here it is useful to provide insights into the actual processes but at the same time there is a lot of diversity leading to complex models that are difficult to interpret. This paper presents an approach using trace clustering, i.e., the event log is split into homogeneous subsets and for each subset a process model is created. We demonstrate that our approach, based on log profiles, can improve process mining results in real flexible environments. To illustrate this we present a real-life case study.},
  file      = {:song-bpm-2009.pdf:PDF},
  isbn      = {978-3-642-00328-8},
}

@Book{cormen-mitpress-2009,
  title     = {{Introduction to Algorithms, Third Edition}},
  publisher = {The MIT Press},
  year      = {2009},
  author    = {Cormen, Thomas H. and Leiserson, Charles E. and Rivest, Ronald L. and Stein, Clifford},
  edition   = {3rd},
  isbn      = {0262033844},
}

@InProceedings{boehm-cikm-2009,
  author    = {B\"{o}hm, Christian and Noll, Robert and Plant, Claudia and Wackersreuther, Bianca},
  title     = {{Density-Based Clustering Using Graphics Processors}},
  booktitle = {Proceedings of the 18th ACM Conference on Information and Knowledge Management},
  year      = {2009},
  series    = {CIKM '09},
  pages     = {661–670},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {During the last few years, GPUs have evolved from simple devices for the display signal preparation into powerful coprocessors that do not only support typical computer graphics tasks but can also be used for general numeric and symbolic computation tasks. As major advantage GPUs provide extremely high parallelism combined with a high bandwidth in memory transfer at low cost. We want to exploit these dvantages in density-based clustering, an important paradigm in clustering since typical algorithms of this category are noise and outlier robust and search for clusters of an arbitrary shape in metric and vector spaces. Moreover, with a time complexity ranging from O(n log n) to O(n2) these algorithms are scalable to large data sets in a database system. In this paper, we propose CUDA-DClust, a massively parallel algorithm for density-based clustering for the use of a Graphics Processing Unit (GPU). While the result of this algorithm is guaranteed to be equivalent to that of DBSCAN, we demonstrate a high speed-up, particularly in combination with a novel index structure for use in GPUs.},
  doi       = {10.1145/1645953.1646038},
  file      = {:boehm-cikm-2009.pdf:PDF},
  isbn      = {9781605585123},
  keywords  = {data mining, performance},
  location  = {Hong Kong, China},
  numpages  = {10},
  url       = {https://doi.org/10.1145/1645953.1646038},
}

@InProceedings{wu-icmlc-2007,
  author    = {Y. {Wu} and J. {Guo} and X. {Zhang}},
  title     = {{A Linear DBSCAN Algorithm Based on LSH}},
  booktitle = {2007 International Conference on Machine Learning and Cybernetics},
  year      = {2007},
  volume    = {5},
  pages     = {2608-2614},
  file      = {:wu-icmlc-2007.pdf:PDF},
}

@InProceedings{chaudhuri-icde-2006,
  author    = {S. {Chaudhuri} and V. {Ganti} and R. {Kaushik}},
  title     = {{A Primitive Operator for Similarity Joins in Data Cleaning}},
  booktitle = {22nd International Conference on Data Engineering (ICDE'06)},
  year      = {2006},
  pages     = {5-5},
  file      = {:chaudhuri-icde-2006.pdf:PDF},
}

@InProceedings{arasu-vldb-2006,
  author    = {Arasu, Arvind and Ganti, Venkatesh and Kaushik, Raghav},
  title     = {{Efficient Exact Set-Similarity Joins}},
  booktitle = {Proceedings of the 32nd International Conference on Very Large Data Bases},
  year      = {2006},
  series    = {VLDB ’06},
  pages     = {918–929},
  publisher = {VLDB Endowment},
  file      = {:arasu-vldb-2006.pdf:PDF},
  location  = {Seoul, Korea},
  numpages  = {12},
}

@InProceedings{januzaj-pkdd-2004,
  author    = {Januzaj, Eshref and Kriegel, Hans-Peter and Pfeifle, Martin},
  title     = {{Scalable Density-Based Distributed Clustering}},
  booktitle = {Knowledge Discovery in Databases: PKDD 2004},
  year      = {2004},
  editor    = {Boulicaut, Jean-Fran{\c{c}}ois and Esposito, Floriana and Giannotti, Fosca and Pedreschi, Dino},
  pages     = {231--244},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {Clustering has become an increasingly important task in analysing huge amounts of data. Traditional applications require that all data has to be located at the site where it is scrutinized. Nowadays, large amounts of heterogeneous, complex data reside on different, independently working computers which are connected to each other via local or wide area networks. In this paper, we propose a scalable density-based distributed clustering algorithm which allows a user-defined trade-off between clustering quality and the number of transmitted objects from the different local sites to a global server site. Our approach consists of the following steps: First, we order all objects located at a local site according to a quality criterion reflecting their suitability to serve as local representatives. Then we send the best of these representatives to a server site where they are clustered with a slightly enhanced density-based clustering algorithm. This approach is very efficient, because the local determination of suitable representatives can be carried out quickly and independently from each other. Furthermore, based on the scalable number of the most suitable local representatives, the global clustering can be done very effectively and efficiently. In our experimental evaluation, we will show that our new scalable density-based distributed clustering approach results in high quality clusterings with scalable transmission cost.},
  file      = {:januzaj-pkdd-2004.pdf:PDF},
  isbn      = {978-3-540-30116-5},
}

@InProceedings{brecheisen-icdm-2004,
  author    = {S. {Brecheisen} and H. -. {Kriegel} and M. {Pfeifle}},
  title     = {{Efficient Density-Based Clustering of Complex Objects}},
  booktitle = {Fourth IEEE International Conference on Data Mining (ICDM'04)},
  year      = {2004},
  pages     = {43-50},
  file      = {:brecheisen-icdm-2004.pdf:PDF},
}

@Article{xiaowei-dmkd-1999,
  author     = {Xu, Xiaowei and J\"{a}ger, Jochen and Kriegel, Hans-Peter},
  title      = {{A Fast Parallel Clustering Algorithm for Large Spatial Databases}},
  journal    = {Data Min. Knowl. Discov.},
  year       = {1999},
  volume     = {3},
  number     = {3},
  pages      = {263–290},
  month      = sep,
  issn       = {1384-5810},
  abstract   = {The clustering algorithm DBSCAN relies on a density-based
  notion of clusters and is designed to discover clusters of
  arbitrary shape as well as to distinguish noise. In this paper, we
  present PDBSCAN, a parallel version of this algorithm. We use
  the ‘shared-nothing’ architecture with multiple
  computers interconnected
  through a network. A fundamental component of a shared-nothing system
  is its distributed data structure. We introduce the dR*-tree,
  a distributed spatial index structure in which the data is spread among
  multiple computers and the indexes of the data are replicated on
  every computer. We implemented our method using a number of
  workstations connected via Ethernet (10 Mbit). A performance
  evaluation shows that PDBSCAN offers nearly linear speedup and has
  excellent scaleup and sizeup behavior.},
  address    = {USA},
  doi        = {10.1023/A:1009884809343},
  file       = {:xiaowei-dmkd-1999.pdf:PDF},
  issue_date = {September 1999},
  keywords   = {distributed algorithms, spatial databases, parallel algorithms, scalable data mining, clustering algorithms, distributed index structures},
  numpages   = {28},
  publisher  = {Kluwer Academic Publishers},
  url        = {https://doi.org/10.1023/A:1009884809343},
}

@InProceedings{ester-vldb-1998,
  author    = {Ester, Martin and Kriegel, Hans-Peter and Sander, J\"{o}rg and Wimmer, Michael and Xu, Xiaowei},
  title     = {{Incremental Clustering for Mining in a Data Warehousing Environment}},
  booktitle = {Proceedings of the 24rd International Conference on Very Large Data Bases},
  year      = {1998},
  series    = {VLDB '98},
  pages     = {323–333},
  address   = {San Francisco, CA, USA},
  publisher = {Morgan Kaufmann Publishers Inc.},
  file      = {:ester-vldb-1998.pdf:PDF},
  isbn      = {1558605665},
  numpages  = {11},
}

@Article{tarjan-acmj-1975,
  author     = {Tarjan, Robert Endre},
  title      = {{Efficiency of a Good But Not Linear Set Union Algorithm}},
  journal    = {J. ACM},
  year       = {1975},
  volume     = {22},
  number     = {2},
  pages      = {215–225},
  month      = apr,
  issn       = {0004-5411},
  address    = {New York, NY, USA},
  doi        = {10.1145/321879.321884},
  file       = {:tarjan-acmj-1975.pdf:PDF},
  issue_date = {April 1975},
  numpages   = {11},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/321879.321884},
}

@Article{paredes-jda-2008,
  author   = {Rodrigo Paredes and Nora Reyes},
  title    = {{Solving similarity joins and range queries in metric spaces with the list of twin clusters}},
  journal  = {Journal of Discrete Algorithms},
  year     = {2009},
  volume   = {7},
  number   = {1},
  pages    = {18 - 35},
  issn     = {1570-8667},
  note     = {Selected papers from the 1st International Workshop on Similarity Search and Applications (SISAP)},
  abstract = {The metric space model abstracts many proximity or similarity problems, where the most frequently considered primitives are range and k-nearest neighbor search, leaving out the similarity join, an extremely important primitive. In fact, despite the great attention that this primitive has received in traditional and even multidimensional databases, little has been done for general metric databases. We solve two variants of the similarity join problem: (1) range joins: Given two sets of objects and a distance threshold r, find all the object pairs (one from each set) at distance at most r; and (2) k-closest pair joins: Find the k closest object pairs (one from each set). For this sake, we devise a new metric index, coined List of Twin Clusters (LTC), which indexes both sets jointly, instead of the natural approach of indexing one or both sets independently. Finally, we show how to use the LTC in order to solve classical range queries. Our results show significant speedups over the basic quadratic-time naive alternative for both join variants, and that the LTC is competitive with the original list of clusters when solving range queries. Furthermore, we show that our technique has a great potential for improvements.},
  doi      = {https://doi.org/10.1016/j.jda.2008.09.012},
  file     = {:paredes-jda-2008.pdf:PDF},
  keywords = {General metric spaces, Indexing methods, Similarity joins},
  url      = {http://www.sciencedirect.com/science/article/pii/S1570866708000774},
}

@Article{rafiei-tkde-2020,
  author  = {D. {Rafiei} and F. {Deng}},
  title   = {{Similarity Join and Similarity Self-Join Size Estimation in a Streaming Environment}},
  journal = {IEEE Transactions on Knowledge and Data Engineering},
  year    = {2020},
  volume  = {32},
  number  = {4},
  pages   = {768-781},
  file    = {:rafiei-tkde-2020.pdf:PDF},
}

@Misc{chen-corr-2020,
  author        = {Lu Chen and Yunjun Gao and Xuan Song and Zheng Li and Xiaoye Miao and Christian S. Jensen},
  title         = {Indexing Metric Spaces for Exact Similarity Search},
  year          = {2020},
  archiveprefix = {arXiv},
  eprint        = {2005.03468},
  file          = {:chen-corr-2020.pdf:PDF},
  primaryclass  = {cs.DB},
}

@InProceedings{boehm-icde-2001,
  author    = {C. {Bohm} and H. -. {Kriegel}},
  title     = {{A cost model and index architecture for the similarity join}},
  booktitle = {Proceedings 17th International Conference on Data Engineering},
  year      = {2001},
  pages     = {411-420},
  file      = {:boehm-icde-2001.pdf:PDF},
}

@Article{jacox-tods-2008,
  author     = {Jacox, Edwin H. and Samet, Hanan},
  title      = {{Metric Space Similarity Joins}},
  journal    = {ACM Trans. Database Syst.},
  year       = {2008},
  volume     = {33},
  number     = {2},
  month      = jun,
  issn       = {0362-5915},
  abstract   = {Similarity join algorithms find pairs of objects that lie within a certain distance ϵ of each other. Algorithms that are adapted from spatial join techniques are designed primarily for data in a vector space and often employ some form of a multidimensional index. For these algorithms, when the data lies in a metric space, the usual solution is to embed the data in vector space and then make use of a multidimensional index. Such an approach has a number of drawbacks when the data is high dimensional as we must eventually find the most discriminating dimensions, which is not trivial. In addition, although the maximum distance between objects increases with dimension, the ability to discriminate between objects in each dimension does not. These drawbacks are overcome via the introduction of a new method called Quickjoin that does not require a multidimensional index and instead adapts techniques used in distance-based indexing for use in a method that is conceptually similar to the Quicksort algorithm. A formal analysis is provided of the Quickjoin method. Experiments show that the Quickjoin method significantly outperforms two existing techniques.},
  address    = {New York, NY, USA},
  articleno  = {7},
  doi        = {10.1145/1366102.1366104},
  file       = {:jacox-tods-2008.pdf:PDF},
  issue_date = {June 2008},
  keywords   = {nearest neighbor queries, range queries, distance-based indexing, external memory algorithms, ranking, Similarity join},
  numpages   = {38},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/1366102.1366104},
}

@Article{hu-tods-2019,
  author     = {Hu, Xiao and Yi, Ke and Tao, Yufei},
  title      = {{Output-Optimal Massively Parallel Algorithms for Similarity Joins}},
  journal    = {ACM Trans. Database Syst.},
  year       = {2019},
  volume     = {44},
  number     = {2},
  month      = apr,
  issn       = {0362-5915},
  abstract   = {Parallel join algorithms have received much attention in recent years due to the rapid development of massively parallel systems such as MapReduce and Spark. In the database theory community, most efforts have been focused on studying worst-case optimal algorithms. However, the worst-case optimality of these join algorithms relies on the hard instances having very large output sizes. In the case of a two-relation join, the hard instance is just a Cartesian product, with an output size that is quadratic in the input size.In practice, however, the output size is usually much smaller. One recent parallel join algorithm by Beame et al. has achieved output-optimality (i.e., its cost is optimal in terms of both the input size and the output size), but their algorithm only works for a 2-relation equi-join and has some imperfections. In this article, we first improve their algorithm to true optimality. Then we design output-optimal algorithms for a large class of similarity joins. Finally, we present a lower bound, which essentially eliminates the possibility of having output-optimal algorithms for any join on more than two relations.},
  address    = {New York, NY, USA},
  articleno  = {6},
  doi        = {10.1145/3311967},
  file       = {:hu-tods-2019.pdf:PDF},
  issue_date = {April 2019},
  keywords   = {similarity joins, output-sensitive algorithms, Parallel computation},
  numpages   = {36},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3311967},
}

@InProceedings{zhang-sigmod-2020,
  author    = {Zhang, Huayi and Cao, Lei and Yan, Yizhou and Madden, Samuel and Rundensteiner, Elke A.},
  title     = {{Continuously Adaptive Similarity Search}},
  booktitle = {Proceedings of the 2020 ACM SIGMOD International Conference on Management of Data},
  year      = {2020},
  series    = {SIGMOD '20},
  pages     = {2601–2616},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Similarity search is the basis for many data analytics techniques, including k-nearest neighbor classification and outlier detection. Similarity search over large data sets relies on i) a distance metric learned from input examples and ii) an index to speed up search based on the learned distance metric. In interactive systems, input to guide the learning of the distance metric may be provided over time. As this new input changes the learned distance metric, a naive approach would adopt the costly process of re-indexing all items after each metric change. In this paper, we propose the first solution, called OASIS, to instantaneously adapt the index to conform to a changing distance metric without this prohibitive re-indexing process. To achieve this, we prove that locality-sensitive hashing (LSH) provides an invariance property, meaning that an LSH index built on the original distance metric is equally effective at supporting similarity search using an updated distance metric as long as the transform matrix learned for the new distance metric satisfies certain properties. This observation allows OASIS to avoid recomputing the index from scratch in most cases. Further, for the rare cases when an adaption of the LSH index is shown to be necessary, we design an efficient incremental LSH update strategy that re-hashes only a small subset of the items in the index. In addition, we develop an efficient distance metric learning strategy that incrementally learns the new metric as inputs are received. Our experimental study using real world public datasets confirms the effectiveness of OASIS at improving the accuracy of various similarity search-based data analytics tasks by instantaneously adapting the distance metric and its associated index in tandem, while achieving an up to 3 orders of magnitude speedup over the state-of-art techniques.},
  doi       = {10.1145/3318464.3380601},
  file      = {:zhang-sigmod-2020.pdf:PDF},
  isbn      = {9781450367356},
  keywords  = {nearest neighbor search, LSH, distance metric learning},
  location  = {Portland, OR, USA},
  numpages  = {16},
  url       = {https://doi.org/10.1145/3318464.3380601},
}

@InProceedings{zarman-sigmod-2020,
  author    = {Zamanian, Erfan and Shun, Julian and Binnig, Carsten and Kraska, Tim},
  title     = {{Chiller: Contention-Centric Transaction Execution and Data Partitioning for Modern Networks}},
  booktitle = {Proceedings of the 2020 ACM SIGMOD International Conference on Management of Data},
  year      = {2020},
  series    = {SIGMOD '20},
  pages     = {511–526},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Distributed transactions on high-overhead TCP/IP-based networks were conventionally considered to be prohibitively expensive and thus were avoided at all costs. To that end, the primary goal of almost any existing partitioning scheme is to minimize the number of cross-partition transactions. However, with the new generation of fast RDMA-enabled networks, this assumption is no longer valid. In fact, recent work has shown that distributed databases can scale even when the majority of transactions are cross-partition. In this paper, we first make the case that the new bottleneck which hinders truly scalable transaction processing in modern RDMA-enabled databases is data contention, and that optimizing for data contention leads to different partitioning layouts than optimizing for the number of distributed transactions. We then present Chiller, a new approach to data partitioning and transaction execution, which aims to minimize data contention for both local and distributed transactions. Finally, we evaluate Chiller using various workloads, and show that our partitioning and execution strategy outperforms traditional partitioning techniques which try to avoid distributed transactions, by up to a factor of 2.},
  doi       = {10.1145/3318464.3389724},
  file      = {:zarman-sigmod-2020.pdf:PDF},
  isbn      = {9781450367356},
  keywords  = {distributed transactions, RDMA, data partitioning},
  location  = {Portland, OR, USA},
  numpages  = {16},
  url       = {https://doi.org/10.1145/3318464.3389724},
}

@Article{xue-taco-2020,
  author     = {Xue, Jiachen and Vijaykumar, T. N. and Thottethodi, Mithuna},
  title      = {{Network Interface Architecture for Remote Indirect Memory Access (RIMA) in Datacenters}},
  journal    = {ACM Trans. Archit. Code Optim.},
  year       = {2020},
  volume     = {17},
  number     = {2},
  month      = may,
  issn       = {1544-3566},
  abstract   = {Remote Direct Memory Access (RDMA) fabrics such as InfiniBand and Converged Ethernet report latency shorter by a factor of 50 than TCP. As such, RDMA is a potential replacement for TCP in datacenters (DCs) running low-latency applications, such as Web search and memcached. InfiniBand’s Shared Receive Queues (SRQs), which use two-sided send/recv verbs (i.e., channel semantics), reduce the amount of pre-allocated, pinned memory (despite optimizations such as InfiniBand’s on-demand paging (ODP)) for message buffers. However, SRQs are limited fundamentally to a single message size per queue, which incurs either memory wastage or significant programmer burden for typical DC traffic of an arbitrary number (level of burstiness) of messages of arbitrary size.We propose remote indirect memory access (RIMA), which avoids these pitfalls by providing (1) network interface card (NIC) microarchitecture support for novel queue semantics and (2) a new “verb” called append. To append a sender’s message to a shared queue, the receiver NIC atomically increments the queue’s tail pointer by the incoming message’s size and places the message in the newly created space. As in traditional RDMA, the NIC is responsible for pointer lookup, address translation, and enforcing virtual memory protections. This indirection of specifying a queue (and not its tail pointer, which remains hidden from senders) handles the typical DC traffic of an arbitrary sender sending an arbitrary number of messages of arbitrary size. Because RIMA’s simple hardware adds only 1--2 ns to the multi-mu s message latency, RIMA achieves the same message latency and throughput as InfiniBand SRQ with unlimited buffering. Running memcached traffic on a 30-node InfiniBand cluster, we show that at similar, low programmer effort, RIMA achieves significantly smaller memory footprint than SRQ. However, while SRQ can be crafted to minimize memory footprint by expending significant programming effort, RIMA provides those benefits with little programmer effort. For memcached traffic, a high-performance key-value cache (FastKV) using RIMA achieves either 3\texttimes{} lower 96 th-percentile latency or significantly better throughput or memory footprint than FastKV using RDMA.},
  address    = {New York, NY, USA},
  articleno  = {13},
  doi        = {10.1145/3374215},
  file       = {:xue-taco-2020.pdf:PDF},
  issue_date = {June 2020},
  keywords   = {remote direct memory access, Indirection, Network Interface, receive queue management, remote append},
  numpages   = {22},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3374215},
}

@InProceedings{qi-ssdm-2020,
  author    = {Qi, Shuyao and Bouros, Panagiotis and Mamoulis, Nikos},
  title     = {{Top-k String Similarity Joins}},
  booktitle = {32nd International Conference on Scientific and Statistical Database Management},
  year      = {2020},
  series    = {SSDBM 2020},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Top-k joins have been extensively studied in relational databases as ranking operations when every object has, among others, at least one ranking attribute. However, the focus has mostly been the case when the join attributes are of primitive data types (e.g., numerical values) and the join predicate is equality. In this work, we consider string objects assigned such ranking attributes or simply scores. Given two collection of string objects and a string similarity measure (e.g., the Edit distance), we introduce the top-k string similarity join () which returns k sufficiently similar pairs of objects with respect to a similarity threshold ϵ, which have the highest combined score computed by a monotone aggregate function γ (e.g., SUM). Such a join operation finds application in data integration, data cleaning and de-duplication scenarios, and in emerging scientific fields such as bioinformatics. We investigate how existing top-k join methods can be adapted and optimized for , taking into account the semantics and the special characteristics of string similarity joins. We present techniques to avoid computing the entire string join and indexing that enables pruning candidates with respect to both the string join and the ranking component of the query. Our extensive experimental analysis demonstrates the efficiency of our methodology for by comparing solutions that either prioritize the ranking/join component or are able to handle both components of the query at the same time.},
  articleno = {9},
  doi       = {10.1145/3400903.3400922},
  file      = {:qi-ssdm-2020.pdf:PDF},
  isbn      = {9781450388146},
  keywords  = {similarity queries, string joins, top-k joins, top-k queries, Ranking},
  location  = {Vienna, Austria},
  numpages  = {12},
  url       = {https://doi.org/10.1145/3400903.3400922},
}

@Article{lee-access-2020,
  author  = {T. {Lee} and T. {Chung} and J. {Kim}},
  title   = {{Optimized Signature Selection for Efficient String Similarity Search}},
  journal = {IEEE Access},
  year    = {2020},
  volume  = {8},
  pages   = {98193-98204},
  file    = {:lee-access-2020.pdf:PDF},
}

@InProceedings{Yang2020,
  author    = {Z. {Yang} and B. {Zheng} and G. {Li} and X. {Zhao} and X. {Zhou} and C. S. {Jensen}},
  title     = {{Adaptive Top-k Overlap Set Similarity Joins}},
  booktitle = {2020 IEEE 36th International Conference on Data Engineering (ICDE)},
  year      = {2020},
  pages     = {1081-1092},
  file      = {:yang-icde-2020.pdf:PDF},
}

@InProceedings{abdelhamid-aidm-2020,
  author    = {Abdelhamid, Ahmed S. and Aref, Walid G.},
  title     = {{PartLy: Learning Data Partitioning for Distributed Data Stream Processing}},
  booktitle = {Proceedings of the Third International Workshop on Exploiting Artificial Intelligence Techniques for Data Management},
  year      = {2020},
  series    = {aiDM '20},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Data partitioning plays a critical role in data stream processing. Current data partitioning techniques use simple, static heuristics that do not incorporate feedback about the quality of the partitioning decision (i.e., fire and forget strategy). Hence, the data partitioner often repeatedly chooses the same decision. In this paper, we argue that reinforcement learning techniques can be applied to address this problem. The use of artificial neural networks can facilitate learning of efficient partitioning policies. We identify the challenges that emerge when applying machine learning techniques to the data partitioning problem for distributed data stream processing. Furthermore, we introduce PartLy, a proof-of-concept data partitioner, and present preliminary results that indicate PartLy's potential to match the performance of state-of-the-art techniques in terms of partitioning quality, while minimizing storage and processing overheads.},
  articleno = {6},
  doi       = {10.1145/3401071.3401660},
  file      = {:abdelhamid-aidm-2020.pdf:PDF},
  isbn      = {9781450380294},
  location  = {Portland, Oregon},
  numpages  = {4},
  url       = {https://doi.org/10.1145/3401071.3401660},
}

@InProceedings{boehm-dwkd-2002,
  author    = {B{\"o}hm, Christian and Krebs, Florian and Kriegel, Hans-Peter},
  title     = {{Optimal Dimension Order: A Generic Technique for the Similarity Join}},
  booktitle = {Data Warehousing and Knowledge Discovery},
  year      = {2002},
  editor    = {Kambayashi, Yahiko and Winiwarter, Werner and Arikawa, Masatoshi},
  pages     = {135--149},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {The similarity join is an important database primitive which has been successfully applied to speed up applications such as similarity search, data analysis and data mining. The similarity join combines two point sets of a multidimensional vector space such that the result contains all point pairs where the distance does not exceed a given Parameter ∈. Although the similarity join is clearly CPU bound, most previous publications propose strategies that primarily improve the I/O performance. Only little effort has been taken to address CPU aspects. In this Paper, we show that most of the computational overhead is dedicated to the final distance computations between the feature vectors. Consequently, we propose a generic technique to reduce the response time of a large number of basic algorithms for the similarity join. It is applicable for index based join algorithms as well as for most join algorithms based on hashing or sorting. Our technique, called Optimal Dimension Order, is able to avoid and accelerate distance calculations between feature vectors by a careful order of the dimensions. The order is determined according to a probability model. In the experimental evaluation, we show that our technique yields high performance improvements for various underlying similarity join algorithms such as the R-tree similarity join, the breadth- first-R-tree join, the Multipage Index Join, and the ∈-Grid-Order.},
  file      = {:boehm-dwkd-2002.pdf:PDF},
  isbn      = {978-3-540-46145-6},
}

@Article{wang-tkde-2013,
  author  = {W. {Wang} and J. {Qin} and C. {Xiao} and X. {Lin} and H. T. {Shen}},
  title   = {{VChunkJoin: An Efficient Algorithm for Edit Similarity Joins}},
  journal = {IEEE Transactions on Knowledge and Data Engineering},
  year    = {2013},
  volume  = {25},
  number  = {8},
  pages   = {1916-1929},
  file    = {:wang-tkde-2013.pdf:PDF},
}

@InProceedings{yang-icde-2020-2,
  author    = {J. {Yang} and W. {Zhang} and X. {Wang} and Y. {Zhang} and X. {Lin}},
  title     = {{Distributed Streaming Set Similarity Join}},
  booktitle = {2020 IEEE 36th International Conference on Data Engineering (ICDE)},
  year      = {2020},
  pages     = {565-576},
  file      = {:yang-icde-2020-2.pdf:PDF},
}

@InProceedings{zhang-icde-2020,
  author    = {J. {Zhang} and Y. {Lu} and D. G. {Spampinato} and F. {Franchetti}},
  title     = {{FESIA: A Fast and SIMD-Efficient Set Intersection Approach on Modern CPUs}},
  booktitle = {2020 IEEE 36th International Conference on Data Engineering (ICDE)},
  year      = {2020},
  pages     = {1465-1476},
  file      = {:zhang-icde-2020.pdf:PDF},
}

@InProceedings{crotty-icde-2020,
  author    = {A. {Crotty} and A. {Galakatos} and T. {Kraska}},
  title     = {Getting Swole: Generating Access-Aware Code with Predicate Pullups},
  booktitle = {2020 IEEE 36th International Conference on Data Engineering (ICDE)},
  year      = {2020},
  pages     = {1273-1284},
  file      = {:crotty-icde-2020.pdf:PDF},
}

@InProceedings{idreos-sigmod-2020,
  author    = {Idreos, Stratos and Callaghan, Mark},
  title     = {{Key-Value Storage Engines}},
  booktitle = {Proceedings of the 2020 ACM SIGMOD International Conference on Management of Data},
  year      = {2020},
  series    = {SIGMOD '20},
  pages     = {2667–2672},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Key-value stores are everywhere. They power a diverse set of data-driven applications across both industry and science. Key-value stores are used as stand-alone NoSQL systems but they are also used as a part of more complex pipelines and systems such as machine learning and relational systems. In this tutorial, we survey the state-of-the-art approaches on how the core storage engine of a key-value store system is designed. We focus on several critical components of the engine, starting with the core data structures to lay out data across the memory hierarchy. We also discuss design issues related to caching, timestamps, concurrency control, updates, shifting workloads, as well as mixed workloads with both analytical and transactional characteristics. We cover designs that are read-optimized, write-optimized as well as hybrids. We draw examples from several state-of-the-art systems but we also put everything together in a general framework which allows us to model storage engine designs under a single unified model and reason about the expected behavior of diverse designs. In addition, we show that given the vast number of possible storage engine designs and their complexity, there is a need to be able to describe and communicate design decisions at a high level descriptive language and we present a first version of such a language. We then use that framework to present several open challenges in the field, especially in terms of supporting increasingly more diverse and dynamic applications in the era of data science and AI, including neural networks, graphs, and data versioning.},
  doi       = {10.1145/3318464.3383133},
  file      = {:idreos-sigmod-2020.pdf:PDF},
  isbn      = {9781450367356},
  keywords  = {key-value stores, self-designing systems},
  location  = {Portland, OR, USA},
  numpages  = {6},
  url       = {https://doi.org/10.1145/3318464.3383133},
}

@InProceedings{paredes-sisap-2008,
  author    = {R. {Paredes} and N. {Reyes}},
  title     = {{List of Twin Clusters: A Data Structure for Similarity Joins in Metric Spaces}},
  booktitle = {First International Workshop on Similarity Search and Applications (sisap 2008)},
  year      = {2008},
  pages     = {131-138},
  file      = {:paredes-sisap-2008.pdf:PDF},
}

@InProceedings{fent-icde-2020,
  author    = {P. {Fent} and A. v. {Renen} and A. {Kipf} and V. {Leis} and T. {Neumann} and A. {Kemper}},
  title     = {{Low-Latency Communication for Fast DBMS Using RDMA and Shared Memory}},
  booktitle = {2020 IEEE 36th International Conference on Data Engineering (ICDE)},
  year      = {2020},
  pages     = {1477-1488},
  file      = {:fent-icde-2020.pdf:PDF},
}

@Article{mathew-vldb-2020,
  author     = {Mathew, Ajit and Min, Changwoo},
  title      = {{HydraList: A Scalable in-Memory Index Using Asynchronous Updates and Partial Replication}},
  journal    = {Proc. VLDB Endow.},
  year       = {2020},
  volume     = {13},
  number     = {9},
  pages      = {1332–1345},
  month      = may,
  issn       = {2150-8097},
  abstract   = {Increased capacity of main memory has led to the rise of in-memory databases. With disk access eliminated, efficiency of index structures has become critical for performance in these systems. An ideal index structure should exhibit high performance for a wide variety of workloads, be scalable, and efficient in handling large data sets. Unfortunately, our evaluation shows that most state-of-the-art index structures fail to meet these three goals. For an index to be performant with large data sets, it should ideally have time complexity independent of the key set size. To ensure scalability, critical sections should be minimized and synchronization mechanisms carefully designed to reduce cache coherence traffic. Moreover, complex memory hierarchy in servers makes data placement and memory access patterns important for high performance across all workload types.In this paper, we present HydraList, a new concurrent, scalable, and high performance in-memory index structure for massive multi-core machines. The key insight behind our design of HydraList is that an index structure can be divided into two components (search and data layers) which can be updated independently leading to lower synchronization overhead. By isolating the search layer, we are able to replicate it across NUMA nodes and reduce cache misses and remote memory accesses. As a result, our evaluation shows that HydraList outperforms other index structures especially in a variety of workloads and key types.},
  doi        = {10.14778/3397230.3397232},
  file       = {:mathew-vldb-2020.pdf:PDF},
  issue_date = {May 2020},
  numpages   = {14},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3397230.3397232},
}

@InProceedings{segond-akddm-2011,
  author    = {Segond, Marc and Borgelt, Christian},
  title     = {{Item Set Mining Based on Cover Similarity}},
  booktitle = {Advances in Knowledge Discovery and Data Mining},
  year      = {2011},
  editor    = {Huang, Joshua Zhexue and Cao, Longbing and Srivastava, Jaideep},
  pages     = {493--505},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {While in standard frequent item set mining one tries to find item sets the support of which exceeds a user-specified threshold (minimum support) in a database of transactions, we strive to find item sets for which the similarity of their covers (that is, the sets of transactions containing them) exceeds a user-specified threshold. Starting from the generalized Jaccard index we extend our approach to a total of twelve specific similarity measures and a generalized form. We present an efficient mining algorithm that is inspired by the well-known Eclat algorithm and its improvements. By reporting experiments on several benchmark data sets we demonstrate that the runtime penalty incurred by the more complex (but also more informative) item set assessment is bearable and that the approach yields high quality and more useful item sets.},
  file      = {:segond-akddm-2011.pdf:PDF},
  isbn      = {978-3-642-20847-8},
}

@Article{gruber-pvldb-2023,
  author     = {Gruber, Ferdinand and Bandle, Maximilian and Engelke, Alexis and Neumann, Thomas and Giceva, Jana},
  title      = {{Bringing Compiling Databases to RISC Architectures}},
  journal    = {Proc. VLDB Endow.},
  year       = {2023},
  volume     = {16},
  number     = {6},
  pages      = {1222–1234},
  month      = {apr},
  issn       = {2150-8097},
  abstract   = {Current hardware development greatly influences the design decisions of modern database systems. For many modern performance-focused database systems, query compilation emerged as an integral part and different approaches for code generation evolved, making use of standard compilers, general-purpose compiler libraries, or domain-specific code generators. However, development primarily focused on the dominating x86-64 server architecture; but neglected current hardware developments towards other CPU architectures like ARM and other RISC architectures.Therefore, we explore the design space of code generation in database systems considering a variety of state-of-the-art compilation approaches with a set of qualitative and quantitative metrics. Based on our findings, we have developed a new code generator called FireARM for AArch64-based systems in our database system, Umbra. We identify general as well as architecture-specific challenges for custom code generation in databases and provide potential solutions to abstract or handle them.Furthermore, we present an extensive evaluation of different compilation approaches in Umbra on a wide variety of x86-64 and ARM machines. In particular, we compare quantitative performance characteristics such as compilation latency and query throughput.Our results show that using standard languages and compiler infrastructures reduces the barrier to employing query compilation and allows for high performance on big data sets, while domain-specific code generators can achieve a significantly lower compilation overhead and allow for better targeting of new architectures.},
  doi        = {10.14778/3583140.3583142},
  file       = {:gruber-pvldb-2023.pdf:PDF},
  issue_date = {February 2023},
  numpages   = {13},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3583140.3583142},
}

@Article{li-pvldb-2022,
  author     = {Li, Guoliang and Dong, Haowen and Zhang, Chao},
  title      = {{Cloud Databases: New Techniques, Challenges, and Opportunities}},
  journal    = {Proc. VLDB Endow.},
  year       = {2022},
  volume     = {15},
  number     = {12},
  pages      = {3758–3761},
  month      = {aug},
  issn       = {2150-8097},
  abstract   = {As database vendors are increasingly moving towards the cloud data service, i.e., databases as a service (DBaaS), cloud databases have become prevalent. Compared with the early cloud-hosted databases, the new generation of cloud databases, also known as cloud-native databases, seek for higher elasticity and lower cost by developing new techniques, e.g., compute-storage disaggregation and the log is the database. To better harness the power of these cloud databases, it is important to study and compare the pros and cons of their key techniques. In this tutorial, we offer a comprehensive survey of cloud-native databases. Based on various system architectures, we introduce a taxonomy for the state-of-the-art cloud-native OLTP databases and OLAP databases, respectively. We then take a deep dive into their key techniques regarding storage management, transaction processing, analytical processing, data replication, serverless computing, database recovery, and security. Finally, we discuss the research challenges and opportunities.},
  doi        = {10.14778/3554821.3554893},
  file       = {:li-pvldb-2022.pdf:PDF},
  issue_date = {August 2022},
  numpages   = {4},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3554821.3554893},
}

@Article{abadi-cacm-2022,
  author     = {Abadi, Daniel and Ailamaki, Anastasia and Andersen, David and Bailis, Peter and Balazinska, Magdalena and Bernstein, Philip A. and Boncz, Peter and Chaudhuri, Surajit and Cheung, Alvin and Doan, Anhai and Dong, Luna and Franklin, Michael J. and Freire, Juliana and Halevy, Alon and Hellerstein, Joseph M. and Idreos, Stratos and Kossmann, Donald and Kraska, Tim and Krishnamurthy, Sailesh and Markl, Volker and Melnik, Sergey and Milo, Tova and Mohan, C. and Neumann, Thomas and Ooi, Beng Chin and Ozcan, Fatma and Patel, Jignesh and Pavlo, Andrew and Popa, Raluca and Ramakrishnan, Raghu and Re, Christopher and Stonebraker, Michael and Suciu, Dan},
  title      = {{The Seattle Report on Database Research}},
  journal    = {Commun. ACM},
  year       = {2022},
  volume     = {65},
  number     = {8},
  pages      = {72–79},
  month      = {jul},
  issn       = {0001-0782},
  abstract   = {Every five years, a group of the leading database researchers meet to reflect on their community's impact on the computing industry as well as examine current research challenges.},
  address    = {New York, NY, USA},
  doi        = {10.1145/3524284},
  file       = {:abadi-cacm-2022.pdf:PDF},
  issue_date = {August 2022},
  numpages   = {8},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3524284},
}

@InProceedings{ziegler-damon-2022,
  author    = {Ziegler, Tobias and Bindiganavile Mohan, Dwarakanandan and Leis, Viktor and Binnig, Carsten},
  title     = {{EFA: A Viable Alternative to RDMA over InfiniBand for DBMSs?}},
  booktitle = {Proceedings of the 18th International Workshop on Data Management on New Hardware},
  year      = {2022},
  series    = {DaMoN '22},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {RDMA over InfiniBand offers high bandwidth and low latency which provides many benefits for distributed DBMSs. However, in the cloud RDMA is still not widely available. Instead, cloud providers often invest in their own high-speed networking technology and start to expose their own native networking interfaces. For example, the largest cloud provider, Amazon Web Services (AWS), introduced instances with Elastic Fabric Adapter (EFA) in 2018. In this paper, we aim to analyze EFA as an alternative to RDMA in the cloud by performing an in-depth and systematic evaluation.},
  articleno = {10},
  doi       = {10.1145/3533737.3538506},
  file      = {:ziegler-damon-2022.pdf:PDF},
  isbn      = {9781450393782},
  location  = {Philadelphia, PA, USA},
  numpages  = {5},
  url       = {https://doi.org/10.1145/3533737.3538506},
}

@InProceedings{brock-phdthesis-2022,
  author = {Benjamin Brock},
  title  = {{RDMA-Based Distributed Data Structures for Large-Scale Parallel Systems}},
  year   = {2022},
  file   = {:brock-phdthesis-2022.pdf:PDF},
}

@InProceedings{ziegler-sigmod-2022,
  author    = {Ziegler, Tobias and Binnig, Carsten and Leis, Viktor},
  title     = {{ScaleStore: A Fast and Cost-Efficient Storage Engine Using DRAM, NVMe, and RDMA}},
  booktitle = {Proceedings of the 2022 International Conference on Management of Data},
  year      = {2022},
  series    = {SIGMOD '22},
  pages     = {685–699},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this paper, we propose ScaleStore, a novel distributed storage engine that exploits DRAM caching, NVMe storage, and RDMA networking to achieve high performance, cost-efficiency, and scalability at the same time. Using low latency RDMA messages, ScaleStore implements a transparent memory abstraction that provides access to the aggregated DRAM memory and NVMe storage of all nodes. In contrast to existing distributed RDMA designs such as NAM-DB or FaRM, ScaleStore stores cold data on NVMe SSDs (flash), lowering the overall hardware cost significantly. The core of ScaleStore is a distributed caching strategy that dynamically decides which data to keep in memory (and which on SSDs) based on the workload. The caching protocol also provides strong consistency in the presence of concurrent data modifications. Our evaluation shows that ScaleStore achieves high performance for various types of workloads (read/write-dominated, uniform/skewed) even when the data size is larger than the aggregated memory of all nodes. We further show that ScaleStore can efficiently handle dynamic workload changes and supports elasticity.},
  doi       = {10.1145/3514221.3526187},
  file      = {:ziegler-sigmod-2022.pdf:PDF},
  isbn      = {9781450392495},
  keywords  = {RDMA, distributed storage engine, transaction processing, flash},
  location  = {Philadelphia, PA, USA},
  numpages  = {15},
  url       = {https://doi.org/10.1145/3514221.3526187},
}

@InProceedings{proebstl-adms-2021,
  author    = {Magdalena Pr{\"{o}}bstl and Philipp Fent and Maximilian E. Sch{\"{u}}le and Moritz Sichert and Thomas Neumann and Alfons Kemper},
  title     = {{One Buffer Manager to Rule Them All: Using Distributed Memory with Cache Coherence over {RDMA}}},
  booktitle = {International Workshop on Accelerating Analytics and Data Management Systems Using Modern Processor and Storage Architectures, ADMS@VLDB 2021, Copenhagen, Denmark, August 16, 2021},
  year      = {2021},
  editor    = {Rajesh Bordawekar and Tirthankar Lahiri},
  pages     = {17--26},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/conf/adms/ProbstlFSS0K21.bib},
  file      = {:pröbstl-adms-2021.pdf:PDF},
  timestamp = {Mon, 27 Sep 2021 16:54:32 +0200},
  url       = {http://www.adms-conf.org/2021-camera-ready/probstl\_adms21.pdf},
}

@InProceedings{he-icde-2021,
  author    = {He, Zeyu and Li, Zhifang and Peng, Xiaoshuang and Weng, Chuliang},
  title     = {{DS2: Handling Data Skew Using Data Stealings over High-Speed Networks}},
  booktitle = {2021 IEEE 37th International Conference on Data Engineering (ICDE)},
  year      = {2021},
  pages     = {1865-1870},
  doi       = {10.1109/ICDE51399.2021.00168},
  file      = {:he-icde-2021.pdf:PDF},
}

@Article{guerraoui-corr-2021,
  author     = {Rachid Guerraoui and Antoine Murat and Athanasios Xygkis},
  title      = {{Velos: One-sided Paxos for {RDMA} applications}},
  journal    = {CoRR},
  year       = {2021},
  volume     = {abs/2106.08676},
  bibsource  = {dblp computer science bibliography, https://dblp.org},
  biburl     = {https://dblp.org/rec/journals/corr/abs-2106-08676.bib},
  eprint     = {2106.08676},
  eprinttype = {arXiv},
  file       = {:guerraoui-corr-2021.pdf:PDF},
  timestamp  = {Tue, 29 Jun 2021 16:55:04 +0200},
  url        = {https://arxiv.org/abs/2106.08676},
}

@Misc{kumaigorodski-btw-2021,
  author       = {Kumaigorodski, Alexander and Lutz, Clemens and Markl, Volker},
  title        = {{Fast CSV Loading Using GPUs and RDMA for In-Memory Data Processing}},
  howpublished = {BTW 2021},
  year         = {2021},
  file         = {:kumaigorodski-btw-2021.pdf:PDF},
  isbn         = {978-3-88579-705-0},
  pages        = {19--38},
  pissn        = {1617-5468},
  publisher    = {Gesellschaft für Informatik, Bonn},
}

@InProceedings{thostrup-sigmod-2021,
  author    = {Thostrup, Lasse and Skrzypczak, Jan and Jasny, Matthias and Ziegler, Tobias and Binnig, Carsten},
  title     = {{DFI: The Data Flow Interface for High-Speed Networks}},
  booktitle = {Proceedings of the 2021 International Conference on Management of Data},
  year      = {2021},
  series    = {SIGMOD '21},
  pages     = {1825–1837},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this paper, we propose the Data Flow Interface (DFI) as a way to make it easier for data processing systems to exploit high-speed networks without the need to deal with the complexity of RDMA. By lifting the level of abstraction, DFI factors out much of the complexity of network communication and makes it easier for developers to declaratively express how data should be efficiently routed to accomplish a given distributed data processing task. As we show in our experiments, DFI is able to support a wide variety of data-centric applications with high performance at a low complexity for the applications.},
  doi       = {10.1145/3448016.3452816},
  file      = {:thostrup-sigmod-2021.pdf:PDF},
  isbn      = {9781450383431},
  keywords  = {network interfaces, high-speed networks, modern hardware, data management, rdma},
  location  = {Virtual Event, China},
  numpages  = {13},
  url       = {https://doi.org/10.1145/3448016.3452816},
}

@Article{qin-pvldb-2020,
  author     = {Qin, Jianbin and Wang, Wei and Xiao, Chuan and Zhang, Ying},
  title      = {{Similarity Query Processing for High-Dimensional Data}},
  journal    = {Proc. VLDB Endow.},
  year       = {2020},
  volume     = {13},
  number     = {12},
  pages      = {3437–3440},
  month      = {aug},
  issn       = {2150-8097},
  abstract   = {Similarity query processing has been an active research topic for several decades. It is an essential procedure in a wide range of applications. Recently, embedding and auto-encoding methods as well as pre-trained models have gained popularity. They basically deal with high-dimensional data, and this trend brings new opportunities and challenges to similarity query processing for high-dimensional data. Meanwhile, new techniques have emerged to tackle this long-standing problem theoretically and empirically. In this tutorial, we summarize existing solutions, especially recent advancements from both database (DB) and machine learning (ML) communities, and analyze their strengths and weaknesses. We review exact and approximate methods such as cover tree, locality sensitive hashing, product quantization, and proximity graphs. We also discuss the selectivity estimation problem and show how researchers are bringing in state-of-the-art ML techniques to address the problem. By highlighting the strong connections between DB and ML, we hope that this tutorial provides an impetus towards new ML for DB solutions and vice versa.},
  doi        = {10.14778/3415478.3415564},
  file       = {:qin-pvldb-2020.pdf:PDF},
  issue_date = {August 2020},
  numpages   = {4},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3415478.3415564},
}

@Article{lemire-corr-2018,
  author     = {Daniel Lemire and Gregory Ssi Yan Kai and Owen Kaser},
  title      = {{Consistently faster and smaller compressed bitmaps with Roaring}},
  journal    = {CoRR},
  year       = {2016},
  volume     = {abs/1603.06549},
  bibsource  = {dblp computer science bibliography, https://dblp.org},
  biburl     = {https://dblp.org/rec/journals/corr/LemireKK16.bib},
  eprint     = {1603.06549},
  eprinttype = {arXiv},
  file       = {:lemire-corr-2016.pdf:PDF},
  timestamp  = {Mon, 13 Aug 2018 16:47:01 +0200},
  url        = {http://arxiv.org/abs/1603.06549},
}

@Article{lemire-corr-2018-2,
  author     = {Daniel Lemire and Owen Kaser and Nathan Kurz and Luca Deri and Chris O'Hara and Fran{\c{c}}ois Saint{-}Jacques and Gregory Ssi Yan Kai},
  title      = {{Roaring Bitmaps: Implementation of an Optimized Software Library}},
  journal    = {CoRR},
  year       = {2017},
  volume     = {abs/1709.07821},
  bibsource  = {dblp computer science bibliography, https://dblp.org},
  biburl     = {https://dblp.org/rec/journals/corr/abs-1709-07821.bib},
  eprint     = {1709.07821},
  eprinttype = {arXiv},
  file       = {:lemire-corr-2017.pdf:PDF},
  timestamp  = {Mon, 13 Aug 2018 16:49:15 +0200},
  url        = {http://arxiv.org/abs/1709.07821},
}

@InProceedings{lang-sigmod-2020,
  author    = {Lang, Harald and Beischl, Alexander and Leis, Viktor and Boncz, Peter and Neumann, Thomas and Kemper, Alfons},
  title     = {{Tree-Encoded Bitmaps}},
  booktitle = {Proceedings of the 2020 ACM SIGMOD International Conference on Management of Data},
  year      = {2020},
  series    = {SIGMOD '20},
  pages     = {937–967},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {We propose a novel method to represent compressed bitmaps. Similarly to existing bitmap compression schemes, we exploit the compression potential of bitmaps populated with consecutive identical bits, i.e., 0-runs and 1-runs. But in contrast to prior work, our approach employs a binary tree structure to represent runs of various lengths. Leaf nodes in the upper tree levels thereby represent longer runs, and vice versa. The tree-based representation results in high compression ratios and enables efficient random access, which in turn allows for the fast intersection of bitmaps. Our experimental analysis with randomly generated bitmaps shows that our approach significantly improves over state-of-the-art compression techniques when bitmaps are dense and/or only barely clustered. Further, we evaluate our approach with real-world data sets, showing that our tree-encoded bitmaps can save up to one third of the space over existing techniques.},
  doi       = {10.1145/3318464.3380588},
  file      = {:lang-sigmod-2020.pdf:PDF},
  isbn      = {9781450367356},
  keywords  = {bitmap, succinct, indexing, data structure, compression},
  location  = {Portland, OR, USA},
  numpages  = {31},
  url       = {https://doi.org/10.1145/3318464.3380588},
}

@InProceedings{vuppalapati-nsdi-2020,
  author    = {Midhul Vuppalapati and Justin Miron and Rachit Agarwal and Dan Truong and Ashish Motivala and Thierry Cruanes},
  title     = {{Building An Elastic Query Engine on Disaggregated Storage}},
  booktitle = {17th USENIX Symposium on Networked Systems Design and Implementation (NSDI 20)},
  year      = {2020},
  pages     = {449--462},
  address   = {Santa Clara, CA},
  month     = feb,
  publisher = {USENIX Association},
  file      = {:vuppalapati-nsdi-2020.pdf:PDF},
  isbn      = {978-1-939133-13-7},
  url       = {https://www.usenix.org/conference/nsdi20/presentation/vuppalapati},
}

@InProceedings{verbitski-sigmod-2017,
  author    = {Verbitski, Alexandre and Gupta, Anurag and Saha, Debanjan and Brahmadesam, Murali and Gupta, Kamal and Mittal, Raman and Krishnamurthy, Sailesh and Maurice, Sandor and Kharatishvili, Tengiz and Bao, Xiaofeng},
  title     = {{Amazon Aurora: Design Considerations for High Throughput Cloud-Native Relational Databases}},
  booktitle = {Proceedings of the 2017 ACM International Conference on Management of Data},
  year      = {2017},
  series    = {SIGMOD '17},
  pages     = {1041–1052},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Amazon Aurora is a relational database service for OLTP workloads offered as part of Amazon Web Services (AWS). In this paper, we describe the architecture of Aurora and the design considerations leading to that architecture. We believe the central constraint in high throughput data processing has moved from compute and storage to the network. Aurora brings a novel architecture to the relational database to address this constraint, most notably by pushing redo processing to a multi-tenant scale-out storage service, purpose-built for Aurora. We describe how doing so not only reduces network traffic, but also allows for fast crash recovery, failovers to replicas without loss of data, and fault-tolerant, self-healing storage. We then describe how Aurora achieves consensus on durable state across numerous storage nodes using an efficient asynchronous scheme, avoiding expensive and chatty recovery protocols. Finally, having operated Aurora as a production service for over 18 months, we share the lessons we have learnt from our customers on what modern cloud applications expect from databases.},
  doi       = {10.1145/3035918.3056101},
  file      = {:verbitski-sigmod-2017.pdf:PDF},
  isbn      = {9781450341974},
  keywords  = {distributed systems, oltp, replication, databases, log processing, quorum models, performance, recovery},
  location  = {Chicago, Illinois, USA},
  numpages  = {12},
  url       = {https://doi.org/10.1145/3035918.3056101},
}

@Article{ziegler-sigmod-2023,
  author     = {Ziegler, Tobias and Nelson-Slivon, Jacob and Leis, Viktor and Binnig, Carsten},
  title      = {{Design Guidelines for Correct, Efficient, and Scalable Synchronization Using One-Sided RDMA}},
  journal    = {Proc. ACM Manag. Data},
  year       = {2023},
  volume     = {1},
  number     = {2},
  month      = {jun},
  abstract   = {Remote data structures built with one-sided Remote Direct Memory Access (RDMA) are at the heart of many disaggregated database management systems today. Concurrent access to these data structures by thousands of remote workers necessitates a highly efficient synchronization scheme. Remarkably, our investigation reveals that existing synchronization schemes display substantial variations in performance and scalability. Even worse, some schemes do not correctly synchronize, resulting in rare and hard-to-detect data corruption. Motivated by these observations, we conduct the first comprehensive analysis of one-sided synchronization techniques and provide general principles for correct synchronization using one-sided RDMA. Our research demonstrates that adherence to these principles not only guarantees correctness but also results in substantial performance enhancements.},
  address    = {New York, NY, USA},
  articleno  = {131},
  doi        = {10.1145/3589276},
  file       = {:ziegler-sigmod-2023.pdf:PDF},
  issue_date = {June 2023},
  keywords   = {synchronization, distributed database management systems, RDMA},
  numpages   = {26},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3589276},
}

@InProceedings{maschi-damon-2023,
  author    = {Maschi, Fabio and Alonso, Gustavo},
  title     = {{The Difficult Balance Between Modern Hardware and Conventional CPUs}},
  booktitle = {Proceedings of the 19th International Workshop on Data Management on New Hardware},
  year      = {2023},
  series    = {DaMoN '23},
  pages     = {53–62},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Research has demonstrated the potential of accelerators in a wide range of use cases. However, there is a growing imbalance between modern hardware and the CPUs that submit the workload. Recent studies of GPUs on real systems have shown that many servers are often needed per accelerator to generate a high enough load so the computing power is leveraged. This fact is often ignored in research, although it often determines the actual feasibility and overall efficiency of a deployment. In this paper, we conduct a detailed study of the possible configurations and overall cost efficiency of deploying an FPGA-based accelerator on a commercial search engine. First, we show that there are many possible configurations balancing the upstream system and the way the accelerator is configured. Of these configurations, not all of them are suitable in practice, even if they provide some of the highest throughput. Second, we analyse the cost of a deployment capable of sustaining the required workload of the commercial search engine. We examine deployments both on-premises and in the cloud with and without FPGAs and with different board models. The results show that, while FPGAs have the potential to significantly improve overall performance, the performance imbalance between their host CPUs and the FPGAs can make the deployments economically unattractive. These findings are intended to inform the development and deployment of accelerators by showing what is needed on the CPU side to make them effective and also to provide important insights into their end-to-end integration within existing systems.},
  doi       = {10.1145/3592980.3595314},
  file      = {:maschi-damon-2023.pdf:PDF},
  isbn      = {9798400701917},
  keywords  = {hardware accelerators, cloud computing, distributed systems, FPGA},
  location  = {Seattle, WA, USA},
  numpages  = {10},
  url       = {https://doi.org/10.1145/3592980.3595314},
}

@InProceedings{jasny-damon-2023,
  author    = {Jasny, Matthias and Thostrup, Lasse and Binnig, Carsten},
  title     = {{Zero-Sided RDMA: Network-Driven Data Shuffling}},
  booktitle = {Proceedings of the 19th International Workshop on Data Management on New Hardware},
  year      = {2023},
  series    = {DaMoN '23},
  pages     = {82–85},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this paper, we present a novel communication scheme called zero-sided RDMA, enabling data exchange as a native network service using a programmable switch. In contrast to one- or two-sided RDMA, in zero-sided RDMA, neither the sender nor the receiver is actively involved in data exchange. Zero-sided RDMA thus enables efficient RDMA-based data shuffling between heterogeneous hardware devices in a disaggregated setup. In our initial evaluation, we show that zero-sided RDMA can outperform existing one-sided RDMA-based schemes due to offloading the coordination to the network and new optimizations that are only possible by coordinating the data exchange on the switch.},
  doi       = {10.1145/3592980.3595302},
  file      = {:jasny-damon-2023.pdf:PDF},
  isbn      = {9798400701917},
  location  = {Seattle, WA, USA},
  numpages  = {4},
  url       = {https://doi.org/10.1145/3592980.3595302},
}

@InProceedings{wang-sigmod-2022,
  author    = {Wang, Qing and Lu, Youyou and Shu, Jiwu},
  title     = {{Sherman: A Write-Optimized Distributed B+Tree Index on Disaggregated Memory}},
  booktitle = {Proceedings of the 2022 International Conference on Management of Data},
  year      = {2022},
  series    = {SIGMOD '22},
  pages     = {1033–1048},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Memory disaggregation architecture physically separates CPU and memory into independent components, which are connected via high-speed RDMA networks, greatly improving resource utilization of databases. However, such an architecture poses unique challenges to data indexing due to limited RDMA semantics and near-zero computation power at memory-side. Existing indexes supporting disaggregated memory either suffer from low write performance, or require hardware modification. This paper presents Sherman, a write-optimized distributed B+Tree index on disaggregated memory that delivers high performance with commodity RDMA NICs. Sherman combines RDMA hardware features and RDMA-friendly software techniques to boost index write performance from three angles. First, to reduce round trips, Sherman coalesces dependent RDMA commands by leveraging in-order delivery property of RDMA. Second, to accelerate concurrent accesses, Sherman introduces a hierarchical lock that exploits on-chip memory of RDMA NICs. Finally, to mitigate write amplification, Sherman tailors the data structure layout of B+Tree with a two-level version mechanism. Our evaluation shows that, Sherman is one order of magnitude faster in terms of both throughput and 99th percentile latency on typical write-intensive workloads, compared with state-of-the-art designs.},
  doi       = {10.1145/3514221.3517824},
  file      = {:wang-sigmod-2022.pdf:PDF},
  isbn      = {9781450392495},
  keywords  = {index, RDMA, disaggregated memory},
  location  = {Philadelphia, PA, USA},
  numpages  = {16},
  url       = {https://doi.org/10.1145/3514221.3517824},
}

@Article{wang-pvldb-2022,
  author     = {Wang, Ruihong and Wang, Jianguo and Idreos, Stratos and \"{O}zsu, M. Tamer and Aref, Walid G.},
  title      = {{The Case for Distributed Shared-Memory Databases with RDMA-Enabled Memory Disaggregation}},
  journal    = {Proc. VLDB Endow.},
  year       = {2022},
  volume     = {16},
  number     = {1},
  pages      = {15–22},
  month      = {sep},
  issn       = {2150-8097},
  abstract   = {Memory disaggregation (MD) allows for scalable and elastic data center design by separating compute (CPU) from memory. With MD, compute and memory are no longer coupled into the same server box. Instead, they are connected to each other via ultra-fast networking such as RDMA. MD can bring many advantages, e.g., higher memory utilization, better independent scaling (of compute and memory), and lower cost of ownership. This paper makes the case that MD can fuel the next wave of innovation on database systems. We observe that MD revives the great debate of "shared what" in the database community. We envision that distributed shared-memory databases (DSM-DB, for short) - that have not received much attention before - can be promising in the future with MD. We present a list of challenges and opportunities that can inspire next steps in system design making the case for DSM-DB.},
  doi        = {10.14778/3561261.3561263},
  file       = {:wang-pvldb-2022.pdf:PDF},
  issue_date = {September 2022},
  numpages   = {8},
  publisher  = {VLDB Endowment},
  url        = {https://doi.org/10.14778/3561261.3561263},
}

@Article{salama-databull-2017,
  author  = {Abdallah Salama and Carsten Binnig and Tim Kraska and Ansgar Scherp and Tobias Ziegler},
  title   = {{Rethinking Distributed Query Execution on High-Speed Networks}},
  journal = {IEEE Data Eng. Bull.},
  year    = {2017},
  volume  = {40},
  number  = {1},
  pages   = {27--37},
  file    = {:salama-databull-2017.pdf:PDF},
  url     = {http://tubiblio.ulb.tu-darmstadt.de/105219/},
}

@Article{ziegler-dbspektrum-2020,
  author    = {Tobias Ziegler and Viktor Leis and Carsten Binnig},
  title     = {{RDMA Communciation Patterns}},
  journal   = {Datenbank-Spektrum},
  year      = {2020},
  volume    = {20},
  number    = {3},
  pages     = {199--210},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/journals/dbsk/ZieglerLB20.bib},
  doi       = {10.1007/s13222-020-00355-7},
  file      = {:ziegler-dbspektrum-2020.pdf:PDF},
  timestamp = {Fri, 14 May 2021 08:32:54 +0200},
  url       = {https://doi.org/10.1007/s13222-020-00355-7},
}

@InProceedings{wang-adms-2020,
  author    = {Tinggang Wang and Shuo Yang and Hideaki Kimura and Garret Swart and Spyros Blanas},
  title     = {{Efficient Usage of One-Sided RDMA for Linear Probing}},
  booktitle = {International Workshop on Accelerating Analytics and Data Management Systems Using Modern Processor and Storage Architectures, ADMS@VLDB 2020, Tokyo, Japan, August 31, 2020},
  year      = {2020},
  editor    = {Rajesh Bordawekar and Tirthankar Lahiri},
  pages     = {1--13},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/conf/adms/WangYKSB20.bib},
  file      = {:wang-adms-2020.pdf:PDF},
  timestamp = {Tue, 18 Jan 2022 09:45:51 +0100},
  url       = {http://www.adms-conf.org/2020-camera-ready/ADMS20\_06.pdf},
}

@Comment{jabref-meta: databaseType:bibtex;}
